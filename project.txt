================================================================================
FILE: .env.local  (size: 596 bytes)
================================================================================
GITHUB_USERNAME=gimesha-adikari

GITHUB_TOKEN=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

GITHUB_TOPIC=portfolio

GITHUB_INCLUDE_PRIVATE=true
GITHUB_INCLUDE_FORKS=true
GITHUB_INCLUDE_ARCHIVED=true
GITHUB_OWNER_ONLY=true
GITHUB_ENABLE_README_EXTRAS=true

CONTENT_OWNER=gimesha-adikari
CONTENT_TOKEN=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
CONTENT_REPO=site-content
CONTENT_BRANCH=main
CONTENT_REVALIDATE=300
CONTENT_DEBUG=true

AUTH=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

================================================================================
FILE: .git/COMMIT_EDITMSG  (size: 24 bytes)
================================================================================
feat: initial portfolio

================================================================================
FILE: .git/config  (size: 269 bytes)
================================================================================
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
[remote "origin"]
	url = https://github.com/gimesha-adikari/portfolio.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "main"]
	remote = origin
	merge = refs/heads/main

================================================================================
FILE: .git/description  (size: 73 bytes)
================================================================================
Unnamed repository; edit this file 'description' to name the repository.

================================================================================
FILE: .git/HEAD  (size: 21 bytes)
================================================================================
ref: refs/heads/main

================================================================================
FILE: .git/hooks/applypatch-msg.sample  (size: 478 bytes)
================================================================================
#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:

================================================================================
FILE: .git/hooks/commit-msg.sample  (size: 896 bytes)
================================================================================
#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}

================================================================================
FILE: .git/hooks/fsmonitor-watchman.sample  (size: 4726 bytes)
================================================================================
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}

================================================================================
FILE: .git/hooks/post-update.sample  (size: 189 bytes)
================================================================================
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info

================================================================================
FILE: .git/hooks/pre-applypatch.sample  (size: 424 bytes)
================================================================================
#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:

================================================================================
FILE: .git/hooks/pre-commit.sample  (size: 1643 bytes)
================================================================================
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --

================================================================================
FILE: .git/hooks/pre-merge-commit.sample  (size: 416 bytes)
================================================================================
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git merge" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message to
# stderr if it wants to stop the merge commit.
#
# To enable this hook, rename this file to "pre-merge-commit".

. git-sh-setup
test -x "$GIT_DIR/hooks/pre-commit" &&
        exec "$GIT_DIR/hooks/pre-commit"
:

================================================================================
FILE: .git/hooks/pre-push.sample  (size: 1374 bytes)
================================================================================
#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0

================================================================================
FILE: .git/hooks/pre-rebase.sample  (size: 4898 bytes)
================================================================================
#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The "pre-rebase" hook is run just before "git rebase" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

publish=next
basebranch="$1"
if test "$#" = 2
then
	topic="refs/heads/$2"
else
	topic=`git symbolic-ref HEAD` ||
	exit 0 ;# we do not interrupt rebasing detached HEAD
fi

case "$topic" in
refs/heads/??/*)
	;;
*)
	exit 0 ;# we do not interrupt others.
	;;
esac

# Now we are dealing with a topic branch being rebased
# on top of master.  Is it OK to rebase it?

# Does the topic really exist?
git show-ref -q "$topic" || {
	echo >&2 "No such branch $topic"
	exit 1
}

# Is topic fully merged to master?
not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
if test -z "$not_in_master"
then
	echo >&2 "$topic is fully merged to master; better remove it."
	exit 1 ;# we could allow it, but there is no point.
fi

# Is topic ever merged to next?  If so you should not be rebasing it.
only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
only_next_2=`git rev-list ^master           ${publish} | sort`
if test "$only_next_1" = "$only_next_2"
then
	not_in_topic=`git rev-list "^$topic" master`
	if test -z "$not_in_topic"
	then
		echo >&2 "$topic is already up to date with master"
		exit 1 ;# we could allow it, but there is no point.
	else
		exit 0
	fi
else
	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
	/usr/bin/perl -e '
		my $topic = $ARGV[0];
		my $msg = "* $topic has commits already merged to public branch:\n";
		my (%not_in_next) = map {
			/^([0-9a-f]+) /;
			($1 => 1);
		} split(/\n/, $ARGV[1]);
		for my $elem (map {
				/^([0-9a-f]+) (.*)$/;
				[$1 => $2];
			} split(/\n/, $ARGV[2])) {
			if (!exists $not_in_next{$elem->[0]}) {
				if ($msg) {
					print STDERR $msg;
					undef $msg;
				}
				print STDERR " $elem->[1]\n";
			}
		}
	' "$topic" "$not_in_next" "$not_in_master"
	exit 1
fi

<<\DOC_END

This sample hook safeguards topic branches that have been
published from being rewound.

The workflow assumed here is:

 * Once a topic branch forks from "master", "master" is never
   merged into it again (either directly or indirectly).

 * Once a topic branch is fully cooked and merged into "master",
   it is deleted.  If you need to build on top of it to correct
   earlier mistakes, a new topic branch is created by forking at
   the tip of the "master".  This is not strictly necessary, but
   it makes it easier to keep your history simple.

 * Whenever you need to test or publish your changes to topic
   branches, merge them into "next" branch.

The script, being an example, hardcodes the publish branch name
to be "next", but it is trivial to make it configurable via
$GIT_DIR/config mechanism.

With this workflow, you would want to know:

(1) ... if a topic branch has ever been merged to "next".  Young
    topic branches can have stupid mistakes you would rather
    clean up before publishing, and things that have not been
    merged into other branches can be easily rebased without
    affecting other people.  But once it is published, you would
    not want to rewind it.

(2) ... if a topic branch has been fully merged to "master".
    Then you can delete it.  More importantly, you should not
    build on top of it -- other people may already want to
    change things related to the topic as patches against your
    "master", so if you need further changes, it is better to
    fork the topic (perhaps with the same name) afresh from the
    tip of "master".

Let's look at this example:

		   o---o---o---o---o---o---o---o---o---o "next"
		  /       /           /           /
		 /   a---a---b A     /           /
		/   /               /           /
	       /   /   c---c---c---c B         /
	      /   /   /             \         /
	     /   /   /   b---b C     \       /
	    /   /   /   /             \     /
    ---o---o---o---o---o---o---o---o---o---o---o "master"


A, B and C are topic branches.

 * A has one fix since it was merged up to "next".

 * B has finished.  It has been fully merged up to "master" and "next",
   and is ready to be deleted.

 * C has not merged to "next" at all.

We would want to allow C to be rebased, refuse A, and encourage
B to be deleted.

To compute (1):

	git rev-list ^master ^topic next
	git rev-list ^master        next

	if these match, topic has not merged in next at all.

To compute (2):

	git rev-list master..topic

	if this is empty, it is fully merged to "master".

DOC_END

================================================================================
FILE: .git/hooks/pre-receive.sample  (size: 544 bytes)
================================================================================
#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi

================================================================================
FILE: .git/hooks/prepare-commit-msg.sample  (size: 1492 bytes)
================================================================================
#!/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# This hook includes three examples. The first one removes the
# "# Please enter the commit message..." help message.
#
# The second includes the output of "git diff --name-status -r"
# into the message, just before the "git status" output.  It is
# commented because it doesn't cope with --amend or with squashed
# commits.
#
# The third example adds a Signed-off-by line to the message, that can
# still be edited.  This is rarely a good idea.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

# case "$COMMIT_SOURCE,$SHA1" in
#  ,|template,)
#    /usr/bin/perl -i.bak -pe '
#       print "\n" . `git diff --cached --name-status -r`
# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
#  *) ;;
# esac

# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
# if test -z "$COMMIT_SOURCE"
# then
#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
# fi

================================================================================
FILE: .git/hooks/push-to-checkout.sample  (size: 2783 bytes)
================================================================================
#!/bin/sh

# An example hook script to update a checked-out tree on a git push.
#
# This hook is invoked by git-receive-pack(1) when it reacts to git
# push and updates reference(s) in its repository, and when the push
# tries to update the branch that is currently checked out and the
# receive.denyCurrentBranch configuration variable is set to
# updateInstead.
#
# By default, such a push is refused if the working tree and the index
# of the remote repository has any difference from the currently
# checked out commit; when both the working tree and the index match
# the current commit, they are updated to match the newly pushed tip
# of the branch. This hook is to be used to override the default
# behaviour; however the code below reimplements the default behaviour
# as a starting point for convenient modification.
#
# The hook receives the commit with which the tip of the current
# branch is going to be updated:
commit=$1

# It can exit with a non-zero status to refuse the push (when it does
# so, it must not modify the index or the working tree).
die () {
	echo >&2 "$*"
	exit 1
}

# Or it can make any necessary changes to the working tree and to the
# index to bring them to the desired state when the tip of the current
# branch is updated to the new commit, and exit with a zero status.
#
# For example, the hook can simply run git read-tree -u -m HEAD "$1"
# in order to emulate git fetch that is run in the reverse direction
# with git push, as the two-tree form of git read-tree -u -m is
# essentially the same as git switch or git checkout that switches
# branches while keeping the local changes in the working tree that do
# not interfere with the difference between the branches.

# The below is a more-or-less exact translation to shell of the C code
# for the default behaviour for git's push-to-checkout hook defined in
# the push_to_deploy() function in builtin/receive-pack.c.
#
# Note that the hook will be executed from the repository directory,
# not from the working tree, so if you want to perform operations on
# the working tree, you will have to adapt your code accordingly, e.g.
# by adding "cd .." or using relative paths.

if ! git update-index -q --ignore-submodules --refresh
then
	die "Up-to-date check failed"
fi

if ! git diff-files --quiet --ignore-submodules --
then
	die "Working directory has unstaged changes"
fi

# This is a rough translation of:
#
#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
if git cat-file -e HEAD 2>/dev/null
then
	head=HEAD
else
	head=$(git hash-object -t tree --stdin </dev/null)
fi

if ! git diff-index --quiet --cached --ignore-submodules $head --
then
	die "Working directory has staged changes"
fi

if ! git read-tree -u -m "$commit"
then
	die "Could not update working tree to new HEAD"
fi

================================================================================
FILE: .git/hooks/sendemail-validate.sample  (size: 2308 bytes)
================================================================================
#!/bin/sh

# An example hook script to validate a patch (and/or patch series) before
# sending it via email.
#
# The hook should exit with non-zero status after issuing an appropriate
# message if it wants to prevent the email(s) from being sent.
#
# To enable this hook, rename this file to "sendemail-validate".
#
# By default, it will only check that the patch(es) can be applied on top of
# the default upstream branch without conflicts in a secondary worktree. After
# validation (successful or not) of the last patch of a series, the worktree
# will be deleted.
#
# The following config variables can be set to change the default remote and
# remote ref that are used to apply the patches against:
#
#   sendemail.validateRemote (default: origin)
#   sendemail.validateRemoteRef (default: HEAD)
#
# Replace the TODO placeholders with appropriate checks according to your
# needs.

validate_cover_letter () {
	file="$1"
	# TODO: Replace with appropriate checks (e.g. spell checking).
	true
}

validate_patch () {
	file="$1"
	# Ensure that the patch applies without conflicts.
	git am -3 "$file" || return
	# TODO: Replace with appropriate checks for this patch
	# (e.g. checkpatch.pl).
	true
}

validate_series () {
	# TODO: Replace with appropriate checks for the whole series
	# (e.g. quick build, coding style checks, etc.).
	true
}

# main -------------------------------------------------------------------------

if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
then
	remote=$(git config --default origin --get sendemail.validateRemote) &&
	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
	git config --replace-all sendemail.validateWorktree "$worktree"
else
	worktree=$(git config --get sendemail.validateWorktree)
fi || {
	echo "sendemail-validate: error: failed to prepare worktree" >&2
	exit 1
}

unset GIT_DIR GIT_WORK_TREE
cd "$worktree" &&

if grep -q "^diff --git " "$1"
then
	validate_patch "$1"
else
	validate_cover_letter "$1"
fi &&

if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
then
	git config --unset-all sendemail.validateWorktree &&
	trap 'git worktree remove -ff "$worktree"' EXIT &&
	validate_series
fi

================================================================================
FILE: .git/hooks/update.sample  (size: 3650 bytes)
================================================================================
#!/bin/sh
#
# An example hook script to block unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#
# To enable this hook, rename this file to "update".
#
# Config
# ------
# hooks.allowunannotated
#   This boolean sets whether unannotated tags will be allowed into the
#   repository.  By default they won't be.
# hooks.allowdeletetag
#   This boolean sets whether deleting tags will be allowed in the
#   repository.  By default they won't be.
# hooks.allowmodifytag
#   This boolean sets whether a tag may be modified after creation. By default
#   it won't be.
# hooks.allowdeletebranch
#   This boolean sets whether deleting branches will be allowed in the
#   repository.  By default they won't be.
# hooks.denycreatebranch
#   This boolean sets whether remotely creating branches will be denied
#   in the repository.  By default this is allowed.
#

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
allowunannotated=$(git config --type=bool hooks.allowunannotated)
allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
allowmodifytag=$(git config --type=bool hooks.allowmodifytag)

# check for no description
projectdesc=$(sed -e '1q' "$GIT_DIR/description")
case "$projectdesc" in
"Unnamed repository"* | "")
	echo "*** Project description file hasn't been set" >&2
	exit 1
	;;
esac

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		if [ "$allowunannotated" != "true" ]; then
			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
			exit 1
		fi
		;;
	refs/tags/*,delete)
		# delete tag
		if [ "$allowdeletetag" != "true" ]; then
			echo "*** Deleting a tag is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/tags/*,tag)
		# annotated tag
		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
		then
			echo "*** Tag '$refname' already exists." >&2
			echo "*** Modifying a tag is not allowed in this repository." >&2
			exit 1
		fi
		;;
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
			echo "*** Creating a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/remotes/*,commit)
		# tracking branch
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0

================================================================================
FILE: .git/index  (size: 6588 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/info/exclude  (size: 240 bytes)
================================================================================
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~

================================================================================
FILE: .git/logs/HEAD  (size: 184 bytes)
================================================================================
0000000000000000000000000000000000000000 130dec05475142b3dc3d7d93d8af14d59cfeb0ee Gimesha Nirmal <gimeshanirmal23@gmail.com> 1756965407 +0530	commit (initial): feat: initial portfolio

================================================================================
FILE: .git/logs/refs/heads/main  (size: 184 bytes)
================================================================================
0000000000000000000000000000000000000000 130dec05475142b3dc3d7d93d8af14d59cfeb0ee Gimesha Nirmal <gimeshanirmal23@gmail.com> 1756965407 +0530	commit (initial): feat: initial portfolio

================================================================================
FILE: .git/logs/refs/remotes/origin/main  (size: 157 bytes)
================================================================================
0000000000000000000000000000000000000000 130dec05475142b3dc3d7d93d8af14d59cfeb0ee Gimesha Nirmal <gimeshanirmal23@gmail.com> 1756966321 +0530	update by push

================================================================================
FILE: .git/objects/00/e7e95872f976e4dc42a3519ef4cd8abdf0e799  (size: 759 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/02/b10c39e27b179f98786922cf0c5d499ea98066  (size: 50 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/03/6a0369ea734ef6bdcbe251665cd0da8b85811d  (size: 45727 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/04/e7d272aa9450aeba9155afeec65a03f94a37a3  (size: 64 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/09/0b7ee00e78840db514ec3b5ce33318bb42ad40  (size: 56 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/0b/872d82d9c39f70bff219b3b4b60145430f8984  (size: 247 bytes)
================================================================================
xÝJ1F½|!ôÖF¡J¶éW¡´xY¶É´Ìdµ}{³?¥Ä\ùæµ¡5nîÎÄdg
|¢\Æ®WÐIRÚm3¶\Ì.oÙd|q.,©Ú Ä}{ËVÅëtù³£;blE]WÚ¿àWÑÊs¢X®Ü¢ïÐv±Ako2¶Ñï9t_¯¦óÁL(î¤©ÎÈ(ô¿
|mÅ·Y ½¿zÿéjKjêÇò)lî¢ß÷Õi÷^GTOêãó'¨ö²_ÁüC©£Ò<Í¸¾ìæF¼;Òøä4ú

================================================================================
FILE: .git/objects/0d/d011f0278fcd876801c889c9824c6d3dac559b  (size: 639 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/0e/e2341051837df26b162c9286a337aa5eaae433  (size: 529 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/10/6ede202b5829a1f23400bd7fa20cf42a468bfd  (size: 37194 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/13/0dec05475142b3dc3d7d93d8af14d59cfeb0ee  (size: 142 bytes)
================================================================================
x¥AÂ09ç¾#!´EqãÆÆm-5
æÿDð³ÒÎîXrýN+3)a(zçSpÔ3G"%²Ü{ò4ÞðÖ¥T¸Kæ×à!5.ó·/ZºÍ9ÈzK¾Â±s¾5OØÁ¡iiÛVþÏb&zÙD¥=xªSY¥eßDÿ

================================================================================
FILE: .git/objects/18/d2aec2518caa43bbf062e4227bec8d9c1631c9  (size: 61 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/19/378f26c40f7ba542c39f949ac5fd7fd41e2bd3  (size: 838 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/1a/dc56f6e06784dd9a3e957abc5d32e14043b23c  (size: 159 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/1c/2fda565b94d0f2b94cb65ba7cca866e7a25478  (size: 146 bytes)
================================================================================
xeA
Â0E]z®m\¸WÁ¥h/0i&mpljfß´ºÜÍ÷ÿÃÁÀf·]Up |?Hg²hd vM>!ÞdÂê×Ë¢£õâÚ düÔ¶gØ³§Q!Ò#èÜT§Ë7æ¬AE	)v:d¼=ýym¯(³ý'ÖKñóÅ69A

================================================================================
FILE: .git/objects/1d/06648efed6a21b5f453087cfaee09dcc244669  (size: 286 bytes)
================================================================================
x­=kÃ0;ëW^@ê
@ íXèX(dûl«XÎÄ`üß«·éÕ aÝÝã÷toÑ·Û;©zc	JðõùjkðÆT5rÆJ£A¸x2º
ìabàW/|	µ>eüËñ
ø}ªÒ?(FÈG>7±X*_í*à,*Cø&ÐF\Ì°&è­!Sn¼%ê°5´Pè¯¬8æ¤v(Ököº(/â0§?&ÎuR¨¿Oòþt]Å¶²¿metd:;;û>7SIv}'\ÚºKÕv©ýôâ
?°ùÇwG?ÓàËýÉ£«i^3ctnµ:%ouòé}¡§æ/

================================================================================
FILE: .git/objects/1d/4ce5377b6f3d4b08756fda48da9495706ca206  (size: 54 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/21/dde7ad5c03893c5b206b35e2abbda1ce2baea8  (size: 39855 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/31/51339ce0af5de35a1f002ea772cf0fca71ebb9  (size: 397 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/33/f73fdfaaa4fdc00987d622339ab187bee93e2b  (size: 533 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/35/bdd07d3b656da538eeb09b3d32e0e86363c965  (size: 647 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/36/27923d85ca029d03beea31739d7b5fee1b9e2f  (size: 736 bytes)
================================================================================
x½TÛj1ís ÿ0,¥Ø`ÙØq/¸kCRúPhCÀ>@d­vWµnHÚÄÆòíæK:+Çéfëæ¥Ð}YF:3sæÒ,`øv<~!5.Àg¡;£ Ñ|íäýñÑñ_ÅÌh@ñ@3(LaAÉ'| Ã<Tà>m¼µ;ÎÐãñìåñà·/«o,¨^
]¿ö«¤÷uÇ]¸¿û	_*¹4äÆ)¨Ýxô jmëÔÚsª3gDß¨<À+¸ kÅu¨ómCi^9ãE3­ózk.TÄ:sTh8çáÖ8LV¨
Ó3ntÕä,ã9Å ¯4Âh¨z êÎøªÓÍ®ÇCå4tvVMVÙo3nC`zN&ENVT6ë1®s£YApE(ÊÌmJå°
nØ*DÐËê:¨*ð¬{®È-­dÒº_'8/QK=0U`FqVyÁ­Êz09ä¾¬3ß9¾)+Áh¾4·BÉkçBrÕì©3èÇÎÀqú~ÅdZ{H_« wP8Ô@A-y^Mj0#=*fÕÛWÔv:¬ÓY³;uµû/Ã³äëéõko¡t<n®5ñ»Ñ¼Ü»¯·ÍÌ
g*{(GüV)º,y
%É+y°û«õ?-GÍp±©²Ø	Ås%¢Xb¤47ÜM*¦Ã'3Ì8Nù3:Ðð'qþ" ¯	)îï~¥YÛØl¯ëhÖ*ïÀ½zÁ=Nê-ÕMX)]LÒ°%`C,²vENÀ®É0}R²jÙ&dûTsû0Íÿ?<u¬Äáaø:ðÿø«£'&ÏýCØçKM>WOhxÆê: ®n·Ep;JÓîâËÇ #íG

================================================================================
FILE: .git/objects/39/827a747092a9f0289172e19f0b1bc0909e49ea  (size: 51 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/3a/8a2a7f7291a1cf1948bb5b6b7b8ce45c403fb6  (size: 322 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/3d/38735b45c6b6814e117ed2781826a831b07f8b  (size: 538 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/44/70c4e338b8ccae5d3e113f70a798a01e9e6e6f  (size: 474655 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/4a/60dde7c30893ac1a80ebde09f678ff7447cc7a  (size: 3535 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/55/6d3c3fdcb334a01a8371f38aff4960fc41dc7d  (size: 3477 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/5e/8313a55211ec84875e08a2a205879eb5242a30  (size: 56 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/6c/34ef09e30cfb3c2dc767e7a3a883fb7108647e  (size: 53 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/70/59fe95adc36c465aed2b0e65920c34060c06a0  (size: 93 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/70/6b84737930baabdfbb063901a5170e47d1d97f  (size: 53 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/77/34804aa15f145e84fb0de9d0072c00f315b81d  (size: 51565 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/77/851f1e848e628cb254289a4a6f6a2ce79805f4  (size: 1435 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/78/7b96cc7b099f326e97bddcd426a8b410fa32cd  (size: 162 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/79/2442bf944938baf4915913d89d38aafff8da28  (size: 399 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/7a/6af9e6015bf665a4d62abeba0e8dec721cc7e5  (size: 56 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/7d/80bc7f0a1899998d8704250457b449c6d2a5a4  (size: 813 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/7d/eff3421061185bde3e11c740bd0d322e23a36a  (size: 83 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/80/f708f1c13c3a21a91272956cce54bcb16f8e0c  (size: 375 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/81/73d0c5f041fc36f1e00c608cfb6efbde31e236  (size: 289 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/83/0fb594ca2970a827555c28a253b097367e08d8  (size: 179 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/84/29b916ee0aee41a0654c5515b55b05ca09be2a  (size: 144 bytes)
================================================================================
x+)JMU041a040031QHÎÏ+IÍ+Ñ+)føqAi÷UFÖ#L¾	oôø½ª*=³$£4	¤(4×ÆþÎfRÍ»þ{&üq¼SUTWRÒ2sMç]ïõÿÃm`*)ÉO©ø÷?oÏu7+Þ/,±jEÚÄ«l½?

================================================================================
FILE: .git/objects/84/99a2322a163c5a49ec2d04f77fff57e7f58006  (size: 521 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/84/eb47f6b910e3e5f633704f620ed978986028e9  (size: 1448 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/88/b51853a832c49ec0cdd9d66b993fcc022df263  (size: 2417 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/89/9029f99b16696c761fb2127a0880783e7d9442  (size: 186 bytes)
================================================================================
xE]Â =
1û¤@üðâ¼Bk×¡`(êé-ÆèÓfv¾Ìì¶Ö·¤¨øBLu£ãýHiJiÊ=-ct&$ÓE-o¢Ñô:J8ÌBøó[ý}þQWc­%Ö¸Ã¨§H&	ufßÙùÁ¸ÆÅuÛhC	é:@2¿nÜEûð_^ýÌæ5sÕÈ·¤ÜU¼æ ÎÁßòY'ÿÀ hNP"¢ÞËM®

================================================================================
FILE: .git/objects/8d/9273e6b64ce29f74576e28a42097fea9b70a47  (size: 192 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/8d/aa62a7e321d828f461f1a9fbc2ed8054cdd93d  (size: 24397 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/90/3f5b06efc0ac1ebf4c154e7f990af92938443f  (size: 1702 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/95/74ea7ae54e2aca498db7da25ec9b70bf54603f  (size: 52 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/96/61ac713428efbad557d3ba3a62216b5bb7d226  (size: 157 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/9c/3893c876742b324f3bbfad7f4affe793d59fd1  (size: 70295 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/9d/594868ed54d6d4d1390b0268484888326607b1  (size: 215 bytes)
================================================================================
xeËÂ@E]ç+
WéEGA| ºs/NRÆ~Hu%Aü ù
¿lÚDFÅÚÔº{sãs?Ø<1jW°öÖÞ3R*à@,B®ÉAÚ-·ÃìÐ=@aT[eq>Ì=Há>|5R)ûMìq(uó¬.¼c¥]´N?ò[Áöý³5cùÆºñ®¿pvø
+Å¬B^×Æì0zØhá¨`«É*ÁÒ ]9Äh©Á2{µ7þg£>oÓäüá³]d

================================================================================
FILE: .git/objects/9f/54b1fb125e67eadda0f50771ebd8c351466782  (size: 804 bytes)
================================================================================
xUmoÛ8¾Ïúx¾ ßb'Ýp/ÈdÛ¡À
l+pë· ÀdNÙaÉY,ÿ}¤×®oí8QäÉ¤ç&þüë¯¶I®P;ïÕùÙù*JS9ø¤ÿP&²ÊàU¼gÈ	àîJÜ\ÿ{å°ã	öz«xêLÒ²ámÃb&ë¨j8e4(²´pO³wtë
}8­Ähë`MîÕ'`Ñ½i¶X´Ã''FÖUJoáè:Ï¢!]ëÙfªV«æÜoòdæ&?¶¾Ì2L>,ÛÞõeJ´ü5a!K!TNMR$^¸Ew#oßÞ]¥BCß3;¬Ä[crÚgQßÝ|xB®7
ûá¥2§0G½u;X,0ó¡BWWú>lF·¢Òø®4ù±©{[¬öä¶'gA±U
í8I~Ç«¥Ü+¦<A´0.+
ÊöîõÖÄÊR_	!'7fBNV$ÛH?4YFE¾1% â¢¸]hÝ7IPåý¾aÄéè1FªØê8yH}Ê÷ÂVzÞ¬¼~¿gÏxãMÀí*´;§sXÏ&pAÜSôÇqÞ;3Õ¥LvBìa¨¨!=\B:Ôö´mÊ°TYªæÞípÇ	¬.ÝôÞX_OÃÐvV×SÍ@Ü7VÇßGi¹§ëAZûQ¸ðÞºÀÞ²p*Q9qð2£]P`ªê«õ^V"Úaêo¼åµ&±¨ÙJ¹ÅhZë|HiK`p\=³÷Ãÿ¦rÔùâå
¾àÝâÀÓyðÓA%
Ü^À
¼2^z@ö£¸Z¢ö3U¾ã=µB¶8|þí÷ÖßçA'¡ü»ùð4/½87ÉjÇZ§ByK¤ìMþ<Þ'½m]e¤¿ÿW´×lsó°J¬ÆÈ%Í¶TOVkxØÕùÛsàõ&O(Ï$*û{ ÊG8"úúÁ+ß±EÓ:à¢)Ãé7O¡¿í5à$

================================================================================
FILE: .git/objects/a1/180be3afd06e2db8cd0ebdd0aede7e53e9cf9e  (size: 939 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/a3/19506a92512f46fe09f9de3feb9b22a013ed35  (size: 1011 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/a6/53323d8e1b03ad736c7671c475860a45132e01  (size: 358 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/a8/5e1d847cb7e56f69ab3d5cba91c1c7dc2f0082  (size: 645 bytes)
================================================================================
xµVÛnÛ0Ýs¿ÂðãÙMÚµÅ(°b+fA lÑYr)ÉNöõ£/K¯+tC"Û<<ä)*:	Æ'g?LR]VZ²b%LÃke*H­Ðjº ýeBÂ
S,gGA0©úwA
hÈr¢ãî}ÓU¼»9y
IGÎÁWÈ6âÖÄueµA*1Óð»µÕ¥YâP,À§¡EGjÓðîêòGpwy;¿ÛÛ¬Ý÷,yÏô<@+À[!.)ýè^Y
y¬)®/q|u¿}­åÁSÛÑø¼³yY3ÚÊûU,]C¤1
-J{áÓmöjü°«Yd¨4üÙ¶³Ï¶¥ô°e0ýÒÊhõ©W¢#Ëêè­
:er­uÉjP%\ü¼ñðrk¸R+¡¹ug[Ç7"©(°i6Ü¹±åNÕçJ_X¬q[v&Xæ÷<jÊKõ
EI]éÔsÂ5èJíx¦â¸ë+Ü©Ü/¹Þ¨>fU÷"·tøÇ;áj&IÙÕd¬eÓfxãDÓy  cåÙ>-sl¶Ô¹-ÜtºfHGg£qÓk}@÷ÿÕ¤ÝÅåÆ[×¢9È]ïJÀ²6oÚæÄ¿Fhô²ÄÏòIÜäÃØÍ·§Ñb·êýÃÜÿ0®52æ£Ó'
ÿÓô
ÁhY¿uïÍ×.'"tÕ8`B;R$Â½c£ïe7ÙÑ$Þßf¿×1às

================================================================================
FILE: .git/objects/ab/e72ac1245dcdc3bd07e1ddf49006a7761cad19  (size: 181 bytes)
================================================================================
xEÍÃ0÷QKÑ©µãþ°,¶½ô9Æ]§}úÚPÚÃ fô	MRJ~ô¼°!Î=óý_ó.ïwiRB ,äò9­%HhÔ_Z=¹+C¦½Áw4x~©ðêp£þ6MÂjv+CÙåáñ})¶·];»@Ñ©ïC¨ü¶W¦oxKéY¸ÓçCöÄíEzcu­n_çHZ

================================================================================
FILE: .git/objects/bb/b8d66722829e22035c0b4ec8cef9ce9ae2ec7a  (size: 55 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/c0/4dc2e58a4943728bba095e93b51b9234f3d786  (size: 500 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/c5/3e7012704115fe64ebda3aaf440ec932d7e31f  (size: 1152 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/c6/69f850a1770c48f8bcc9abbfebd4cf30192546  (size: 111 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/c6/cad1089b321bcdd9a9155793df5053a717cff6  (size: 319 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/c7/21e508dbcf80da77a9208824c938afcdc4b2ae  (size: 118 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/ca/c823207c85edba523fedfda959ac02963622e8  (size: 605 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/cb/150fb6867647928387c15c27b25da33a4d8929  (size: 911 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/ce/ffd1266c300e7493172e7132e13618786b0a83  (size: 300 bytes)
================================================================================
x­ÛjÃ0wÝ§¹aJzX³±µÝ½@)CÔÌ±ô@é»/éhIO7cº1¬ïReRxî¿<5®.rªUy­³J
¸ÔEÈ`×Æ¨j§!<8m`Âå
2EÞR)¦Aá$,&àË×ÖÃÌ(CPEÇ³¢ÅìæQ½;GÛ0a¨$_ LgµökkÕo±îä¾«ãàL­¹à8Ü(0+áreÖ¸
¤eI@[+/.zøE_DÞ¬Âù ý¤ÎWäBÄÔ8.[OsdqÞR&p8Ö´ïåRMÝñèøqÜ»MÜ>5À¼Vêã8ùp7Wt½ÂaÆö§»é¤Ù[oßû6*¼

================================================================================
FILE: .git/objects/d0/56d9a49628ba6485445461572e539a35414b67  (size: 44956 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/d0/8af704e7655de61c16e41cbc302daa64f15670  (size: 171 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/d2/3208fbb7168875464dd7aaff4169c37be615ea  (size: 156 bytes)
================================================================================
xEÍ
PF[ûÃìË þ,QTp½w+:sMêíÚï;§j¤$Ý.²òÝ60v^8ÇdµF ¶â<?s¼ßöËË"ÊJM¶ÿ,"ÌJ{`ÓR3«Uú£¯ÔèçdB¿º	mórä.JÉÍà|pG«º(!Ä$þYÆxN)¾|@§

================================================================================
FILE: .git/objects/d3/a48b931d7f8c8ec7daff24f1bbd95f1d68f252  (size: 192 bytes)
================================================================================
x]1oÂ0;ûW`Ú	AÛ:vïú¾Dl?Ë~¤(ÿÊzº»ï®uÒâmûúb}¤Ð)2.ø>þdQÍÑ'ñXùß±©¼ÚÓ48¬âí£»éDÖQë*µÃ ç&¬%ª@nc:	YR»'â.X_#ùèxOïÖµ6ð¨õ40lI
Îq<ÞÞô%tùß¥õæXyµ¤ð0kofsµd¬

================================================================================
FILE: .git/objects/d4/dcb74834ea9254b6e4e36e37dc8eeedca61b0a  (size: 103 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/de/345fc24ece23474cb1437e72a0310e141a9646  (size: 189 bytes)
================================================================================
xÍ
Â0=¾CXzµQ*èÁP(èYÒvÕH-±omztOÃð
;JØ Zbú´=Ðß49	ý°]Jvg	ý²;é¤Ó¹§+¦ÅBi3&R²99tsÊ¢m
ÆÝ
ÆÊ©3ú-a[¹·*ÉÊkvÒïÞHx1çÁv·Y/fûã|µx¨3T<'_Èh
µ5PErU\$üóæ£à¿
ÿOäÍÆÉìðY

================================================================================
FILE: .git/objects/e0/e01f92fdb1c81a19eaa346e9b6ff3cf4885883  (size: 125 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/e0/e7021d2a5978255b4c3b3064c4f367c4834273  (size: 233 bytes)
================================================================================
x}ËnÂ0E»æ+,ï©	°@ªÄ"U¥¦0$ã`äGä8ÐÏ¯KÜRUoï¹ã³WvOÒ$}àO­È	Ý ­)hò¸ Mc[iº~Ô/ónÊï=bã¯)-gðÆêÞ4ÐXÐ
<:	ª> Æ·	zÅóÖ!» ÛûÐ	ZðÃWu«½û°õ»nzÿxÙ¹·@áïF¤Ýï¼4Oú¡¨á6èv×,]%äOëdµybÏëy&ÄßÝû
gGö+2ÈfÑvùAÒ

================================================================================
FILE: .git/objects/e3/c35f4e49604952dc9755868c533a2bd735242c  (size: 53 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/e6/3a912a230cf07ceada64e96e7d78cc2ce04dec  (size: 598 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/e6/4a4bd53366a6e3f5703ff575e20ae9a8ceb761  (size: 283 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/e9/b5c323842b0c2327250e5ab79788175033901f  (size: 53 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/f2/08f22304d5dd48d3ae320ba608420447989743  (size: 85 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/f2/5d7692c10d2f55f9acdf517c6971f67709fe94  (size: 76 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/f6/58d01b02bbd50105c4fc3452f77213b148fba7  (size: 1732 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/fa/c5c7e7d01773ea9ea628c60fd22b3eb53c5aa0  (size: 476 bytes)
================================================================================
xÁÛ0{äÓ]lÇî¡é&=zhË²Û[¬"-i¤
~÷¢¸ÉvÕÁH£¾ÑüMm6ðq:}uAÖ
5EÆ£ñH5­±ïA8xD!	*k¬ß	Ï+ÑÕ|ßiIÊh//Þ>X³µè\Ài<^ÒhG°j%¥à$­aè9×"A	×÷êsU_VJ3_¨+Îè'iM]3éâªB_Ù5Üa>l5úó¥ WûIOÂ:wç_Pmw§BäÙ-gÂ
øñÌÓÂ$Ü%lï´(`Å_àNüMÐ.oÄ1.R{¥cÎH¡MÁ'ÿäþ&0$¾.Í!e¹ÜsÇ_#Ôhã(ô¥0¤¥pV8§ö8²B²HÕ«/TÙãÿÀ¥Oaµ.ürßÊ}©ö<üï¢ÁyT©# 4[³kùû+ûPÀ.+ò;Øl3²B»VX?½+jÀ½øè
UOSV{aã,R2'YsóLU~¤³ÕA´[CÙYqLïè5ÖÑÏç§å3x~{âaïß=Cß¿TOny?á/gïKù»

================================================================================
FILE: .git/objects/fb/8addb68c337f190625ed8fa213a6bb470ad565  (size: 1605 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/fc/46197a08f45b210e1b7704a7b1edfb4a135c0b  (size: 366 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/fe/cc5e8dc496e2490fd0582556fee496bfbe4fec  (size: 130 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/objects/fe/ee0f6ebcc4aed978efa17698aaa8669461d5a3  (size: 408 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: .git/refs/heads/main  (size: 41 bytes)
================================================================================
130dec05475142b3dc3d7d93d8af14d59cfeb0ee

================================================================================
FILE: .git/refs/remotes/origin/main  (size: 41 bytes)
================================================================================
130dec05475142b3dc3d7d93d8af14d59cfeb0ee

================================================================================
FILE: .gitignore  (size: 45 bytes)
================================================================================
node_modules
.next
out
.env*
.DS_Store
*.log

================================================================================
FILE: .idea/.gitignore  (size: 184 bytes)
================================================================================
# Default ignored files
/shelf/
/workspace.xml
# Editor-based HTTP Client requests
/httpRequests/
# Datasource local storage ignored files
/dataSources/
/dataSources.local.xml

================================================================================
FILE: .idea/dictionaries/project.xml  (size: 194 bytes)
================================================================================
<component name="ProjectDictionaryState">
  <dictionary name="project">
    <words>
      <w>adikari</w>
      <w>gimesha</w>
      <w>langs</w>
    </words>
  </dictionary>
</component>

================================================================================
FILE: .idea/inspectionProfiles/Project_Default.xml  (size: 2365 bytes)
================================================================================
<component name="InspectionProjectProfileManager">
  <profile version="1.0">
    <option name="myName" value="Project Default" />
    <inspection_tool class="HttpUrlsUsage" enabled="true" level="WEAK WARNING" enabled_by_default="true">
      <option name="ignoredUrls">
        <list>
          <option value="http://0.0.0.0" />
          <option value="http://127.0.0.1" />
          <option value="http://activemq.apache.org/schema/" />
          <option value="http://cxf.apache.org/schemas/" />
          <option value="http://java.sun.com/" />
          <option value="http://javafx.com/fxml" />
          <option value="http://javafx.com/javafx/" />
          <option value="http://json-schema.org/draft" />
          <option value="http://localhost" />
          <option value="http://maven.apache.org/POM/" />
          <option value="http://maven.apache.org/xsd/" />
          <option value="http://oniodtu6xudkiblcijrwwkduu2tdle3rav7nlszrjhrxpjtkg4brmgqd.onion" />
          <option value="http://primefaces.org/ui" />
          <option value="http://schema.cloudfoundry.org/spring/" />
          <option value="http://schemas.xmlsoap.org/" />
          <option value="http://tiles.apache.org/" />
          <option value="http://www.ibm.com/webservices/xsd" />
          <option value="http://www.jboss.com/xml/ns/" />
          <option value="http://www.jboss.org/j2ee/schema/" />
          <option value="http://www.springframework.org/schema/" />
          <option value="http://www.springframework.org/security/tags" />
          <option value="http://www.springframework.org/tags" />
          <option value="http://www.thymeleaf.org" />
          <option value="http://www.w3.org/" />
          <option value="http://xmlns.jcp.org/" />
        </list>
      </option>
    </inspection_tool>
    <inspection_tool class="PyPep8NamingInspection" enabled="true" level="WEAK WARNING" enabled_by_default="true">
      <option name="ignoredErrors">
        <list>
          <option value="N814" />
        </list>
      </option>
    </inspection_tool>
    <inspection_tool class="PyUnresolvedReferencesInspection" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoredIdentifiers">
        <list>
          <option value="urllib.request.*" />
        </list>
      </option>
    </inspection_tool>
  </profile>
</component>

================================================================================
FILE: .idea/jsLibraryMappings.xml  (size: 187 bytes)
================================================================================
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="JavaScriptLibraryMappings">
    <includedPredefinedLibrary name="Node.js Core" />
  </component>
</project>

================================================================================
FILE: .idea/material_theme_project_new.xml  (size: 414 bytes)
================================================================================
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="MaterialThemeProjectNewConfig">
    <option name="metadata">
      <MTProjectMetadataState>
        <option name="migrated" value="true" />
        <option name="pristineConfig" value="false" />
        <option name="userId" value="740f2a83:197d8caf9e6:-7ffe" />
      </MTProjectMetadataState>
    </option>
  </component>
</project>

================================================================================
FILE: .idea/modules.xml  (size: 277 bytes)
================================================================================
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ProjectModuleManager">
    <modules>
      <module fileurl="file://$PROJECT_DIR$/.idea/portfolio.iml" filepath="$PROJECT_DIR$/.idea/portfolio.iml" />
    </modules>
  </component>
</project>

================================================================================
FILE: .idea/portfolio.iml  (size: 469 bytes)
================================================================================
<?xml version="1.0" encoding="UTF-8"?>
<module type="WEB_MODULE" version="4">
  <component name="NewModuleRootManager">
    <content url="file://$MODULE_DIR$">
      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
      <excludeFolder url="file://$MODULE_DIR$/temp" />
      <excludeFolder url="file://$MODULE_DIR$/tmp" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
  </component>
</module>

================================================================================
FILE: .idea/vcs.xml  (size: 185 bytes)
================================================================================
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="VcsDirectoryMappings">
    <mapping directory="$PROJECT_DIR$" vcs="Git" />
  </component>
</project>

================================================================================
FILE: .idea/workspace.xml  (size: 5259 bytes)
================================================================================
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="21d44692-22e6-4c6c-8f92-de8db2db6b8d" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
        <option value="TypeScript JSX File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="327jrdM3tYj5fba9hkWM3CTRsfi" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "javascript.nodejs.core.library.configured.version": "22.17.0",
    "javascript.nodejs.core.library.typings.version": "22.16.0",
    "js.debugger.nextJs.config.created.client": "true",
    "js.debugger.nextJs.config.created.server": "true",
    "last_opened_file_path": "//wsl.localhost/Ubuntu/home/gimesha/My_Projects/next/portfolio",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_interpreter_path": "wsl://Ubuntu@/root/.nvm/versions/node/v22.18.0/bin/node",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "ts.external.directory.path": "\\\\wsl.localhost\\Ubuntu\\home\\gimesha\\My_Projects\\next\\portfolio\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="ReactDesignerToolWindowState">
    <option name="myId2Visible">
      <map>
        <entry key="com.intellij.reactbuddy.reactComponents" value="false" />
        <entry key="com.intellij.reactbuddy.reactInspector" value="false" />
        <entry key="com.intellij.reactbuddy.storybook" value="false" />
      </map>
    </option>
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="\\wsl.localhost\Ubuntu\home\gimesha\My_Projects\next\portfolio" />
      <recent name="\\wsl.localhost\Ubuntu\home\gimesha\My_Projects\next\portfolio\app\case-studies" />
      <recent name="\\wsl.localhost\Ubuntu\home\gimesha\My_Projects\next\portfolio\app" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="\\wsl.localhost\Ubuntu\home\gimesha\My_Projects\next\portfolio\public\case-studies\bank-app" />
      <recent name="\\wsl.localhost\Ubuntu\home\gimesha\My_Projects\next\portfolio" />
    </key>
  </component>
  <component name="RunManager" selected="npm.Next.js: server-side">
    <configuration name="Next.js: debug client-side" type="JavascriptDebugType" uri="http://localhost:3000/">
      <method v="2" />
    </configuration>
    <configuration name="Next.js: server-side" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-e03c56caf84a-JavaScript-WS-252.23892.411" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="21d44692-22e6-4c6c-8f92-de8db2db6b8d" name="Changes" comment="" />
      <created>1756778704884</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1756778704884</updated>
      <workItem from="1756778706026" duration="14783000" />
      <workItem from="1756872411728" duration="1992000" />
      <workItem from="1756874561557" duration="14200000" />
      <workItem from="1756890682516" duration="3897000" />
      <workItem from="1756898605642" duration="29008000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$" />
    </ignored-roots>
  </component>
</project>

================================================================================
FILE: app/about/page.tsx  (size: 963 bytes)
================================================================================
import type { Metadata } from "next";
import { getAboutMDX } from "@/lib/content";
import { buildTOC } from "@/lib/toc";
import ArticleShell from "@/components/ArticleShell";
import { RenderMDX } from "@/components/MDX";

export const metadata: Metadata = { title: "About" };

export default async function AboutPage() {
    const mdx = await getAboutMDX();

    if (!mdx) {
        return (
            <div className="card p-5">
                <h1 className="text-2xl font-semibold">About</h1>
                <p className="mt-2 text-[var(--muted)]">
                    Create <code>about.mdx</code> in <code>/{process.env.CONTENT_OWNER}/{process.env.CONTENT_REPO}</code>.
                </p>
            </div>
        );
    }

    const toc = buildTOC(mdx);

    return (
        <ArticleShell title="About" subtitle="Who I am, how I work, and selected projects & tools." toc={toc}>
            <RenderMDX source={mdx} />
        </ArticleShell>
    );
}

================================================================================
FILE: app/case-studies/[slug]/page.tsx  (size: 1336 bytes)
================================================================================
import { notFound } from "next/navigation";
import type { Metadata } from "next";
import { getCaseIndex, getCaseMDX, type CaseIndexItem } from "@/lib/content";
import { buildTOC } from "@/lib/toc";
import ArticleShell from "@/components/ArticleShell";
import { RenderMDX } from "@/components/MDX";

export const dynamicParams = true;

export async function generateStaticParams() {
    const list = await getCaseIndex();
    return list.map((i) => ({ slug: i.slug }));
}

export async function generateMetadata(
    { params }: { params: Promise<{ slug: string }> }
): Promise<Metadata> {
    const { slug } = await params;
    const list: CaseIndexItem[] = await getCaseIndex();
    const hit = list.find((x) => x.slug === slug);
    return { title: hit?.title ?? slug, description: hit?.description };
}

export default async function CasePage({ params }: { params: Promise<{ slug: string }> }) {
    const { slug } = await params;
    const list = await getCaseIndex();
    const hit = list.find((x) => x.slug === slug);

    const mdx = await getCaseMDX(slug);
    if (!mdx) notFound();

    const toc = buildTOC(mdx);

    return (
        <ArticleShell title={hit?.title ?? slug} subtitle={hit?.description} toc={toc}>
            <RenderMDX source={mdx} />
        </ArticleShell>
    );
}

================================================================================
FILE: app/case-studies/page.tsx  (size: 1744 bytes)
================================================================================
import Link from "next/link";

export const metadata = { title: "Case Studies" };

const cases = [
    { slug: "banking-system", title: "Bank System — Multi-Platform Banking" },
    { slug: "bank-app", title: "BankApp — Android Wallet & Payments" },
    { slug: "neurosim", title: "NeuroSim — Brain Network Simulator" },
];

export default function CaseStudiesIndex() {
    return (
        <div>
            <h1 className="text-3xl md:text-4xl font-bold tracking-tight">Case Studies</h1>
            <p className="mt-2 text-[var(--muted)] max-w-2xl">
                Short, outcome-focused write-ups of flagship projects. Each one shows the problem, approach, and results.
            </p>

            <div className="mt-8 grid gap-6 sm:grid-cols-2">
                {cases.map((c) => (
                    <Link key={c.slug} href={`/case-studies/${c.slug}`} className="group">
                        <div className="card p-5 h-full">
                            <h2 className="text-lg font-semibold group-hover:underline">{c.title}</h2>
                            <p className="mt-2 text-sm text-[var(--muted)]">2–3 minute read</p>
                            <div className="mt-4 text-sm">
                                <span className="hairline inline-block rounded-full px-3 py-1">Impact</span>{" "}
                                <span className="hairline inline-block rounded-full px-3 py-1">Architecture</span>{" "}
                                <span className="hairline inline-block rounded-full px-3 py-1">Trade-offs</span>
                            </div>
                        </div>
                    </Link>
                ))}
            </div>
        </div>
    );
}

================================================================================
FILE: app/contact/page.tsx  (size: 1955 bytes)
================================================================================
// app/contact/page.tsx
import type { Metadata } from "next";
import { getContactMDX } from "@/lib/content";
import { RenderMDX } from "@/components/MDX";

export const metadata: Metadata = { title: "Contact" };

export default async function ContactPage() {
    const mdx = await getContactMDX();

    return (
        <article className="prose max-w-2xl">
            {mdx ? (
                <RenderMDX source={mdx} />
            ) : (
                <div>
                    <h1 className="text-3xl md:text-4xl font-bold tracking-tight">Contact</h1>
                    <p className="mt-3 text-[var(--muted)]">
                        For opportunities or questions, email me or connect on socials.
                    </p>

                    <div className="mt-6 space-y-4">
                        <a
                            href="mailto:gimeshanirmal23@gmail.com"
                            className="card block px-4 py-3 hover:shadow-md transition-shadow"
                        >
                            gimeshanirmal23@gmail.com
                        </a>

                        <a
                            href="https://github.com/gimesha-adikari"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="card block px-4 py-3 hover:shadow-md transition-shadow"
                        >
                            GitHub
                        </a>

                        <a
                            href="https://linkedin.com/in/gimesha-nirmal-490245343"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="card block px-4 py-3 hover:shadow-md transition-shadow"
                        >
                            LinkedIn
                        </a>
                    </div>
                </div>
            )}
        </article>
    );
}

================================================================================
FILE: app/globals.css  (size: 5323 bytes)
================================================================================
@import "tailwindcss";
@plugin "@tailwindcss/typography";

/* ---------- Theme tokens ---------- */
:root {
    --bg: #f6f8ff;
    --fg: #0f1222;
    --muted: #4b5568;
    --surface: #ffffff;
    --elev: 0 10px 35px -10px rgb(12 18 28 / 0.10), 0 2px 8px -2px rgb(12 18 28 / 0.06);
    --border: #e8ecf6;
    --accent: #5b8cff;
    --accent-2: #8c6cff;
    --radius: 18px;
    --spot-1: color-mix(in oklab, var(--accent) 20%, transparent);
    --spot-2: color-mix(in oklab, var(--accent-2) 20%, transparent);
}

:root[data-theme="dark"] {
    --bg: #0f172a;
    --fg: #e6e8ee;
    --muted: #cbd5e1;
    --surface: #111827;
    --elev: 0 16px 40px -12px rgb(0 0 0 / 0.50), 0 3px 10px -2px rgb(0 0 0 / 0.35);
    --border: #1f2937;
    --accent: #7aa2ff;
    --accent-2: #b794f4;
}

@media (prefers-color-scheme: dark) { :root:not([data-theme="light"]) { color-scheme: dark; } }
@media (prefers-color-scheme: light){ :root:not([data-theme="dark"])  { color-scheme: light; } }

/* ---------- Base ---------- */
html, body { background: var(--bg); color: var(--fg); }

/* Prevent tiny horizontal overflow on mobile */
html, body {
    max-width: 100%;
    overflow-x: hidden;
}
@supports (overflow: clip) {
    html, body { overflow-x: clip; }
}

/* Helper when body is locked during mobile menu */
.overscroll-contain { overscroll-behavior: contain; }

a { text-decoration-thickness: 1.5px; text-underline-offset: 3px; }

/* Page-wide spotlight for light theme (very subtle) */
body::before{
    content:"";
    position: fixed;
    inset: -20% -10% auto -10%;
    height: min(50vh, 520px);
    pointer-events: none;
    z-index: -1;
    background:
            radial-gradient(36% 40% at 20% 25%, var(--spot-1), transparent 65%),
            radial-gradient(36% 40% at 80% 18%, var(--spot-2), transparent 65%);
    filter: blur(48px);
    opacity: .55;
}

/* Layout helpers */
.container-xl {
    width: 100%;
    max-width: 1240px;
    margin-inline: auto;
    padding-inline: 24px;
    overflow-x: hidden;
}
.section { padding-block: clamp(32px, 6vw, 72px); }

/* Cards / hairlines */
.card {
    background:
            linear-gradient(180deg, color-mix(in oklab, var(--surface) 96%, var(--accent) 4%), var(--surface));
    border: 1px solid var(--border);
    border-radius: var(--radius);
    box-shadow: var(--elev);
}
.hairline { border: 1px solid var(--border); border-radius: calc(var(--radius) - 6px); }

/* Frosted top nav helper */
.nav-blur {
    backdrop-filter: saturate(140%) blur(10px);
    background: color-mix(in oklab, var(--surface) 85%, transparent);
    border-bottom: 1px solid var(--border);
}

/* Buttons */
.btn{
    display:inline-flex; align-items:center; justify-content:center;
    min-height: 44px; padding: 0 18px; border-radius: 14px;
    font-weight: 600; transition: transform .15s ease, opacity .2s ease, background .2s ease, box-shadow .2s ease;
}
.btn-primary{
    color: #fff;
    background: linear-gradient(90deg, var(--accent), var(--accent-2));
    box-shadow: 0 12px 24px -12px color-mix(in oklab, var(--accent) 55%, transparent);
}
.btn-primary:hover{ transform: translateY(-1px); opacity: .98; }
.btn-ghost{
    background: color-mix(in oklab, var(--surface) 92%, var(--accent) 8%);
    border: 1px solid var(--border);
    color: var(--fg);
}
.btn-ghost:hover{ transform: translateY(-1px); }

/* Focus ring */
.focus-ring:focus-visible, a:focus-visible, button:focus-visible, [role="button"]:focus-visible{
    outline: 2px solid color-mix(in oklab, var(--accent) 60%, transparent);
    outline-offset: 3px;
}

/* ---------- Prose / MDX ---------- */
.prose { max-width: 70ch; color: var(--fg); }
.prose h1,.prose h2,.prose h3{ color: var(--fg); letter-spacing: -0.02em; }
.prose a{ color: var(--accent); }
.prose {
    --tw-prose-body: var(--fg);
    --tw-prose-headings: var(--fg);
    --tw-prose-bold: var(--fg);
    --tw-prose-links: var(--accent);
    --tw-prose-counters: var(--muted);
    --tw-prose-bullets: var(--muted);
    --tw-prose-hr: var(--border);
    --tw-prose-quotes: var(--fg);
    --tw-prose-quote-borders: var(--border);
    --tw-prose-captions: var(--muted);
    --tw-prose-code: var(--fg);
    --tw-prose-pre-code: var(--fg);
    --tw-prose-pre-bg: color-mix(in oklab, var(--surface) 96%, transparent);
    --tw-prose-th-borders: var(--border);
    --tw-prose-td-borders: var(--border);
}
.prose :where(p, li, strong, em, code){ color: var(--fg); }
.prose li::marker{ color: var(--muted); }
.prose img, .prose video, .prose audio { max-width: 100%; height: auto; }
.prose table { width: 100%; border-collapse: collapse; }

/* ---------- Hero glow ---------- */
.hero-glow{
    position: relative;
    isolation: isolate;
    overflow-x: hidden;
}
.hero-glow::before{
    content:"";
    position:absolute; inset:-10% -10% auto -10%; height: 52%;
    background:
            radial-gradient(40% 40% at 25% 30%, color-mix(in oklab, var(--accent) 18%, transparent), transparent 60%),
            radial-gradient(40% 40% at 75% 20%, color-mix(in oklab, var(--accent-2) 18%, transparent), transparent 60%);
    filter: blur(40px); z-index:-1; opacity:.8;
}

/* ---------- Small-screen niceties ---------- */
@media (max-width: 480px){
    .section { padding-block: 28px; }
    .btn { min-height: 42px; padding: 0 16px; }
    .card { border-radius: 16px; }
}

================================================================================
FILE: app/layout.tsx  (size: 2295 bytes)
================================================================================
import type { Metadata } from "next";
import "./globals.css";
import Header from "@/components/Header";
import { Footer } from "@/components/Footer";
import { Inter } from "next/font/google";
import { cookies } from "next/headers";

const inter = Inter({ subsets: ["latin"], display: "swap" });

const siteUrl = process.env.SITE_URL ?? "http://localhost:3000";
const defaultTitle = "Gimesha Nirmal — Software Engineer";

export const metadata: Metadata = {
    title: { default: defaultTitle, template: "%s | Gimesha Nirmal" },
    description: "Banking systems, ML verifications, and pragmatic full-stack work.",
    metadataBase: new URL(siteUrl),
    icons: { icon: "/favicon.svg" },
    alternates: { canonical: "/" },
    openGraph: {
        type: "website",
        url: siteUrl,
        title: defaultTitle,
        description: "Banking systems, ML verifications, and pragmatic full-stack work.",
        siteName: "gimesha.dev",
        images: [{ url: `/og?title=${encodeURIComponent(defaultTitle)}&subtitle=${encodeURIComponent("Portfolio")}` }],
    },
    twitter: {
        card: "summary_large_image",
        title: defaultTitle,
        description: "Banking systems, ML verifications, and pragmatic full-stack work.",
        images: [{ url: `/og?title=${encodeURIComponent(defaultTitle)}&subtitle=${encodeURIComponent("Portfolio")}` }],
    },
    robots: { index: true, follow: true },
};

export default async function RootLayout({ children }: { children: React.ReactNode }) {
    const cookieStore = await cookies();
    const themeCookie = cookieStore.get("theme")?.value;
    const theme = themeCookie === "light" || themeCookie === "dark" ? themeCookie : undefined;

    return (
        <html lang="en" data-theme={theme} className={inter.className}>
        <body className="min-h-[100svh] flex flex-col antialiased">
        <a
            href="#content"
            className="sr-only focus:not-sr-only focus:ring-2 focus:ring-offset-2 focus:ring-[var(--accent)] px-3 py-2 bg-white rounded text-black"
        >
            Skip to content
        </a>
        <Header />
        <main id="content" className="flex-1 section">
            <div className="container-xl">{children}</div>
        </main>
        <Footer />
        </body>
        </html>
    );
}

================================================================================
FILE: app/not-found.tsx  (size: 431 bytes)
================================================================================
import Link from "next/link";

export default function NotFound() {
    return (
        <div className="max-w-xl text-center mx-auto space-y-6">
            <h1 className="text-3xl md:text-5xl font-extrabold">Not found</h1>
            <p className="text-[var(--muted)]">That page doesn’t exist. Try heading back home.</p>
            <Link href="/" className="btn btn-primary focus-ring">Go home</Link>
        </div>
    );
}

================================================================================
FILE: app/og/route.tsx  (size: 2204 bytes)
================================================================================
import { NextRequest } from "next/server";
import { ImageResponse } from "next/og";

export const runtime = "edge";

export async function GET(req: NextRequest) {
    const { searchParams } = new URL(req.url);
    const title = searchParams.get("title") || "gimesha.dev";
    const subtitle = searchParams.get("subtitle") || "Case Study";

    return new ImageResponse(
        (
            <div
                style={{
                    height: "100%",
                    width: "100%",
                    display: "flex",
                    flexDirection: "column",
                    justifyContent: "center",
                    padding: 64,
                    background:
                        "linear-gradient(135deg, #0f172a 0%, #111827 45%, #0b1222 100%)",
                    color: "#e6e8ee",
                }}
            >
                <div
                    style={{
                        position: "absolute",
                        inset: 0,
                        background:
                            "radial-gradient(800px 400px at 20% 20%, rgba(124,58,237,.25), transparent 60%), radial-gradient(700px 350px at 80% 10%, rgba(34,211,238,.25), transparent 60%)",
                    }}
                />
                <div style={{ fontSize: 28, opacity: 0.9 }}>gimesha.dev</div>
                <div
                    style={{
                        fontSize: 74,
                        fontWeight: 800,
                        lineHeight: 1.1,
                        marginTop: 20,
                    }}
                >
                    {title}
                </div>
                <div style={{ marginTop: 18, fontSize: 34, opacity: 0.8 }}>
                    {subtitle}
                </div>
                <div
                    style={{
                        marginTop: 36,
                        height: 6,
                        width: 320,
                        borderRadius: 999,
                        background:
                            "linear-gradient(90deg, #7aa2ff 0%, #b794f4 50%, #7aa2ff 100%)",
                    }}
                />
            </div>
        ),
        { width: 1200, height: 630 }
    );
}

================================================================================
FILE: app/page.tsx  (size: 2430 bytes)
================================================================================
import Link from "next/link";
import { fetchAllRepos } from "@/lib/github";
import { RepoCard } from "@/components/RepoCard";
import { orderReposWithPinned, isPinned } from "@/lib/pins";
import type { Repo } from "@/lib/github";

export default async function HomePage() {
    const repos = await fetchAllRepos().catch(() => [] as any[]);
    const ordered = Array.isArray(repos) ? orderReposWithPinned(repos) : [];
    const featured = ordered.slice(0, 3);

    return (
        <div className="space-y-16 hero-glow">
            <section className="section">
                <div className="container-xl text-center space-y-6">
                    <p className="text-[var(--muted)] uppercase tracking-wide text-xs md:text-sm">Gimesha Nirmal</p>
                    <h1 className="mx-auto max-w-5xl text-5xl md:text-7xl font-extrabold leading-tight tracking-tight">
            <span className="bg-gradient-to-r from-[var(--fg)] via-[var(--accent)] to-[var(--accent-2)] bg-clip-text text-transparent">
              Building clean systems with clarity.
            </span>
                    </h1>
                    <div className="flex items-center justify-center gap-3">
                        <Link href="/projects" className="btn btn-primary focus-ring">All Projects</Link>
                        <Link href="/cv" className="btn btn-ghost focus-ring">View CV</Link>
                    </div>
                </div>
            </section>

            <section className="section">
                <div className="container-xl">
                    <div className="flex items-center justify-between mb-6 md:mb-8">
                        <h2 className="text-xl md:text-2xl font-semibold">Featured </h2>
                        <Link href="/projects" className="text-sm underline">View all</Link>
                    </div>
                    {featured.length > 0 ? (
                        <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3 items-stretch">
                            {featured.map((repo: Repo) => (
                                <RepoCard key={repo.fullName ?? repo.name} repo={repo} />
                            ))}
                        </div>
                    ) : (
                        <p className="mt-4 text-[var(--muted)]">No projects to show right now. Please check back soon.</p>
                    )}
                </div>
            </section>
        </div>
    );
}

================================================================================
FILE: app/projects/[slug]/page.tsx  (size: 6369 bytes)
================================================================================
import type { Metadata } from "next";
import Image from "next/image";
import { notFound } from "next/navigation";
import {
    fetchAllRepos,
    fetchRepoByName,
    fetchRepoLanguages,
    getRepoCardExtras,
} from "@/lib/github";

export const dynamicParams = true;

export async function generateStaticParams() {
    try {
        const repos = await fetchAllRepos();
        return repos.slice(0, 100).map((r) => ({ slug: r.name }));
    } catch {
        return [];
    }
}

type Params = { slug: string };

const PALETTE = ["#3b82f6", "#8b5cf6", "#06b6d4", "#10b981", "#f59e0b", "#ef4444", "#a855f7"];

function fmt(d: string) {
    try {
        return new Date(d).toLocaleDateString();
    } catch {
        return d;
    }
}

export async function generateMetadata(
    { params }: { params: Promise<Params> }
): Promise<Metadata> {
    const { slug } = await params;
    return { title: slug };
}

export default async function ProjectPage({ params }: { params: Promise<Params> }) {
    const { slug } = await params;

    let repo: any;
    try {
        repo = await fetchRepoByName(slug);
    } catch {
        notFound();
    }
    if (!repo) notFound();

    const langs = await fetchRepoLanguages(slug).catch(() => []);
    const totalPct = Math.round(langs.reduce((a, b) => a + b.pct, 0));

    let cover: string | null = null;
    try {
        const extras = await getRepoCardExtras(repo);
        cover = extras.cover ?? null;
    } catch {}
    if (!cover) {
        const owner = (process.env.GITHUB_USERNAME as string) || repo?.owner?.login || "github";
        cover = `https://opengraph.githubassets.com/1/${encodeURIComponent(owner)}/${encodeURIComponent(
            repo.name
        )}`;
    }

    return (
        <article className="space-y-10">
            <header className="hero-glow">
                <div className="flex flex-col md:flex-row md:items-start gap-4 md:gap-6">
                    <div className="flex-1 min-w-0">
                        <h1 className="text-3xl md:text-5xl font-extrabold leading-tight tracking-tight">
              <span className="bg-gradient-to-r from-[var(--fg)] via-[var(--accent)] to-[var(--accent-2)] bg-clip-text text-transparent">
                {repo.name}
              </span>
                        </h1>
                        <p className="mt-2 text-[var(--muted)]">
                            {repo.private ? "Private" : "Public"} • {repo.license || "No license"} • Updated {fmt(repo.updatedAt)}
                        </p>
                        <div className="mt-4 flex flex-wrap gap-3">
                            <a className="btn btn-ghost focus-ring" href={repo.htmlUrl} target="_blank" rel="noopener noreferrer">
                                GitHub
                            </a>
                            {repo.homepage && (
                                <a className="btn btn-primary focus-ring" href={repo.homepage} target="_blank" rel="noopener noreferrer">
                                    Live
                                </a>
                            )}
                        </div>
                    </div>

                    <div className="md:w-[360px] lg:w-[420px] md:shrink-0">
                        <div className="relative aspect-[16/9] rounded-xl overflow-hidden bg-[var(--surface)]">
                            <Image
                                src={cover}
                                alt={`${repo.name} cover`}
                                fill
                                className="object-cover"
                                sizes="(min-width: 1024px) 420px, (min-width: 768px) 360px, 100vw"
                                priority={false}
                                unoptimized
                            />
                        </div>
                    </div>
                </div>
            </header>

            <section className="card p-5">
                <h2 className="text-lg font-semibold">Languages</h2>
                <div className="mt-4 space-y-2">
                    {langs.length === 0 ? (
                        <p className="text-[var(--muted)]">No languages detected.</p>
                    ) : (
                        langs.map((l: any, i: number) => (
                            <div key={l.name}>
                                <div className="flex justify-between text-sm">
                                    <span>{l.name}</span>
                                    <span>{Math.round(l.pct)}%</span>
                                </div>
                                <div className="h-2 w-full rounded-full bg-[var(--border)] overflow-hidden">
                                    <div
                                        className="h-full"
                                        style={{ width: `${l.pct}%`, background: PALETTE[i % PALETTE.length] }}
                                    />
                                </div>
                            </div>
                        ))
                    )}
                    {totalPct !== 100 && langs.length > 0 && (
                        <p className="text-[var(--muted)] text-xs">Note: percentages are approximate.</p>
                    )}
                </div>
            </section>

            <section className="grid sm:grid-cols-2 gap-5">
                <div className="card p-5">
                    <h3 className="font-semibold">Repository</h3>
                    <dl className="mt-3 grid grid-cols-[auto_1fr] gap-x-4 gap-y-2 text-sm">
                        <dt className="text-[var(--muted)]">Created</dt>
                        <dd>{fmt(repo.createdAt)}</dd>
                        <dt className="text-[var(--muted)]">Default branch</dt>
                        <dd>{repo.defaultBranch}</dd>
                        <dt className="text-[var(--muted)]">Stars</dt>
                        <dd>★ {repo.stars}</dd>
                        <dt className="text-[var(--muted)]">Forks</dt>
                        <dd>{repo.forks}</dd>
                    </dl>
                </div>

                <div className="card p-5">
                    <h3 className="font-semibold">Description</h3>
                    <p className="mt-3 text-[var(--muted)]">{repo.description || "—"}</p>
                </div>
            </section>
        </article>
    );
}

================================================================================
FILE: app/projects/loading.tsx  (size: 708 bytes)
================================================================================
export default function Loading() {
    return (
        <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
            {[...Array(6)].map((_, i) => (
                <div key={i} className="card rounded-2xl overflow-hidden animate-pulse">
                    <div className="aspect-[16/10] bg-[var(--border)]" />
                    <div className="p-5 space-y-3">
                        <div className="h-5 w-2/3 bg-[var(--border)] rounded" />
                        <div className="h-4 w-full bg-[var(--border)] rounded" />
                        <div className="h-4 w-5/6 bg-[var(--border)] rounded" />
                    </div>
                </div>
            ))}
        </div>
    );
}

================================================================================
FILE: app/projects/page.tsx  (size: 1054 bytes)
================================================================================
import { fetchAllRepos } from "@/lib/github";
import { RepoCard } from "@/components/RepoCard";
import { orderReposWithPinned } from "@/lib/pins";
import type { Repo } from "@/lib/github";

export const metadata = { title: "Projects" };

export default async function ProjectsPage() {
    const repos = await fetchAllRepos().catch(() => [] as any[]);
    const list = Array.isArray(repos) ? orderReposWithPinned(repos) : [];

    return (
        <div>
            <h1 className="text-3xl md:text-4xl font-bold tracking-tight">All Projects</h1>
            <div className="mt-6" />

            {list.length > 0 ? (
                <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3 items-stretch">
                    {list.map((repo: Repo) => (
                        <RepoCard key={repo.fullName ?? repo.name} repo={repo} />
                    ))}
                </div>
            ) : (
                <p className="mt-4 text-[var(--muted)]">No projects to show right now. Please check back soon.</p>
            )}
        </div>
    );
}

================================================================================
FILE: app/robots.ts  (size: 211 bytes)
================================================================================
import type { MetadataRoute } from "next";

export default function robots(): MetadataRoute.Robots {
  return {
    rules: [{ userAgent: "*", allow: "/" }],
    sitemap: "https://gimesha.dev/sitemap.xml"
  };
}

================================================================================
FILE: app/sitemap.ts  (size: 1602 bytes)
================================================================================
import type { MetadataRoute } from "next";
import { fetchAllRepos } from "@/lib/github";

export default async function sitemap(): Promise<MetadataRoute.Sitemap> {
    const base = process.env.SITE_URL || "http://localhost:3000";
    const now = new Date();

    const repos = await fetchAllRepos().catch(() => []);

    const staticRoutes: MetadataRoute.Sitemap = [
        { url: `${base}/`, lastModified: now, changeFrequency: "weekly", priority: 1 },
        { url: `${base}/projects`, lastModified: now, changeFrequency: "weekly", priority: 0.9 },
        { url: `${base}/case-studies`, lastModified: now, changeFrequency: "monthly", priority: 0.7 },
        { url: `${base}/about`, lastModified: now, changeFrequency: "yearly", priority: 0.5 },
        { url: `${base}/contact`, lastModified: now, changeFrequency: "yearly", priority: 0.5 },
        { url: `${base}/cv`, lastModified: now, changeFrequency: "yearly", priority: 0.4 },
        { url: `${base}/case-studies/banking-system`, lastModified: now, changeFrequency: "yearly", priority: 0.6 },
        { url: `${base}/case-studies/bank-app`, lastModified: now, changeFrequency: "yearly", priority: 0.6 },
        { url: `${base}/case-studies/neurosim`, lastModified: now, changeFrequency: "yearly", priority: 0.6 },
    ];

    const projectRoutes: MetadataRoute.Sitemap = repos.slice(0, 200).map((r: any) => ({
        url: `${base}/projects/${r.name}`,
        lastModified: new Date(r.updatedAt || r.pushedAt || now),
        changeFrequency: "weekly",
        priority: 0.7,
    }));

    return [...staticRoutes, ...projectRoutes];
}

================================================================================
FILE: collect_text_and_tree.py  (size: 8919 bytes)
================================================================================
#!/usr/bin/env python3
"""
Collect project sources:
- For text files: write full contents (preserved exactly).
- For non-text files: write only the file name (marked as UNSUPPORTED/BINARY).
- Finally, append an ASCII tree of the entire project.

Defaults: excludes heavy build/dependency folders (.next, node_modules); includes hidden files; deterministic order.
You can pass --exclude to skip additional directories, and --followlinks to follow symlinks.
"""

from __future__ import annotations
import argparse
import os
from pathlib import Path
import sys
import tokenize
import mimetypes
import re

HEADER_LINE = "=" * 80

# Common text-like extensions (still fallback to detection)
TEXT_EXTS = {
    # Code
    ".java", ".kt", ".kts",
    ".js", ".ts", ".jsx", ".tsx",
    ".css", ".scss", ".sass", ".less",
    ".html", ".htm", ".vue", ".svelte",
    ".c", ".h", ".cpp", ".hpp", ".cc", ".m", ".mm",
    ".go", ".rs", ".php", ".rb", ".swift", ".scala",
    ".cs", ".sql", ".sh", ".bat", ".ps1",
    # Config / data / docs
    ".json", ".yaml", ".yml", ".xml", ".ini", ".cfg", ".conf", ".properties",
    ".toml", ".gradle", ".md", ".txt", ".env", ".csv", ".tsv",
    ".gitignore", ".gitattributes", ".editorconfig", ".prettierrc", ".eslintrc",
}

# MIME types we treat as text even if extension is unknown
TEXT_MIME_PREFIXES = ("text/",)
TEXT_MIME_EXTRAS = {
    "application/json", "application/xml", "application/javascript",
    "application/x-sh", "application/x-shellscript",
}

# Default directories to skip while walking/printing the tree
DEFAULT_EXCLUDES = {".next", "node_modules"}

# ---------- Helpers ----------

def _has_bom(head: bytes) -> str | None:
    if head.startswith(b"\xef\xbb\xbf"):
        return "utf-8-sig"
    if head.startswith(b"\xff\xfe\x00\x00"):
        return "utf-32-le"
    if head.startswith(b"\x00\x00\xfe\xff"):
        return "utf-32-be"
    if head.startswith(b"\xff\xfe"):
        return "utf-16-le"
    if head.startswith(b"\xfe\xff"):
        return "utf-16-be"
    return None

def _looks_binary(head: bytes) -> bool:
    if b"\x00" in head:
        return True
    # Consider control chars (excluding \t, \n, \r, \f) as "weird"
    weird = sum(1 for b in head if (b < 32 and b not in (9,10,13,12)))
    # If > 30% are weird control bytes, likely binary
    return (len(head) > 0) and (weird / len(head) > 0.30)

def is_text_file(path: Path, sample_bytes: int = 4096) -> bool:
    # 1) Obvious by extension
    if path.suffix.lower() in TEXT_EXTS:
        return True
    # 2) BOM presence indicates text
    try:
        with path.open("rb") as f:
            head = f.read(sample_bytes)
    except Exception:
        return False
    if _has_bom(head):
        return True
    # 3) MIME hint
    mt, _ = mimetypes.guess_type(path.as_posix())
    if mt and (mt.startswith(TEXT_MIME_PREFIXES) or mt in TEXT_MIME_EXTRAS):
        return True
    # 4) Heuristic on bytes
    return not _looks_binary(head)

def read_text_preserve(path: Path) -> str:
    """Read text preserving original characters as closely as possible."""
    # Respect PEP 263 for Python files
    if path.suffix.lower() == ".py":
        with tokenize.open(path) as f:
            return f.read()
    # BOM-aware for common Unicode encodings
    with path.open("rb") as fb:
        head = fb.read(4)
    enc = _has_bom(head)
    if enc:
        return path.read_text(encoding=enc)
    # Try UTF-8, then Latin-1 (lossless mapping of bytes 0–255)
    try:
        return path.read_text(encoding="utf-8")
    except UnicodeDecodeError:
        return path.read_text(encoding="latin-1")

def write_header(out, rel_path: Path, size_bytes: int | None, marker: str | None = None):
    out.write(f"{HEADER_LINE}\n")
    out.write(f"FILE: {rel_path.as_posix()}")
    if size_bytes is not None:
        out.write(f"  (size: {size_bytes} bytes)")
    if marker:
        out.write(f"  [{marker}]")
    out.write("\n")
    out.write(f"{HEADER_LINE}\n")

def iter_all_files(root: Path, followlinks: bool, exclude_dirs: set[str]) -> list[Path]:
    files: list[Path] = []
    for dirpath, dirnames, filenames in os.walk(root, followlinks=followlinks):
        # prune
        if exclude_dirs:
            dirnames[:] = [d for d in dirnames if d not in exclude_dirs]
        for fn in filenames:
            files.append(Path(dirpath) / fn)
    files.sort(key=lambda p: p.as_posix().lower())
    return files

def tree_lines(root: Path, exclude_dirs: set[str], followlinks: bool) -> list[str]:
    """Produce an ASCII tree (dirs then files, sorted)."""
    lines: list[str] = [f"{root.name}/"]
    def walk(d: Path, prefix: str):
        try:
            entries = sorted(
                [e for e in d.iterdir() if e.name not in exclude_dirs],
                key=lambda p: (not p.is_dir(), p.name.lower())
            )
        except PermissionError:
            return
        for i, e in enumerate(entries):
            last = (i == len(entries) - 1)
            conn = "└── " if last else "├── "
            if e.is_dir():
                lines.append(f"{prefix}{conn}{e.name}/")
                walk(e, prefix + ("    " if last else "│   "))
            else:
                lines.append(f"{prefix}{conn}{e.name}")
    walk(root, "")
    return lines

# ---------- Main logic ----------

def collect(root: Path, out_path: Path, followlinks: bool, exclude_dirs: set[str]) -> int:
    root = root.resolve()
    out_path = out_path.resolve()

    if not root.exists() or not root.is_dir():
        print(f"Error: root '{root}' is not a directory.", file=sys.stderr)
        return 2

    files = iter_all_files(root, followlinks, exclude_dirs)
    if not files:
        print("No files found.", file=sys.stderr)
        return 1

    out_path.parent.mkdir(parents=True, exist_ok=True)

    text_count = 0
    bin_count = 0

    with out_path.open("w", encoding="utf-8", newline="\n") as out:
        for f in files:
            # Don't include the output file itself
            try:
                if f.resolve() == out_path:
                    continue
            except Exception:
                pass

            rel = f.relative_to(root)
            try:
                size_bytes = f.stat().st_size
            except Exception:
                size_bytes = None

            try:
                if is_text_file(f):
                    content = read_text_preserve(f)
                    write_header(out, rel, size_bytes)
                    out.write(content)
                    if not content.endswith("\n"):
                        out.write("\n")
                    out.write("\n")
                    text_count += 1
                else:
                    write_header(out, rel, size_bytes, marker="UNSUPPORTED/NON-TEXT")
                    out.write("(contents omitted)\n\n")
                    bin_count += 1
            except Exception as e:
                write_header(out, rel, size_bytes, marker="READ_ERROR")
                out.write(f"[ERROR] {e}\n\n")
                bin_count += 1

        # ---- Append project tree ----
        out.write(f"{HEADER_LINE}\nPROJECT TREE\n{HEADER_LINE}\n")
        for line in tree_lines(root, exclude_dirs, followlinks):
            out.write(line + "\n")

        # ---- Summary ----
        out.write("\n")
        out.write(f"{HEADER_LINE}\nSUMMARY\n{HEADER_LINE}\n")
        out.write(f"Text files written : {text_count}\n")
        out.write(f"Non-text/omitted   : {bin_count}\n")
        out.write(f"Total files seen   : {len(files)}\n")

    print(f"Done. Text={text_count}  Non-text={bin_count}  Wrote -> '{out_path}'.")
    return 0

def parse_excludes(argv_excludes: list[str]) -> set[str]:
    """
    Accept bare directory names (top-level names) to prune while walking.
    Always include defaults (.next, node_modules), while allowing users to add more.
    """
    return DEFAULT_EXCLUDES.union(set(argv_excludes or []))

def main():
    ap = argparse.ArgumentParser(description="Write all text files, list non-text files, then append project tree.")
    ap.add_argument("root", type=Path, help="Root directory to scan")
    ap.add_argument("output", type=Path, help="Output .txt file")
    ap.add_argument("--exclude", nargs="*", default=[], help="Extra directory names to exclude in addition to '.next' and 'node_modules' (space-separated)")
    ap.add_argument("--followlinks", action="store_true", help="Follow symlinked directories")
    args = ap.parse_args()

    exclude_dirs = parse_excludes(args.exclude)
    rc = collect(args.root, args.output, followlinks=args.followlinks, exclude_dirs=exclude_dirs)
    sys.exit(rc)

if __name__ == "__main__":
    main()

================================================================================
FILE: components/ArticleShell.tsx  (size: 1463 bytes)
================================================================================
import { ReactNode } from "react";
import ReadingProgress from "@/components/ReadingProgress";
import TOC from "@/components/TOC";
import type { TOCItem } from "@/lib/toc";

export default function ArticleShell({
                                         title,
                                         subtitle,
                                         toc,
                                         children,
                                     }: {
    title: string;
    subtitle?: string;
    toc?: TOCItem[];
    children: ReactNode;
}) {
    return (
        <>
            <ReadingProgress />
            <header className="hero-glow mb-6">
                <h1 className="text-3xl md:text-5xl font-extrabold leading-tight tracking-tight">
          <span className="bg-gradient-to-r from-[var(--fg)] via-[var(--accent)] to-[var(--accent-2)] bg-clip-text text-transparent">
            {title}
          </span>
                </h1>
                {subtitle && <p className="mt-2 text-[var(--muted)] max-w-2xl">{subtitle}</p>}
            </header>

            <div className="grid lg:grid-cols-[minmax(0,1fr)_280px] gap-8">
                <article className="prose max-w-3xl">{children}</article>
                <aside className="hidden lg:block sticky top-24 h-fit">
                    <div className="card p-4">{toc && <TOC items={toc} />}</div>
                </aside>
            </div>
        </>
    );
}

================================================================================
FILE: components/Footer.tsx  (size: 306 bytes)
================================================================================
export function Footer() {
    return (
        <footer className="border-t border-[var(--border)]">
            <div className="container-xl py-8 text-sm text-[var(--muted)]">
                © {new Date().getFullYear()} Gimesha Nirmal. All rights reserved.
            </div>
        </footer>
    );
}

================================================================================
FILE: components/Header.tsx  (size: 6988 bytes)
================================================================================
"use client";

import Link from "next/link";
import { useEffect, useState } from "react";
import { ThemeToggle } from "./ThemeToggle";

export default function Header() {
    const [open, setOpen] = useState(false);

    // Close the drawer if user navigates with back/forward
    useEffect(() => {
        const onPop = () => setOpen(false);
        window.addEventListener("popstate", onPop);
        return () => window.removeEventListener("popstate", onPop);
    }, []);

    // Lock scroll WITHOUT reflow or jumping to top
    useEffect(() => {
        if (!open) return;

        const root = document.documentElement; // usually the scrolling element
        const body = document.body;
        const scrollY = window.scrollY;

        // save inline styles to restore later
        const prev = {
            rootOverflow: root.style.overflow,
            rootPaddingRight: root.style.paddingRight,
            bodyOverflow: body.style.overflow,
            bodyTouchAction: (body.style as any).touchAction || "",
        };

        // prevent background scroll without changing document flow
        const scrollbarWidth = window.innerWidth - root.clientWidth; // 0 on mobile
        root.style.overflow = "hidden";
        if (scrollbarWidth > 0) root.style.paddingRight = `${scrollbarWidth}px`;
        body.style.overflow = "hidden";
        (body.style as any).touchAction = "none"; // mobile-friendly

        return () => {
            root.style.overflow = prev.rootOverflow;
            root.style.paddingRight = prev.rootPaddingRight;
            body.style.overflow = prev.bodyOverflow;
            (body.style as any).touchAction = prev.bodyTouchAction;
            // ensure we’re exactly where we were
            window.scrollTo(0, scrollY);
        };
    }, [open]);

    return (
        <header className="sticky top-0 z-40 nav-blur">
            <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 h-14 flex items-center justify-between">
                <Link href="/" className="font-semibold tracking-tight">
                    gimesha.dev
                </Link>

                {/* Desktop nav */}
                <nav className="hidden md:flex items-center gap-4">
                    <Link href="/" className="hover:underline focus:outline-none focus:ring-2 focus:ring-[var(--accent)] rounded">
                        Home
                    </Link>
                    <Link href="/projects" className="hover:underline focus:outline-none focus:ring-2 focus:ring-[var(--accent)] rounded">
                        Projects
                    </Link>
                    <Link href="/case-studies" className="hover:underline focus:outline-none focus:ring-2 focus:ring-[var(--accent)] rounded">
                        Case Studies
                    </Link>
                    <Link href="/about" className="hover:underline focus:outline-none focus:ring-2 focus:ring-[var(--accent)] rounded">
                        About
                    </Link>
                    <Link href="/contact" className="hover:underline focus:outline-none focus:ring-2 focus:ring-[var(--accent)] rounded">
                        Contact
                    </Link>
                    <ThemeToggle />
                </nav>

                {/* Mobile controls */}
                <div className="md:hidden flex items-center gap-2">
                    <ThemeToggle />
                    <button
                        type="button"
                        aria-label="Open menu"
                        className="inline-flex items-center justify-center h-9 w-9 rounded-lg hover:bg-[var(--surface)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--accent)]"
                        onClick={() => setOpen(true)}
                    >
                        <svg width="22" height="22" viewBox="0 0 24 24" fill="none" aria-hidden>
                            <path d="M4 7h16M4 12h16M4 17h16" stroke="currentColor" strokeWidth="1.8" strokeLinecap="round" />
                        </svg>
                    </button>
                </div>
            </div>

            {/* Mobile drawer overlay (fixed to viewport) */}
            <div
                className={`fixed inset-0 z-50 md:hidden transition-opacity ${
                    open ? "opacity-100" : "pointer-events-none opacity-0"
                }`}
                onClick={() => setOpen(false)}
            >
                {/* Backdrop */}
                <div className="absolute inset-0 bg-black/40" />

                {/* Sliding panel */}
                <div
                    className={`absolute inset-y-0 right-0 w-[85%] max-w-sm bg-[var(--bg)] border-l border-[var(--border)] shadow-xl
            transform transition-transform duration-300 ${open ? "translate-x-0" : "translate-x-full"}`}
                    onClick={(e) => e.stopPropagation()}
                    role="dialog"
                    aria-modal="true"
                >
                    <div className="h-14 px-4 flex items-center justify-between border-b border-[var(--border)]">
                        <span className="font-semibold">Menu</span>
                        <button
                            type="button"
                            aria-label="Close menu"
                            className="inline-flex items-center justify-center h-9 w-9 rounded-lg hover:bg-[var(--surface)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--accent)]"
                            onClick={() => setOpen(false)}
                        >
                            <svg width="22" height="22" viewBox="0 0 24 24" fill="none" aria-hidden>
                                <path d="M6 6l12 12M18 6l-12 12" stroke="currentColor" strokeWidth="1.8" strokeLinecap="round" />
                            </svg>
                        </button>
                    </div>

                    <nav className="px-4 py-3 flex flex-col gap-1">
                        <Link href="/" onClick={() => setOpen(false)} className="card px-3 py-3 rounded-lg">
                            Home
                        </Link>
                        <Link href="/projects" onClick={() => setOpen(false)} className="card px-3 py-3 rounded-lg">
                            Projects
                        </Link>
                        <Link href="/case-studies" onClick={() => setOpen(false)} className="card px-3 py-3 rounded-lg">
                            Case Studies
                        </Link>
                        <Link href="/about" onClick={() => setOpen(false)} className="card px-3 py-3 rounded-lg">
                            About
                        </Link>
                        <Link href="/contact" onClick={() => setOpen(false)} className="card px-3 py-3 rounded-lg">
                            Contact
                        </Link>
                    </nav>
                </div>
            </div>
        </header>
    );
}

================================================================================
FILE: components/MDX.tsx  (size: 4931 bytes)
================================================================================
import * as React from "react";
import { MDXRemote } from "next-mdx-remote/rsc";

function cx(...cls: Array<string | undefined | false>) {
    return cls.filter(Boolean).join(" ");
}

export function slugify(s: string) {
    return s
        .toLowerCase()
        .replace(/[`~!@#$%^&*()+={}\[\]|\\:;"'<>,.?/]+/g, "")
        .replace(/\s+/g, "-")
        .replace(/-+/g, "-")
        .replace(/^-|-$/g, "");
}

/**
 * Normalizes angle-bracket autolinks (<https://…>, <mailto:…>)
 * into standard markdown links so MDX renders consistent anchors.
 */
function normalizeMDX(s: string) {
    return s
        .replace(/<\s*(https?:\/\/[^>\s]+)\s*>/gi, (_m, url) => `[${url}](${url})`)
        .replace(/<\s*(mailto:[^>\s]+)\s*>/gi, (_m, url) => `[${url}](${url})`);
}

/**
 * Safe <a> mapper:
 * - Avoids nested <a> hydration errors by detecting a single <a> child and
 *   cloning it instead of rendering an extra wrapper.
 * - Adds external target/rel for http(s) links.
 */
function Anchor(props: any) {
    const { href = "", children, className, ...rest } = props;
    const kids = React.Children.toArray(children);

    if (
        kids.length === 1 &&
        React.isValidElement(kids[0]) &&
        (kids[0] as any).type === "a"
    ) {
        const child = kids[0] as React.ReactElement<any>;
        return React.cloneElement(child, {
            ...child.props,
            ...rest,
            href: child.props.href ?? href,
            className: cx(child.props.className, className),
        });
    }

    const isExternal = /^https?:\/\//i.test(href);
    return (
        <a
            href={href}
            className={cx("underline hover:no-underline break-words", className)}
            {...(isExternal ? { target: "_blank", rel: "noreferrer" } : {})}
            {...rest}
        >
            {children}
        </a>
    );
}

/**
 * Headings with anchored ids and hoverable “#” link.
 * Sizes are fluid for readability on mobile.
 */
function Heading(tag: "h2" | "h3" | "h4") {
    return function H({ children, className, ...rest }: any) {
        const text = React.Children.toArray(children).join(" ");
        const id = slugify(String(text));
        const Tag: any = tag;
        const sizes =
            tag === "h2"
                ? "text-2xl md:text-3xl font-semibold"
                : tag === "h3"
                    ? "text-xl md:text-2xl font-semibold"
                    : "text-lg md:text-xl font-semibold";

        return (
            <Tag
                id={id}
                className={cx(
                    "group scroll-mt-28 mt-10 first:mt-0",
                    sizes,
                    "leading-snug tracking-tight",
                    className
                )}
                {...rest}
            >
                <a href={`#${id}`} className="no-underline text-inherit">
                    {children}
                    <span className="ml-2 opacity-0 group-hover:opacity-60 transition-opacity">#</span>
                </a>
            </Tag>
        );
    };
}

/** Responsive image wrapper (keeps markdown <img> usable). */
function Img(props: any) {
    const { className, ...rest } = props;
    return (
        <span className="block my-4 rounded-xl overflow-hidden border border-[var(--border)]">
      {/* Use native <img> for MDXRemote */}
            <img {...rest} className={cx("w-full h-auto", className)} />
    </span>
    );
}

/** Responsive table wrapper to avoid horizontal overflow on phones. */
function Table(props: any) {
    return (
        <div className="my-4 overflow-x-auto rounded-xl border border-[var(--border)]">
            <table className="w-full text-sm md:text-base" {...props} />
        </div>
    );
}

const components = {
    h2: Heading("h2"),
    h3: Heading("h3"),
    h4: Heading("h4"),

    p:  (p: any) => <p className="my-4 text-[var(--muted)] leading-relaxed" {...p} />,
    ul: (p: any) => <ul className="my-3 list-disc pl-6 space-y-2" {...p} />,
    ol: (p: any) => <ol className="my-3 list-decimal pl-6 space-y-2" {...p} />,
    li: (p: any) => <li className="leading-relaxed" {...p} />,

    a: Anchor,
    img: Img,
    table: Table,

    hr:   (p: any) => <hr className="my-8 border-[var(--border)]" {...p} />,
    code: (p: any) => <code className="px-1 py-0.5 rounded bg-[var(--surface)]" {...p} />,
    pre:  (p: any) => <pre className="p-4 rounded bg-[var(--surface)] overflow-x-auto" {...p} />,

    blockquote: (p: any) => (
        <blockquote
            className="my-5 border-l-4 border-[var(--accent)]/50 pl-4 italic text-[var(--muted)]"
            {...p}
        />
    ),
};

export function RenderMDX({ source }: { source: string }) {
    return <MDXRemote source={normalizeMDX(source)} components={components as any} />;
}

================================================================================
FILE: components/ReadingProgress.tsx  (size: 864 bytes)
================================================================================
"use client";

import * as React from "react";

export default function ReadingProgress() {
    const [pct, setPct] = React.useState(0);
    React.useEffect(() => {
        const onScroll = () => {
            const el = document.documentElement;
            const total = el.scrollHeight - el.clientHeight;
            const p = total > 0 ? (el.scrollTop / total) * 100 : 0;
            setPct(Math.max(0, Math.min(100, p)));
        };
        onScroll();
        window.addEventListener("scroll", onScroll, { passive: true });
        return () => window.removeEventListener("scroll", onScroll);
    }, []);
    return (
        <div className="fixed inset-x-0 top-0 z-40 h-0.5 bg-transparent">
            <div className="h-full bg-[var(--accent)] transition-[width] duration-150" style={{ width: `${pct}%` }} />
        </div>
    );
}

================================================================================
FILE: components/RepoCard.tsx  (size: 4944 bytes)
================================================================================
import Link from "next/link";
import Image from "next/image";
import type { Repo } from "@/lib/github";
import { getRepoCardExtras } from "@/lib/github";

function formatDate(s: string) {
    try {
        return new Date(s).toLocaleDateString();
    } catch {
        return s;
    }
}

export async function RepoCard({ repo }: { repo: Repo }) {
    let cover: string | null = null;
    let bullets: string[] = [];
    let stack: string[] = [];
    let topLangs: { name: string; pct: number }[] = [];

    try {
        const extras = await getRepoCardExtras(repo);
        cover = extras.cover ?? null;
        bullets = extras.bullets ?? [];
        stack = extras.stack ?? [];
        topLangs = extras.topLangs ?? [];
    } catch {}

    const uniqueStack = Array.from(new Set(stack.filter(Boolean))).slice(0, 4);
    const showFooterLangs = uniqueStack.length === 0;
    const updated = formatDate((repo.pushedAt as any) || (repo.updatedAt as any));

    return (
        <Link href={`/projects/${repo.name}`} className="group block h-full">
            <div className="relative rounded-2xl p-[1px] transition-transform duration-300 group-hover:-translate-y-0.5 h-full">
                <div className="absolute inset-0 rounded-2xl bg-gradient-to-br from-[var(--accent)] to-[var(--accent-2)] opacity-30 group-hover:opacity-60 blur-[0.5px]" />
                <div className="relative card rounded-2xl overflow-hidden h-full flex flex-col">
                    <div className="relative aspect-[16/10] bg-[var(--surface)]">
                        {cover ? (
                            <Image
                                src={cover}
                                alt={`Cover image for ${repo.name}`}
                                fill
                                className="object-cover transition-transform duration-500 group-hover:scale-[1.03]"
                                sizes="(min-width: 1024px) 33vw, (min-width: 640px) 50vw, 100vw"
                                priority={false}
                                unoptimized
                            />
                        ) : (
                            <div className="absolute inset-0 grid place-items-center text-[var(--muted)]">No image</div>
                        )}
                        <div className="pointer-events-none absolute inset-x-0 bottom-0 h-16 bg-gradient-to-t from-[color:var(--surface)]/85 to-transparent" />
                    </div>

                    <div className="p-5 md:p-6 flex-1 flex flex-col">
                        <div className="flex items-start justify-between gap-3">
                            <h3 className="text-base sm:text-lg md:text-xl font-semibold tracking-tight line-clamp-1">{repo.name}</h3>
                            <span className="hairline rounded-full px-2 py-0.5 text-xs text-[var(--muted)] whitespace-nowrap shrink-0">
                Updated {updated}
              </span>
                        </div>

                        {repo.description && (
                            <p className="mt-2 text-sm text-[var(--muted)] line-clamp-2">{repo.description}</p>
                        )}

                        {bullets.length > 0 && (
                            <ul className="mt-3 space-y-1 text-sm list-disc pl-5 text-[var(--fg)]">
                                {bullets.slice(0, 2).map((b, i) => (
                                    <li key={i} className="line-clamp-1">{b}</li>
                                ))}
                            </ul>
                        )}

                        {uniqueStack.length > 0 && (
                            <div className="mt-4 flex flex-wrap gap-2">
                                {uniqueStack.map((t) => (
                                    <span key={t} className="hairline rounded-lg px-2 py-1 text-xs text-[var(--muted)]">
                    {t}
                  </span>
                                ))}
                            </div>
                        )}

                        <div className="mt-4 pt-3 flex items-center justify-between text-xs text-[var(--muted)] border-t border-[var(--border)]">
                            <span>★ {repo.stars ?? 0}</span>
                            {showFooterLangs && topLangs.length > 0 && (
                                <div className="flex items-center gap-2">
                                    {topLangs.slice(0, 3).map((l) => (
                                        <span key={l.name} className="hairline rounded-lg px-2 py-1">
                      {l.name} {Math.round(l.pct)}%
                    </span>
                                    ))}
                                </div>
                            )}
                        </div>
                    </div>
                </div>
            </div>
        </Link>
    );
}

================================================================================
FILE: components/ThemeToggle.tsx  (size: 1837 bytes)
================================================================================
// components/ThemeToggle.tsx
"use client";
import { useEffect, useState } from "react";

function getCookie(name: string) {
    if (typeof document === "undefined") return null;
    const match = document.cookie.match(new RegExp("(^|; )" + name + "=([^;]*)"));
    return match ? decodeURIComponent(match[2]) : null;
}
function setCookie(name: string, value: string) {
    document.cookie = `${name}=${encodeURIComponent(value)}; Path=/; Max-Age=31536000; SameSite=Lax`;
}

export function ThemeToggle() {
    const [mounted, setMounted] = useState(false);
    const [light, setLight] = useState(false);

    useEffect(() => {
        setMounted(true);
        const fromCookie = getCookie("theme");
        const fromLS = (() => {
            try { return localStorage.getItem("theme"); } catch { return null; }
        })();
        const systemDark =
            typeof window !== "undefined" &&
            window.matchMedia &&
            window.matchMedia("(prefers-color-scheme: dark)").matches;

        const initial = (fromCookie || fromLS || (systemDark ? "dark" : "light")) as "light" | "dark";
        document.documentElement.dataset.theme = initial;
        try { localStorage.setItem("theme", initial); } catch {}
        setCookie("theme", initial);
        setLight(initial === "light");
    }, []);

    if (!mounted) return null;

    const toggle = () => {
        const next = light ? "dark" : "light";
        document.documentElement.dataset.theme = next;
        try { localStorage.setItem("theme", next); } catch {}
        setCookie("theme", next);
        setLight(!light);
    };

    return (
        <button onClick={toggle} className="btn btn-ghost focus-ring" aria-label="Toggle theme">
            {light ? "🌞" : "🌙"}
        </button>
    );
}

================================================================================
FILE: components/TOC.tsx  (size: 1856 bytes)
================================================================================
"use client";

import * as React from "react";
import type { TOCItem } from "@/lib/toc";

export default function TOC({ items }: { items: TOCItem[] }) {
    const [active, setActive] = React.useState<string | null>(items?.[0]?.id ?? null);

    React.useEffect(() => {
        const headings = items.map((i) => document.getElementById(i.id)).filter(Boolean) as HTMLElement[];
        if (headings.length === 0) return;

        const obs = new IntersectionObserver(
            (entries) => {
                const vis = entries
                    .filter((e) => e.isIntersecting)
                    .sort((a, b) => (a.target as HTMLElement).offsetTop - (b.target as HTMLElement).offsetTop);
                if (vis[0]) setActive((vis[0].target as HTMLElement).id);
            },
            { rootMargin: "0px 0px -70% 0px", threshold: [0, 1] }
        );

        headings.forEach((h) => obs.observe(h));
        return () => obs.disconnect();
    }, [items]);

    if (!items?.length) return null;

    return (
        <nav className="text-sm">
            <p className="mb-2 font-medium text-[var(--muted)]">On this page</p>
            <ul className="space-y-1">
                {items.map((i) => (
                    <li key={i.id} className={i.depth > 2 ? "pl-3" : ""}>
                        <a
                            href={`#${i.id}`}
                            className={
                                "block rounded px-2 py-1 hover:bg-[var(--surface)] " +
                                (active === i.id ? "bg-[var(--surface)] text-[var(--fg)]" : "text-[var(--muted)]")
                            }
                        >
                            {i.text}
                        </a>
                    </li>
                ))}
            </ul>
        </nav>
    );
}

================================================================================
FILE: cover.png  (size: 474637 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: data/pinned.json  (size: 105 bytes)
================================================================================
{
  "pinned": [
    "multi-platform-banking-system",
    "neurosim",
    "webapp-ecommerce"
  ]
}

================================================================================
FILE: lib/content.ts  (size: 4270 bytes)
================================================================================
const RAW = "https://raw.githubusercontent.com";
const API = "https://api.github.com";

const OWNER = process.env.CONTENT_OWNER!;
const REPO = process.env.CONTENT_REPO!;
const BRANCH = process.env.CONTENT_BRANCH || "main";
const TOKEN = process.env.CONTENT_TOKEN || process.env.GITHUB_TOKEN || "";

const REVALIDATE = Number(process.env.CONTENT_REVALIDATE ?? 300);
const IS_DEV = process.env.NODE_ENV !== "production";
const DEBUG = process.env.CONTENT_DEBUG === "true";

function publicHeaders(): HeadersInit {
    return { "User-Agent": "gn-portfolio" };
}

function apiHeaders(): HeadersInit {
    const h: Record<string, string> = {
        "User-Agent": "gn-portfolio",
        Accept: "application/vnd.github+json",
    };
    if (TOKEN) h.Authorization = `Bearer ${TOKEN}`;
    return h;
}

async function fetchWithTimeout(
    url: string,
    init: RequestInit & { revalidate?: number } = {},
    ms = 5000
) {
    const { revalidate = REVALIDATE, ...rest } = init;
    const ac = new AbortController();
    const t = setTimeout(() => ac.abort(), ms);

    const opts: any = {
        ...rest,
        signal: ac.signal,
    };
    if (IS_DEV) {
        opts.cache = "no-store";
    } else {
        opts.next = { revalidate };
    }

    try {
        const res = await fetch(url, opts);
        return res;
    } finally {
        clearTimeout(t);
    }
}

async function fetchText(path: string, revalidate = REVALIDATE): Promise<string | null> {
    const clean = path.replace(/^\/+/, "");

    if (TOKEN) {
        const apiUrl = `${API}/repos/${OWNER}/${REPO}/contents/${encodeURIComponent(clean)}?ref=${encodeURIComponent(
            BRANCH
        )}`;
        try {
            const res = await fetchWithTimeout(apiUrl, { headers: apiHeaders(), revalidate }, 7000);
            if (res?.ok) {
                const json: any = await res.json();
                const b64 = (json?.content as string | undefined)?.replace(/\n/g, "");
                if (b64) {
                    const text =
                        typeof Buffer !== "undefined"
                            ? Buffer.from(b64, "base64").toString("utf-8")
                            : decodeURIComponent(
                                escape(
                                    Array.from(atob(b64))
                                        .map((c) => String.fromCharCode(c.charCodeAt(0)))
                                        .join("")
                                )
                            );
                    if (DEBUG) console.log("[content] API OK:", clean);
                    return text;
                }
                if (DEBUG) console.warn("[content] API JSON missing content:", clean);
            } else if (DEBUG) {
                console.warn("[content] API not OK:", clean, res?.status, res?.statusText);
            }
        } catch (e) {
            if (DEBUG) console.warn("[content] API error:", clean, e);
        }
    }

    try {
        const rawUrl = `${RAW}/${OWNER}/${REPO}/${BRANCH}/${clean}`;
        const res = await fetchWithTimeout(rawUrl, { headers: publicHeaders(), revalidate }, 5000);
        if (res?.ok) {
            if (DEBUG) console.log("[content] RAW OK:", clean);
            return await res.text();
        }
        if (DEBUG) console.warn("[content] RAW not OK:", clean, res?.status, res?.statusText);
    } catch (e) {
        if (DEBUG) console.warn("[content] RAW error:", clean, e);
    }

    return null;
}

export type CaseIndexItem = { slug: string; title: string; description?: string };

export async function getAboutMDX() {
    return fetchText("about.mdx");
}
export async function getContactMDX() {
    return fetchText("contact.mdx");
}
export async function getCaseIndex(): Promise<CaseIndexItem[]> {
    const json = await fetchText("case-studies/index.json");
    if (!json) return [];
    try {
        const parsed = JSON.parse(json);
        return Array.isArray(parsed) ? (parsed as CaseIndexItem[]) : [];
    } catch {
        return [];
    }
}
export async function getCaseMDX(slug: string) {
    return fetchText(`case-studies/${encodeURIComponent(slug)}.mdx`);
}

================================================================================
FILE: lib/github.ts  (size: 9890 bytes)
================================================================================
const API = "https://api.github.com";

/** ========= Tuning via env =========
 * GITHUB_USERNAME                (required)
 * GITHUB_TOKEN                   (optional, avoids rate limits / enables private)
 * GITHUB_INCLUDE_PRIVATE=true    (default true)
 * GITHUB_INCLUDE_FORKS=false     (default false)
 * GITHUB_INCLUDE_ARCHIVED=false  (default false)
 * GITHUB_OWNER_ONLY=true         (default true)
 *
 * Timeouts & pagination:
 * GITHUB_TIMEOUT_MS=2500
 * GITHUB_README_TIMEOUT_MS=1500
 * GITHUB_MAX_PAGES=5
 *
 * Extras:
 * GITHUB_ENABLE_README_EXTRAS=false   (default false => no README fetch)
 */
const TIMEOUT_MS = Number(process.env.GITHUB_TIMEOUT_MS || 2500);
const README_TIMEOUT_MS = Number(process.env.GITHUB_README_TIMEOUT_MS || 1500);
const MAX_PAGES = Math.max(1, Number(process.env.GITHUB_MAX_PAGES || 5));
const ENABLE_README_EXTRAS =
    (process.env.GITHUB_ENABLE_README_EXTRAS ?? "false").toLowerCase() === "true";


function ghHeaders() {
    const h: Record<string, string> = {
        Accept: "application/vnd.github+json",
        "X-GitHub-Api-Version": "2022-11-28",
        "User-Agent": "gn-portfolio",
    };
    if (process.env.GITHUB_TOKEN)
        h.Authorization = `Bearer ${process.env.GITHUB_TOKEN}`;
    return h;
}

function publicHeaders() {
    return {
        Accept: "application/vnd.github+json",
        "X-GitHub-Api-Version": "2022-11-28",
        "User-Agent": "gn-portfolio",
    };
}

/** Abortable fetch with timeout (doesn't cancel remote, but aborts locally) */
async function fetchWithTimeout(
    url: string,
    init: RequestInit & { revalidate?: number } = {},
    ms = TIMEOUT_MS
) {
    const { revalidate = 900, ...rest } = init;
    const ac = new AbortController();
    const t = setTimeout(() => ac.abort(), ms);
    try {
        const res = await fetch(url, { ...rest, signal: ac.signal, next: { revalidate } });
        return res;
    } finally {
        clearTimeout(t);
    }
}

async function gh<T>(path: string, init?: RequestInit & { revalidate?: number }) {
    const res = await fetchWithTimeout(`${API}${path}`, { headers: ghHeaders(), ...init });
    if (!res.ok) throw new Error(`GitHub ${res.status}: ${path}`);
    return res.json() as Promise<T>;
}

async function ghPublic<T>(path: string, revalidate = 900) {
    const res = await fetchWithTimeout(`${API}${path}`, {
        headers: publicHeaders(),
        revalidate,
    });
    if (!res.ok) throw new Error(`GitHub public ${res.status}: ${path}`);
    return res.json() as Promise<T>;
}


export type Repo = {
    name: string;
    fullName: string;
    description: string | null;
    private: boolean;
    fork: boolean;
    archived: boolean;
    htmlUrl: string;
    homepage?: string | null;
    stars: number;
    forks: number;
    watchers: number;
    language?: string | null;
    topics?: string[];
    license?: string | null;
    createdAt: string;
    updatedAt: string;
    pushedAt: string;
    defaultBranch: string;
    owner?: { login: string };
};

function mapRepo(r: any): Repo {
    return {
        name: r.name,
        fullName: r.full_name,
        description: r.description,
        private: r.private,
        fork: r.fork,
        archived: r.archived,
        htmlUrl: r.html_url,
        homepage: r.homepage,
        stars: r.stargazers_count,
        forks: r.forks_count,
        watchers: r.watchers_count,
        language: r.language,
        topics: r.topics,
        license: r.license?.spdx_id ?? r.license?.key ?? null,
        createdAt: r.created_at,
        updatedAt: r.updated_at,
        pushedAt: r.pushed_at,
        defaultBranch: r.default_branch,
        owner: r.owner ? { login: r.owner.login } : undefined,
    };
}


export async function fetchAllRepos(): Promise<Repo[]> {
    const username = process.env.GITHUB_USERNAME!;
    const includePrivate = (process.env.GITHUB_INCLUDE_PRIVATE ?? "true").toLowerCase() === "true";
    const includeForks = (process.env.GITHUB_INCLUDE_FORKS ?? "false").toLowerCase() === "true";
    const includeArchived = (process.env.GITHUB_INCLUDE_ARCHIVED ?? "false").toLowerCase() === "true";
    const ownerOnly = (process.env.GITHUB_OWNER_ONLY ?? "true").toLowerCase() === "true";

    const authed: Repo[] = [];
    try {
        let page = 1;
        while (page <= MAX_PAGES) {
            const data = await gh<any[]>(
                `/user/repos?per_page=100&page=${page}&sort=pushed&direction=desc`
            );
            if (!data.length) break;
            authed.push(...data.map(mapRepo));
            if (data.length < 100) break;
            page++;
        }
    } catch {
    }

    let publicRepos: Repo[] = [];
    try {
        const publicList = await ghPublic<any[]>(
            `/users/${encodeURIComponent(username)}/repos?per_page=100&sort=pushed&direction=desc`
        );
        publicRepos = publicList.map(mapRepo);
    } catch {
        publicRepos = [];
    }

    const byKey = new Map<string, Repo>();
    for (const r of publicRepos) byKey.set(r.fullName.toLowerCase(), r);
    for (const r of authed) byKey.set(r.fullName.toLowerCase(), r);

    let all = Array.from(byKey.values());
    if (ownerOnly)
        all = all.filter(
            (r) => (r.owner?.login ?? username).toLowerCase() === username.toLowerCase()
        );
    if (!includePrivate) all = all.filter((r) => !r.private);
    if (!includeForks) all = all.filter((r) => !r.fork);
    if (!includeArchived) all = all.filter((r) => !r.archived);

    all.sort(
        (a, b) => new Date(b.pushedAt).getTime() - new Date(a.pushedAt).getTime()
    );
    return all;
}

export async function fetchRepoByName(name: string): Promise<Repo> {
    const owner = process.env.GITHUB_USERNAME!;
    try {
        const repo = await gh<any>(`/repos/${owner}/${encodeURIComponent(name)}`);
        return mapRepo(repo);
    } catch {
        // Fallback to public endpoint
        const repo = await ghPublic<any>(`/repos/${owner}/${encodeURIComponent(name)}`);
        return mapRepo(repo);
    }
}

export async function fetchRepoLanguages(name: string) {
    const owner = process.env.GITHUB_USERNAME!;
    try {
        const langs = await gh<Record<string, number>>(
            `/repos/${owner}/${encodeURIComponent(name)}/languages`,
            { revalidate: 900 }
        );
        const total = Object.values(langs).reduce((a, b) => a + b, 0) || 1;
        return Object.entries(langs)
            .map(([k, v]) => ({ name: k, bytes: v, pct: (v / total) * 100 }))
            .sort((a, b) => b.bytes - a.bytes);
    } catch {
        return [];
    }
}


export async function fetchRepoReadmeRaw(name: string): Promise<string | null> {
    if (!ENABLE_README_EXTRAS) return null; // disabled by default to avoid timeouts
    const owner = process.env.GITHUB_USERNAME!;
    const res = await fetchWithTimeout(
        `${API}/repos/${owner}/${encodeURIComponent(name)}/readme`,
        {
            headers: { ...ghHeaders(), Accept: "application/vnd.github.raw" },
            revalidate: 900,
        },
        README_TIMEOUT_MS
    ).catch(() => null as any);

    if (!res || !res.ok) return null;
    return res.text();
}

function absolutizeReadmeUrl(url: string, owner: string, repo: string, branch: string) {
    if (/^https?:\/\//i.test(url)) return url;
    const clean = url.replace(/^\.?\//, "");
    return `https://raw.githubusercontent.com/${owner}/${repo}/${branch}/${clean}`;
}

export function extractReadmeMeta(md: string | null, owner: string, repo: string, branch: string) {
    let cover: string | null = null;
    const bullets: string[] = [];

    if (md) {
        // Pick the first non-badge image
        const imgRe = /!\[[^\]]*]\(([^)\s]+)(?:\s+"[^"]*")?\)/g;
        let m: RegExpExecArray | null;
        while ((m = imgRe.exec(md))) {
            const candidate = (m[1] || "").trim();
            if (!candidate) continue;
            if (/shields\.io|badgen\.net|badge|visitor|coverage|workflow/i.test(candidate)) continue;
            cover = absolutizeReadmeUrl(candidate, owner, repo, branch);
            break;
        }

        // First 80 lines: collect up to 2 short bullets
        const lines = md.split(/\r?\n/);
        for (let i = 0; i < Math.min(lines.length, 80); i++) {
            const mm = lines[i].match(/^\s*[-*]\s+(.+?)\s*$/);
            if (mm && mm[1] && mm[1].length < 140) bullets.push(mm[1]);
            if (bullets.length >= 2) break;
        }
    }
    return { cover, bullets };
}

/* ---------- Card extras ---------- */

export async function getRepoCardExtras(repo: Repo) {
    const [langs, readme] = await Promise.allSettled([
        fetchRepoLanguages(repo.name),
        fetchRepoReadmeRaw(repo.name),
    ]);

    const langList =
        langs.status === "fulfilled" && Array.isArray(langs.value) ? langs.value : [];

    let cover: string | null = null;
    let bullets: string[] = [];
    if (readme.status === "fulfilled") {
        const meta = extractReadmeMeta(
            readme.value,
            process.env.GITHUB_USERNAME!,
            repo.name,
            repo.defaultBranch
        );
        cover = meta.cover;
        bullets = meta.bullets;
    }

    const fromTopics = Array.isArray(repo.topics) && repo.topics.length > 0;
    const stackBase = fromTopics ? repo.topics! : langList.map((l) => l.name);
    const stack = Array.from(
        new Set([repo.language, ...stackBase].filter(Boolean))
    ).slice(0, 4) as string[];

    const topLangs = langList.slice(0, 3).map((l) => ({ name: l.name, pct: l.pct }));

    return { cover, bullets, stack, topLangs };
}

================================================================================
FILE: lib/pins.ts  (size: 1190 bytes)
================================================================================
import type { Repo } from "@/lib/github";
import pinned from "@/data/pinned.json";

export function getPinnedNames(): string[] {
    return Array.isArray((pinned as any).pinned) ? (pinned as any).pinned : [];
}

export function orderReposWithPinned(repos: Repo[]): Repo[] {
    const names = getPinnedNames();
    const map = new Map(repos.map((r) => [r.name.toLowerCase(), r]));
    const pinnedOrdered: Repo[] = [];

    for (const n of names) {
        const hit = map.get(String(n).toLowerCase());
        if (hit) pinnedOrdered.push(hit);
    }

    const pinnedSet = new Set(pinnedOrdered.map((r) => r.name.toLowerCase()));
    const rest = repos
        .filter((r) => !pinnedSet.has(r.name.toLowerCase()))
        .sort((a, b) => {
            const ad = Date.parse((a.pushedAt || a.updatedAt || "") as string);
            const bd = Date.parse((b.pushedAt || b.updatedAt || "") as string);
            return (isNaN(bd) ? 0 : bd) - (isNaN(ad) ? 0 : ad);
        });

    return [...pinnedOrdered, ...rest];
}

export function isPinned(name: string): boolean {
    return getPinnedNames().map((n) => n.toLowerCase()).includes(name.toLowerCase());
}

================================================================================
FILE: lib/toc.ts  (size: 877 bytes)
================================================================================
export type TOCItem = { depth: 2 | 3 | 4; text: string; id: string };

export function slugify(s: string) {
    return s
        .toLowerCase()
        .replace(/[`~!@#$%^&*()+={}\[\]|\\:;"'<>,.?/]+/g, "")
        .replace(/\s+/g, "-")
        .replace(/-+/g, "-")
        .replace(/^-|-$/g, "");
}

export function buildTOC(mdx: string): TOCItem[] {
    const items: TOCItem[] = [];
    const lines = mdx.split(/\r?\n/);
    for (const line of lines) {
        const m = /^(#{2,4})\s+(.+?)\s*$/.exec(line);
        if (!m) continue;
        const depth = m[1].length as 2 | 3 | 4;
        if (depth < 2 || depth > 4) continue;
        const raw = m[2].replace(/`([^`]+)`/g, "$1").replace(/\[(.*?)\]\(.*?\)/g, "$1");
        const text = raw.trim();
        const id = slugify(text);
        items.push({ depth, text, id });
    }
    return items;
}

================================================================================
FILE: mdx-components.tsx  (size: 281 bytes)
================================================================================
import type { MDXComponents } from "mdx/types";

// Customize components available to MDX globally (optional)
const components: MDXComponents = {
  // Example: map <img> to next/image if you want later
};

export function useMDXComponents(): MDXComponents {
  return components;
}

================================================================================
FILE: next-env.d.ts  (size: 262 bytes)
================================================================================
/// <reference types="next" />
/// <reference types="next/image-types/global" />
/// <reference path="./.next/types/routes.d.ts" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.

================================================================================
FILE: next.config.mjs  (size: 733 bytes)
================================================================================
import createMDX from '@next/mdx'

const nextConfig = {
    pageExtensions: ['js', 'jsx', 'md', 'mdx', 'ts', 'tsx'],
    images: {
        remotePatterns: [
            { protocol: 'https', hostname: 'raw.githubusercontent.com' },
            { protocol: 'https', hostname: 'user-images.githubusercontent.com' },
            { protocol: 'https', hostname: 'github.com' },
            { protocol: "https", hostname: "images.githubusercontent.com" },
            { protocol: "https", hostname: "githubusercontent.com" },
            { protocol: "https", hostname: "images.unsplash.com" },
            { protocol: "https", hostname: "i.imgur.com" }
        ],
    },
}

const withMDX = createMDX({})

export default withMDX(nextConfig)

================================================================================
FILE: package-lock.json  (size: 186786 bytes)
================================================================================
{
  "name": "gimesha-portfolio",
  "version": "0.2.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "gimesha-portfolio",
      "version": "0.2.0",
      "dependencies": {
        "@mdx-js/loader": "latest",
        "@mdx-js/react": "latest",
        "@next/mdx": "latest",
        "@types/mdx": "latest",
        "gray-matter": "^4.0.3",
        "next": "^15.5.0",
        "next-mdx-remote": "^5.0.0",
        "react": "^19.1.0",
        "react-dom": "^19.1.0",
        "rehype-autolink-headings": "^7.1.0",
        "rehype-slug": "^6.0.0",
        "remark-gfm": "^4.0.1"
      },
      "devDependencies": {
        "@tailwindcss/postcss": "latest",
        "@tailwindcss/typography": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "eslint": "latest",
        "postcss": "latest",
        "tailwindcss": "latest",
        "typescript": "5.9.2"
      },
      "engines": {
        "node": ">=22.0.0"
      }
    },
    "node_modules/@alloc/quick-lru": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.27.1",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.1.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@emnapi/runtime": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.5.0.tgz",
      "integrity": "sha512-97/BJ3iXHww3djw6hYIfErCZFee7qCtrneuLa20UXFCOTCfBM2cvQHjWJ2EG0s0MtdNwInarqCTz35i4wWXHsQ==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
      "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.12.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/config-array": {
      "version": "0.21.0",
      "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.21.0.tgz",
      "integrity": "sha512-ENIdc4iLu0d93HeYirvKmrzshzofPw6VkZRKQGe9Nv46ZnWUzcF1xV01dcvEg/1wXUR61OmmlSfyeyO7EvjLxQ==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/object-schema": "^2.1.6",
        "debug": "^4.3.1",
        "minimatch": "^3.1.2"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/config-helpers": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.3.1.tgz",
      "integrity": "sha512-xR93k9WhrDYpXHORXpxVL5oHj3Era7wo6k/Wd8/IsQNnZUTzkGS29lyn3nAT05v6ltUuTFVCCYDEGfy2Or/sPA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/core": {
      "version": "0.15.2",
      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.15.2.tgz",
      "integrity": "sha512-78Md3/Rrxh83gCxoUc0EiciuOHsIITzLy53m3d9UyiW8y9Dj2D29FeETqyKA+BRK76tnTp6RXWb3pCay8Oyomg==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@types/json-schema": "^7.0.15"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz",
      "integrity": "sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^10.0.1",
        "globals": "^14.0.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/js": {
      "version": "9.34.0",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.34.0.tgz",
      "integrity": "sha512-EoyvqQnBNsV1CWaEJ559rxXL4c8V92gxirbawSmVUOWXlsRxxQXl6LmCpdUblgxgSkDIqKnhzba2SjRTI/A5Rw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      }
    },
    "node_modules/@eslint/object-schema": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
      "integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/plugin-kit": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.5.tgz",
      "integrity": "sha512-Z5kJ+wU3oA7MMIqVR9tyZRtjYPr4OC004Q4Rw7pgOKUOKkJfZ3O24nz3WYfGRpMDNmcOi3TwQOmgm7B7Tpii0w==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/core": "^0.15.2",
        "levn": "^0.4.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@humanfs/core": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
      "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
      "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@humanfs/core": "^0.19.1",
        "@humanwhocodes/retry": "^0.3.0"
      },
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
      "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/retry": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz",
      "integrity": "sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@img/sharp-darwin-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-arm64/-/sharp-darwin-arm64-0.34.3.tgz",
      "integrity": "sha512-ryFMfvxxpQRsgZJqBd4wsttYQbCxsJksrv9Lw/v798JcQ8+w84mBWuXwl+TT0WJ/WrYOLaYpwQXi3sA9nTIaIg==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-darwin-arm64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-darwin-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-x64/-/sharp-darwin-x64-0.34.3.tgz",
      "integrity": "sha512-yHpJYynROAj12TA6qil58hmPmAwxKKC7reUqtGLzsOHfP7/rniNGTL8tjWX6L3CTV4+5P4ypcS7Pp+7OB+8ihA==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-darwin-x64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-libvips-darwin-arm64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-arm64/-/sharp-libvips-darwin-arm64-1.2.0.tgz",
      "integrity": "sha512-sBZmpwmxqwlqG9ueWFXtockhsxefaV6O84BMOrhtg/YqbTaRdqDE7hxraVE3y6gVM4eExmfzW4a8el9ArLeEiQ==",
      "cpu": [
        "arm64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "darwin"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-darwin-x64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-x64/-/sharp-libvips-darwin-x64-1.2.0.tgz",
      "integrity": "sha512-M64XVuL94OgiNHa5/m2YvEQI5q2cl9d/wk0qFTDVXcYzi43lxuiFTftMR1tOnFQovVXNZJ5TURSDK2pNe9Yzqg==",
      "cpu": [
        "x64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "darwin"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-arm": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm/-/sharp-libvips-linux-arm-1.2.0.tgz",
      "integrity": "sha512-mWd2uWvDtL/nvIzThLq3fr2nnGfyr/XMXlq8ZJ9WMR6PXijHlC3ksp0IpuhK6bougvQrchUAfzRLnbsen0Cqvw==",
      "cpu": [
        "arm"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-arm64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm64/-/sharp-libvips-linux-arm64-1.2.0.tgz",
      "integrity": "sha512-RXwd0CgG+uPRX5YYrkzKyalt2OJYRiJQ8ED/fi1tq9WQW2jsQIn0tqrlR5l5dr/rjqq6AHAxURhj2DVjyQWSOA==",
      "cpu": [
        "arm64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-ppc64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-ppc64/-/sharp-libvips-linux-ppc64-1.2.0.tgz",
      "integrity": "sha512-Xod/7KaDDHkYu2phxxfeEPXfVXFKx70EAFZ0qyUdOjCcxbjqyJOEUpDe6RIyaunGxT34Anf9ue/wuWOqBW2WcQ==",
      "cpu": [
        "ppc64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-s390x": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-s390x/-/sharp-libvips-linux-s390x-1.2.0.tgz",
      "integrity": "sha512-eMKfzDxLGT8mnmPJTNMcjfO33fLiTDsrMlUVcp6b96ETbnJmd4uvZxVJSKPQfS+odwfVaGifhsB07J1LynFehw==",
      "cpu": [
        "s390x"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-x64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-x64/-/sharp-libvips-linux-x64-1.2.0.tgz",
      "integrity": "sha512-ZW3FPWIc7K1sH9E3nxIGB3y3dZkpJlMnkk7z5tu1nSkBoCgw2nSRTFHI5pB/3CQaJM0pdzMF3paf9ckKMSE9Tg==",
      "cpu": [
        "x64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linuxmusl-arm64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-arm64/-/sharp-libvips-linuxmusl-arm64-1.2.0.tgz",
      "integrity": "sha512-UG+LqQJbf5VJ8NWJ5Z3tdIe/HXjuIdo4JeVNADXBFuG7z9zjoegpzzGIyV5zQKi4zaJjnAd2+g2nna8TZvuW9Q==",
      "cpu": [
        "arm64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linuxmusl-x64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-x64/-/sharp-libvips-linuxmusl-x64-1.2.0.tgz",
      "integrity": "sha512-SRYOLR7CXPgNze8akZwjoGBoN1ThNZoqpOgfnOxmWsklTGVfJiGJoC/Lod7aNMGA1jSsKWM1+HRX43OP6p9+6Q==",
      "cpu": [
        "x64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-linux-arm": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm/-/sharp-linux-arm-0.34.3.tgz",
      "integrity": "sha512-oBK9l+h6KBN0i3dC8rYntLiVfW8D8wH+NPNT3O/WBHeW0OQWCjfWksLUaPidsrDKpJgXp3G3/hkmhptAW0I3+A==",
      "cpu": [
        "arm"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-arm": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm64/-/sharp-linux-arm64-0.34.3.tgz",
      "integrity": "sha512-QdrKe3EvQrqwkDrtuTIjI0bu6YEJHTgEeqdzI3uWJOH6G1O8Nl1iEeVYRGdj1h5I21CqxSvQp1Yv7xeU3ZewbA==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-arm64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-ppc64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-ppc64/-/sharp-linux-ppc64-0.34.3.tgz",
      "integrity": "sha512-GLtbLQMCNC5nxuImPR2+RgrviwKwVql28FWZIW1zWruy6zLgA5/x2ZXk3mxj58X/tszVF69KK0Is83V8YgWhLA==",
      "cpu": [
        "ppc64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-ppc64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-s390x": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-s390x/-/sharp-linux-s390x-0.34.3.tgz",
      "integrity": "sha512-3gahT+A6c4cdc2edhsLHmIOXMb17ltffJlxR0aC2VPZfwKoTGZec6u5GrFgdR7ciJSsHT27BD3TIuGcuRT0KmQ==",
      "cpu": [
        "s390x"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-s390x": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-x64/-/sharp-linux-x64-0.34.3.tgz",
      "integrity": "sha512-8kYso8d806ypnSq3/Ly0QEw90V5ZoHh10yH0HnrzOCr6DKAPI6QVHvwleqMkVQ0m+fc7EH8ah0BB0QPuWY6zJQ==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-x64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linuxmusl-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-arm64/-/sharp-linuxmusl-arm64-0.34.3.tgz",
      "integrity": "sha512-vAjbHDlr4izEiXM1OTggpCcPg9tn4YriK5vAjowJsHwdBIdx0fYRsURkxLG2RLm9gyBq66gwtWI8Gx0/ov+JKQ==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linuxmusl-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-x64/-/sharp-linuxmusl-x64-0.34.3.tgz",
      "integrity": "sha512-gCWUn9547K5bwvOn9l5XGAEjVTTRji4aPTqLzGXHvIr6bIDZKNTA34seMPgM0WmSf+RYBH411VavCejp3PkOeQ==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linuxmusl-x64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-wasm32": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-wasm32/-/sharp-wasm32-0.34.3.tgz",
      "integrity": "sha512-+CyRcpagHMGteySaWos8IbnXcHgfDn7pO2fiC2slJxvNq9gDipYBN42/RagzctVRKgxATmfqOSulgZv5e1RdMg==",
      "cpu": [
        "wasm32"
      ],
      "license": "Apache-2.0 AND LGPL-3.0-or-later AND MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/runtime": "^1.4.4"
      },
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-win32-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-win32-arm64/-/sharp-win32-arm64-0.34.3.tgz",
      "integrity": "sha512-MjnHPnbqMXNC2UgeLJtX4XqoVHHlZNd+nPt1kRPmj63wURegwBhZlApELdtxM2OIZDRv/DFtLcNhVbd1z8GYXQ==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0 AND LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-win32-ia32": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-win32-ia32/-/sharp-win32-ia32-0.34.3.tgz",
      "integrity": "sha512-xuCdhH44WxuXgOM714hn4amodJMZl3OEvf0GVTm0BEyMeA2to+8HEdRPShH0SLYptJY1uBw+SCFP9WVQi1Q/cw==",
      "cpu": [
        "ia32"
      ],
      "license": "Apache-2.0 AND LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-win32-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-win32-x64/-/sharp-win32-x64-0.34.3.tgz",
      "integrity": "sha512-OWwz05d++TxzLEv4VnsTz5CmZ6mI6S05sfQGEMrNrQcOEERbX46332IvE7pO/EUiw7jUrrS40z/M7kPyjfl04g==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0 AND LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@isaacs/fs-minipass": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz",
      "integrity": "sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "minipass": "^7.0.4"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.13",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.13.tgz",
      "integrity": "sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/remapping": {
      "version": "2.3.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/remapping/-/remapping-2.3.5.tgz",
      "integrity": "sha512-LI9u/+laYG4Ds1TDKSJW2YPrIlcVYOwi2fUC6xB43lueCjgxV4lffOCZCtYFiH6TNOX+tQKXx97T4IKHbhyHEQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.5.tgz",
      "integrity": "sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.30",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.30.tgz",
      "integrity": "sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@mdx-js/loader": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/@mdx-js/loader/-/loader-3.1.1.tgz",
      "integrity": "sha512-0TTacJyZ9mDmY+VefuthVshaNIyCGZHJG2fMnGaDttCt8HmjUF7SizlHJpaCDoGnN635nK1wpzfpx/Xx5S4WnQ==",
      "license": "MIT",
      "dependencies": {
        "@mdx-js/mdx": "^3.0.0",
        "source-map": "^0.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      },
      "peerDependencies": {
        "webpack": ">=5"
      },
      "peerDependenciesMeta": {
        "webpack": {
          "optional": true
        }
      }
    },
    "node_modules/@mdx-js/mdx": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/@mdx-js/mdx/-/mdx-3.1.1.tgz",
      "integrity": "sha512-f6ZO2ifpwAQIpzGWaBQT2TXxPv6z3RBzQKpVftEWN78Vl/YweF1uwussDx8ECAXVtr3Rs89fKyG9YlzUs9DyGQ==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "@types/estree-jsx": "^1.0.0",
        "@types/hast": "^3.0.0",
        "@types/mdx": "^2.0.0",
        "acorn": "^8.0.0",
        "collapse-white-space": "^2.0.0",
        "devlop": "^1.0.0",
        "estree-util-is-identifier-name": "^3.0.0",
        "estree-util-scope": "^1.0.0",
        "estree-walker": "^3.0.0",
        "hast-util-to-jsx-runtime": "^2.0.0",
        "markdown-extensions": "^2.0.0",
        "recma-build-jsx": "^1.0.0",
        "recma-jsx": "^1.0.0",
        "recma-stringify": "^1.0.0",
        "rehype-recma": "^1.0.0",
        "remark-mdx": "^3.0.0",
        "remark-parse": "^11.0.0",
        "remark-rehype": "^11.0.0",
        "source-map": "^0.7.0",
        "unified": "^11.0.0",
        "unist-util-position-from-estree": "^2.0.0",
        "unist-util-stringify-position": "^4.0.0",
        "unist-util-visit": "^5.0.0",
        "vfile": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/@mdx-js/react": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/@mdx-js/react/-/react-3.1.1.tgz",
      "integrity": "sha512-f++rKLQgUVYDAtECQ6fn/is15GkEH9+nZPM3MS0RcxVqoTfawHvDlSCH7JbMhAM6uJ32v3eXLvLmLvjGu7PTQw==",
      "license": "MIT",
      "dependencies": {
        "@types/mdx": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      },
      "peerDependencies": {
        "@types/react": ">=16",
        "react": ">=16"
      }
    },
    "node_modules/@next/env": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/env/-/env-15.5.2.tgz",
      "integrity": "sha512-Qe06ew4zt12LeO6N7j8/nULSOe3fMXE4dM6xgpBQNvdzyK1sv5y4oAP3bq4LamrvGCZtmRYnW8URFCeX5nFgGg==",
      "license": "MIT"
    },
    "node_modules/@next/mdx": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/mdx/-/mdx-15.5.2.tgz",
      "integrity": "sha512-Lz9mdoKRfSNc7T1cSk3gzryhRcc7ErsiAWba1HBoInCX4ZpGUQXmiZLAAyrIgDl7oS/UHxsgKtk2qp/Df4gKBg==",
      "license": "MIT",
      "dependencies": {
        "source-map": "^0.7.0"
      },
      "peerDependencies": {
        "@mdx-js/loader": ">=0.15.0",
        "@mdx-js/react": ">=0.15.0"
      },
      "peerDependenciesMeta": {
        "@mdx-js/loader": {
          "optional": true
        },
        "@mdx-js/react": {
          "optional": true
        }
      }
    },
    "node_modules/@next/swc-darwin-arm64": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-15.5.2.tgz",
      "integrity": "sha512-8bGt577BXGSd4iqFygmzIfTYizHb0LGWqH+qgIF/2EDxS5JsSdERJKA8WgwDyNBZgTIIA4D8qUtoQHmxIIquoQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-darwin-x64": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-15.5.2.tgz",
      "integrity": "sha512-2DjnmR6JHK4X+dgTXt5/sOCu/7yPtqpYt8s8hLkHFK3MGkka2snTv3yRMdHvuRtJVkPwCGsvBSwmoQCHatauFQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-arm64-gnu": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-15.5.2.tgz",
      "integrity": "sha512-3j7SWDBS2Wov/L9q0mFJtEvQ5miIqfO4l7d2m9Mo06ddsgUK8gWfHGgbjdFlCp2Ek7MmMQZSxpGFqcC8zGh2AA==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-arm64-musl": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-15.5.2.tgz",
      "integrity": "sha512-s6N8k8dF9YGc5T01UPQ08yxsK6fUow5gG1/axWc1HVVBYQBgOjca4oUZF7s4p+kwhkB1bDSGR8QznWrFZ/Rt5g==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-x64-gnu": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-15.5.2.tgz",
      "integrity": "sha512-o1RV/KOODQh6dM6ZRJGZbc+MOAHww33Vbs5JC9Mp1gDk8cpEO+cYC/l7rweiEalkSm5/1WGa4zY7xrNwObN4+Q==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-x64-musl": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-15.5.2.tgz",
      "integrity": "sha512-/VUnh7w8RElYZ0IV83nUcP/J4KJ6LLYliiBIri3p3aW2giF+PAVgZb6mk8jbQSB3WlTai8gEmCAr7kptFa1H6g==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-win32-arm64-msvc": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-15.5.2.tgz",
      "integrity": "sha512-sMPyTvRcNKXseNQ/7qRfVRLa0VhR0esmQ29DD6pqvG71+JdVnESJaHPA8t7bc67KD5spP3+DOCNLhqlEI2ZgQg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-win32-x64-msvc": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-15.5.2.tgz",
      "integrity": "sha512-W5VvyZHnxG/2ukhZF/9Ikdra5fdNftxI6ybeVKYvBPDtyx7x4jPPSNduUkfH5fo3zG0JQ0bPxgy41af2JX5D4Q==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@swc/helpers": {
      "version": "0.5.15",
      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.15.tgz",
      "integrity": "sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.8.0"
      }
    },
    "node_modules/@tailwindcss/node": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.12.tgz",
      "integrity": "sha512-3hm9brwvQkZFe++SBt+oLjo4OLDtkvlE8q2WalaD/7QWaeM7KEJbAiY/LJZUaCs7Xa8aUu4xy3uoyX4q54UVdQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/remapping": "^2.3.4",
        "enhanced-resolve": "^5.18.3",
        "jiti": "^2.5.1",
        "lightningcss": "1.30.1",
        "magic-string": "^0.30.17",
        "source-map-js": "^1.2.1",
        "tailwindcss": "4.1.12"
      }
    },
    "node_modules/@tailwindcss/oxide": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.12.tgz",
      "integrity": "sha512-gM5EoKHW/ukmlEtphNwaGx45fGoEmP10v51t9unv55voWh6WrOL19hfuIdo2FjxIaZzw776/BUQg7Pck++cIVw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "detect-libc": "^2.0.4",
        "tar": "^7.4.3"
      },
      "engines": {
        "node": ">= 10"
      },
      "optionalDependencies": {
        "@tailwindcss/oxide-android-arm64": "4.1.12",
        "@tailwindcss/oxide-darwin-arm64": "4.1.12",
        "@tailwindcss/oxide-darwin-x64": "4.1.12",
        "@tailwindcss/oxide-freebsd-x64": "4.1.12",
        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.12",
        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.12",
        "@tailwindcss/oxide-linux-arm64-musl": "4.1.12",
        "@tailwindcss/oxide-linux-x64-gnu": "4.1.12",
        "@tailwindcss/oxide-linux-x64-musl": "4.1.12",
        "@tailwindcss/oxide-wasm32-wasi": "4.1.12",
        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.12",
        "@tailwindcss/oxide-win32-x64-msvc": "4.1.12"
      }
    },
    "node_modules/@tailwindcss/oxide-android-arm64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.12.tgz",
      "integrity": "sha512-oNY5pq+1gc4T6QVTsZKwZaGpBb2N1H1fsc1GD4o7yinFySqIuRZ2E4NvGasWc6PhYJwGK2+5YT1f9Tp80zUQZQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-arm64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.12.tgz",
      "integrity": "sha512-cq1qmq2HEtDV9HvZlTtrj671mCdGB93bVY6J29mwCyaMYCP/JaUBXxrQQQm7Qn33AXXASPUb2HFZlWiiHWFytw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-x64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.12.tgz",
      "integrity": "sha512-6UCsIeFUcBfpangqlXay9Ffty9XhFH1QuUFn0WV83W8lGdX8cD5/+2ONLluALJD5+yJ7k8mVtwy3zMZmzEfbLg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-freebsd-x64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.12.tgz",
      "integrity": "sha512-JOH/f7j6+nYXIrHobRYCtoArJdMJh5zy5lr0FV0Qu47MID/vqJAY3r/OElPzx1C/wdT1uS7cPq+xdYYelny1ww==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.12.tgz",
      "integrity": "sha512-v4Ghvi9AU1SYgGr3/j38PD8PEe6bRfTnNSUE3YCMIRrrNigCFtHZ2TCm8142X8fcSqHBZBceDx+JlFJEfNg5zQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.12.tgz",
      "integrity": "sha512-YP5s1LmetL9UsvVAKusHSyPlzSRqYyRB0f+Kl/xcYQSPLEw/BvGfxzbH+ihUciePDjiXwHh+p+qbSP3SlJw+6g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.12.tgz",
      "integrity": "sha512-V8pAM3s8gsrXcCv6kCHSuwyb/gPsd863iT+v1PGXC4fSL/OJqsKhfK//v8P+w9ThKIoqNbEnsZqNy+WDnwQqCA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.12.tgz",
      "integrity": "sha512-xYfqYLjvm2UQ3TZggTGrwxjYaLB62b1Wiysw/YE3Yqbh86sOMoTn0feF98PonP7LtjsWOWcXEbGqDL7zv0uW8Q==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.12.tgz",
      "integrity": "sha512-ha0pHPamN+fWZY7GCzz5rKunlv9L5R8kdh+YNvP5awe3LtuXb5nRi/H27GeL2U+TdhDOptU7T6Is7mdwh5Ar3A==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-wasm32-wasi": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-wasm32-wasi/-/oxide-wasm32-wasi-4.1.12.tgz",
      "integrity": "sha512-4tSyu3dW+ktzdEpuk6g49KdEangu3eCYoqPhWNsZgUhyegEda3M9rG0/j1GV/JjVVsj+lG7jWAyrTlLzd/WEBg==",
      "bundleDependencies": [
        "@napi-rs/wasm-runtime",
        "@emnapi/core",
        "@emnapi/runtime",
        "@tybys/wasm-util",
        "@emnapi/wasi-threads",
        "tslib"
      ],
      "cpu": [
        "wasm32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/core": "^1.4.5",
        "@emnapi/runtime": "^1.4.5",
        "@emnapi/wasi-threads": "^1.0.4",
        "@napi-rs/wasm-runtime": "^0.2.12",
        "@tybys/wasm-util": "^0.10.0",
        "tslib": "^2.8.0"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.12.tgz",
      "integrity": "sha512-iGLyD/cVP724+FGtMWslhcFyg4xyYyM+5F4hGvKA7eifPkXHRAUDFaimu53fpNg9X8dfP75pXx/zFt/jlNF+lg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.12.tgz",
      "integrity": "sha512-NKIh5rzw6CpEodv/++r0hGLlfgT/gFN+5WNdZtvh6wpU2BpGNgdjvj6H2oFc8nCM839QM1YOhjpgbAONUb4IxA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/postcss": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/postcss/-/postcss-4.1.12.tgz",
      "integrity": "sha512-5PpLYhCAwf9SJEeIsSmCDLgyVfdBhdBpzX1OJ87anT9IVR0Z9pjM0FNixCAUAHGnMBGB8K99SwAheXrT0Kh6QQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@alloc/quick-lru": "^5.2.0",
        "@tailwindcss/node": "4.1.12",
        "@tailwindcss/oxide": "4.1.12",
        "postcss": "^8.4.41",
        "tailwindcss": "4.1.12"
      }
    },
    "node_modules/@tailwindcss/typography": {
      "version": "0.5.16",
      "resolved": "https://registry.npmjs.org/@tailwindcss/typography/-/typography-0.5.16.tgz",
      "integrity": "sha512-0wDLwCVF5V3x3b1SGXPCDcdsbDHMBe+lkFzBRaHeLvNi+nrrnZ1lA18u+OTWO8iSWU2GxUOCvlXtDuqftc1oiA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "lodash.castarray": "^4.4.0",
        "lodash.isplainobject": "^4.0.6",
        "lodash.merge": "^4.6.2",
        "postcss-selector-parser": "6.0.10"
      },
      "peerDependencies": {
        "tailwindcss": ">=3.0.0 || insiders || >=4.0.0-alpha.20 || >=4.0.0-beta.1"
      }
    },
    "node_modules/@types/debug": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@types/debug/-/debug-4.1.12.tgz",
      "integrity": "sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==",
      "license": "MIT",
      "dependencies": {
        "@types/ms": "*"
      }
    },
    "node_modules/@types/estree": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
      "license": "MIT"
    },
    "node_modules/@types/estree-jsx": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/@types/estree-jsx/-/estree-jsx-1.0.5.tgz",
      "integrity": "sha512-52CcUVNFyfb1A2ALocQw/Dd1BQFNmSdkuC3BkZ6iqhdMfQz7JWOFRuJFloOzjk+6WijU56m9oKXFAXc7o3Towg==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "*"
      }
    },
    "node_modules/@types/hast": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/hast/-/hast-3.0.4.tgz",
      "integrity": "sha512-WPs+bbQw5aCj+x6laNGWLH3wviHtoCv/P3+otBhbOhJgG8qtpdAMlTCxLtsTWA7LH1Oh/bFCHsBn0TPS5m30EQ==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "*"
      }
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.15",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/mdast": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@types/mdast/-/mdast-4.0.4.tgz",
      "integrity": "sha512-kGaNbPh1k7AFzgpud/gMdvIm5xuECykRR+JnWKQno9TAXVa6WIVCGTPvYGekIDL4uwCZQSYbUxNBSb1aUo79oA==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "*"
      }
    },
    "node_modules/@types/mdx": {
      "version": "2.0.13",
      "resolved": "https://registry.npmjs.org/@types/mdx/-/mdx-2.0.13.tgz",
      "integrity": "sha512-+OWZQfAYyio6YkJb3HLxDrvnx6SWWDbC0zVPfBRzUk0/nqoDyf6dNxQi3eArPe8rJ473nobTMQ/8Zk+LxJ+Yuw==",
      "license": "MIT"
    },
    "node_modules/@types/ms": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@types/ms/-/ms-2.1.0.tgz",
      "integrity": "sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==",
      "license": "MIT"
    },
    "node_modules/@types/node": {
      "version": "24.3.0",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.3.0.tgz",
      "integrity": "sha512-aPTXCrfwnDLj4VvXrm+UUCQjNEvJgNA8s5F1cvwQU+3KNltTOkBm1j30uNLyqqPNe7gE3KFzImYoZEfLhp4Yow==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "undici-types": "~7.10.0"
      }
    },
    "node_modules/@types/react": {
      "version": "19.1.12",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.12.tgz",
      "integrity": "sha512-cMoR+FoAf/Jyq6+Df2/Z41jISvGZZ2eTlnsaJRptmZ76Caldwy1odD4xTr/gNV9VLj0AWgg/nmkevIyUfIIq5w==",
      "license": "MIT",
      "dependencies": {
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/react-dom": {
      "version": "19.1.9",
      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-19.1.9.tgz",
      "integrity": "sha512-qXRuZaOsAdXKFyOhRBg6Lqqc0yay13vN7KrIg4L7N4aaHN68ma9OK3NE1BoDFgFOTfM7zg+3/8+2n8rLUH3OKQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "^19.0.0"
      }
    },
    "node_modules/@types/unist": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@types/unist/-/unist-3.0.3.tgz",
      "integrity": "sha512-ko/gIFJRv177XgZsZcBwnqJN5x/Gien8qNOn0D5bQU/zAzVf9Zt3BlcUiLqhV9y4ARk0GbT3tnUiPNgnTXzc/Q==",
      "license": "MIT"
    },
    "node_modules/@ungap/structured-clone": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz",
      "integrity": "sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==",
      "license": "ISC"
    },
    "node_modules/acorn": {
      "version": "8.15.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
      "license": "MIT",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "license": "MIT",
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "dev": true,
      "license": "Python-2.0"
    },
    "node_modules/astring": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/astring/-/astring-1.9.0.tgz",
      "integrity": "sha512-LElXdjswlqjWrPpJFg1Fx4wpkOCxj1TDHlSV4PlaRxHGWko024xICaa97ZkMfs6DRKlCguiAI+rbXv5GWwXIkg==",
      "license": "MIT",
      "bin": {
        "astring": "bin/astring"
      }
    },
    "node_modules/bail": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/bail/-/bail-2.0.2.tgz",
      "integrity": "sha512-0xO6mYd7JB2YesxDKplafRpsiOzPt9V02ddPCLbY1xYGPOX24NTyN50qnUxgCPcSoYMhKpAuBTjQoRZCAkUDRw==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001739",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001739.tgz",
      "integrity": "sha512-y+j60d6ulelrNSwpPyrHdl+9mJnQzHBr08xm48Qno0nSk4h3Qojh+ziv2qE6rXf4k3tadF4o1J/1tAbVm1NtnA==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/ccount": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/ccount/-/ccount-2.0.1.tgz",
      "integrity": "sha512-eyrF0jiFpY+3drT6383f1qhkbGsLSifNAjA61IUjZjmLCWjItY6LB9ft9YhoDgwfmclB2zhu51Lc7+95b8NRAg==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/character-entities": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/character-entities/-/character-entities-2.0.2.tgz",
      "integrity": "sha512-shx7oQ0Awen/BRIdkjkvz54PnEEI/EjwXDSIZp86/KKdbafHh1Df/RYGBhn4hbe2+uKC9FnT5UCEdyPz3ai9hQ==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/character-entities-html4": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/character-entities-html4/-/character-entities-html4-2.1.0.tgz",
      "integrity": "sha512-1v7fgQRj6hnSwFpq1Eu0ynr/CDEw0rXo2B61qXrLNdHZmPKgb7fqS1a2JwF0rISo9q77jDI8VMEHoApn8qDoZA==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/character-entities-legacy": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/character-entities-legacy/-/character-entities-legacy-3.0.0.tgz",
      "integrity": "sha512-RpPp0asT/6ufRm//AJVwpViZbGM/MkjQFxJccQRHmISF/22NBtsHqAWmL+/pmkPWoIUJdWyeVleTl1wydHATVQ==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/character-reference-invalid": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/character-reference-invalid/-/character-reference-invalid-2.0.1.tgz",
      "integrity": "sha512-iBZ4F4wRbyORVsu0jPV7gXkOsGYjGHPmAyv+HiHG8gi5PtC9KI2j1+v8/tlibRvjoWX027ypmG/n0HtO5t7unw==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/chownr": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-3.0.0.tgz",
      "integrity": "sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/client-only": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz",
      "integrity": "sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==",
      "license": "MIT"
    },
    "node_modules/collapse-white-space": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/collapse-white-space/-/collapse-white-space-2.1.0.tgz",
      "integrity": "sha512-loKTxY1zCOuG4j9f6EPnuyyYkf58RnhhWTvRoZEokgB+WbdXehfjFviyOVYkqzEWz1Q5kRiZdBYS5SwxbQYwzw==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/color": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/color/-/color-4.2.3.tgz",
      "integrity": "sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "color-convert": "^2.0.1",
        "color-string": "^1.9.0"
      },
      "engines": {
        "node": ">=12.5.0"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/color-string": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.9.1.tgz",
      "integrity": "sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "color-name": "^1.0.0",
        "simple-swizzle": "^0.2.2"
      }
    },
    "node_modules/comma-separated-tokens": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/comma-separated-tokens/-/comma-separated-tokens-2.0.3.tgz",
      "integrity": "sha512-Fu4hJdvzeylCfQPp9SGWidpzrMs7tTrlu6Vb8XGaRGck8QSNZJJp538Wrb60Lax4fPwR64ViY468OIUTbRlGZg==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "cssesc": "bin/cssesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
      "license": "MIT"
    },
    "node_modules/debug": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decode-named-character-reference": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decode-named-character-reference/-/decode-named-character-reference-1.2.0.tgz",
      "integrity": "sha512-c6fcElNV6ShtZXmsgNgFFV5tVX2PaV4g+MOAkb8eXHvn6sryJBrZa9r0zV6+dtTyoCKxtDy5tyQ5ZwQuidtd+Q==",
      "license": "MIT",
      "dependencies": {
        "character-entities": "^2.0.0"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/dequal": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz",
      "integrity": "sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/detect-libc": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
      "devOptional": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/devlop": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/devlop/-/devlop-1.1.0.tgz",
      "integrity": "sha512-RWmIqhcFf1lRYBvNmr7qTNuyCt/7/ns2jbpp1+PalgE/rDQcBT0fioSMUpJ93irlUhC5hrg4cYqe6U+0ImW0rA==",
      "license": "MIT",
      "dependencies": {
        "dequal": "^2.0.0"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/enhanced-resolve": {
      "version": "5.18.3",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.3.tgz",
      "integrity": "sha512-d4lC8xfavMeBjzGr2vECC3fsGXziXZQyJxD868h2M/mBI3PwAuODxAkLkq5HYuvrPYcUtiLzsTo8U3PgX3Ocww==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.2.0"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/esast-util-from-estree": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/esast-util-from-estree/-/esast-util-from-estree-2.0.0.tgz",
      "integrity": "sha512-4CyanoAudUSBAn5K13H4JhsMH6L9ZP7XbLVe/dKybkxMO7eDyLsT8UHl9TRNrU2Gr9nz+FovfSIjuXWJ81uVwQ==",
      "license": "MIT",
      "dependencies": {
        "@types/estree-jsx": "^1.0.0",
        "devlop": "^1.0.0",
        "estree-util-visit": "^2.0.0",
        "unist-util-position-from-estree": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/esast-util-from-js": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/esast-util-from-js/-/esast-util-from-js-2.0.1.tgz",
      "integrity": "sha512-8Ja+rNJ0Lt56Pcf3TAmpBZjmx8ZcK5Ts4cAzIOjsjevg9oSXJnl6SUQ2EevU8tv3h6ZLWmoKL5H4fgWvdvfETw==",
      "license": "MIT",
      "dependencies": {
        "@types/estree-jsx": "^1.0.0",
        "acorn": "^8.0.0",
        "esast-util-from-estree": "^2.0.0",
        "vfile-message": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/eslint": {
      "version": "9.34.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.34.0.tgz",
      "integrity": "sha512-RNCHRX5EwdrESy3Jc9o8ie8Bog+PeYvvSR8sDGoZxNFTvZ4dlxUB3WzQ3bQMztFrSRODGrLLj8g6OFuGY/aiQg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.12.1",
        "@eslint/config-array": "^0.21.0",
        "@eslint/config-helpers": "^0.3.1",
        "@eslint/core": "^0.15.2",
        "@eslint/eslintrc": "^3.3.1",
        "@eslint/js": "9.34.0",
        "@eslint/plugin-kit": "^0.3.5",
        "@humanfs/node": "^0.16.6",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@humanwhocodes/retry": "^0.4.2",
        "@types/estree": "^1.0.6",
        "@types/json-schema": "^7.0.15",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.6",
        "debug": "^4.3.2",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^8.4.0",
        "eslint-visitor-keys": "^4.2.1",
        "espree": "^10.4.0",
        "esquery": "^1.5.0",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^8.0.0",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      },
      "peerDependencies": {
        "jiti": "*"
      },
      "peerDependenciesMeta": {
        "jiti": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-scope": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.4.0.tgz",
      "integrity": "sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgz",
      "integrity": "sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/espree": {
      "version": "10.4.0",
      "resolved": "https://registry.npmjs.org/espree/-/espree-10.4.0.tgz",
      "integrity": "sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "acorn": "^8.15.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^4.2.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "license": "BSD-2-Clause",
      "bin": {
        "esparse": "bin/esparse.js",
        "esvalidate": "bin/esvalidate.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/esquery": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estree-util-attach-comments": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/estree-util-attach-comments/-/estree-util-attach-comments-3.0.0.tgz",
      "integrity": "sha512-cKUwm/HUcTDsYh/9FgnuFqpfquUbwIqwKM26BVCGDPVgvaCl/nDCCjUfiLlx6lsEZ3Z4RFxNbOQ60pkaEwFxGw==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/estree-util-build-jsx": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/estree-util-build-jsx/-/estree-util-build-jsx-3.0.1.tgz",
      "integrity": "sha512-8U5eiL6BTrPxp/CHbs2yMgP8ftMhR5ww1eIKoWRMlqvltHF8fZn5LRDvTKuxD3DUn+shRbLGqXemcP51oFCsGQ==",
      "license": "MIT",
      "dependencies": {
        "@types/estree-jsx": "^1.0.0",
        "devlop": "^1.0.0",
        "estree-util-is-identifier-name": "^3.0.0",
        "estree-walker": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/estree-util-is-identifier-name": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/estree-util-is-identifier-name/-/estree-util-is-identifier-name-3.0.0.tgz",
      "integrity": "sha512-hFtqIDZTIUZ9BXLb8y4pYGyk6+wekIivNVTcmvk8NoOh+VeRn5y6cEHzbURrWbfp1fIqdVipilzj+lfaadNZmg==",
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/estree-util-scope": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/estree-util-scope/-/estree-util-scope-1.0.0.tgz",
      "integrity": "sha512-2CAASclonf+JFWBNJPndcOpA8EMJwa0Q8LUFJEKqXLW6+qBvbFZuF5gItbQOs/umBUkjviCSDCbBwU2cXbmrhQ==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "devlop": "^1.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/estree-util-to-js": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/estree-util-to-js/-/estree-util-to-js-2.0.0.tgz",
      "integrity": "sha512-WDF+xj5rRWmD5tj6bIqRi6CkLIXbbNQUcxQHzGysQzvHmdYG2G7p/Tf0J0gpxGgkeMZNTIjT/AoSvC9Xehcgdg==",
      "license": "MIT",
      "dependencies": {
        "@types/estree-jsx": "^1.0.0",
        "astring": "^1.8.0",
        "source-map": "^0.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/estree-util-visit": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/estree-util-visit/-/estree-util-visit-2.0.0.tgz",
      "integrity": "sha512-m5KgiH85xAhhW8Wta0vShLcUvOsh3LLPI2YVwcbio1l7E09NTLL1EyMZFM1OyWowoH0skScNbhOPl4kcBgzTww==",
      "license": "MIT",
      "dependencies": {
        "@types/estree-jsx": "^1.0.0",
        "@types/unist": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/estree-walker": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz",
      "integrity": "sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
      "license": "MIT"
    },
    "node_modules/extend-shallow": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
      "integrity": "sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==",
      "license": "MIT",
      "dependencies": {
        "is-extendable": "^0.1.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/file-entry-cache": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
      "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flat-cache": "^4.0.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/flat-cache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
      "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.4"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/github-slugger": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/github-slugger/-/github-slugger-2.0.0.tgz",
      "integrity": "sha512-IaOQ9puYtjrkq7Y0Ygl9KDZnrf/aiUJYUpVf89y8kyaxbRG7Y1SrX/jaumrv81vc61+kiMempujsM3Yw7w5qcw==",
      "license": "ISC"
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/globals": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
      "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/gray-matter": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/gray-matter/-/gray-matter-4.0.3.tgz",
      "integrity": "sha512-5v6yZd4JK3eMI3FqqCouswVqwugaA9r4dNZB1wwcmrD02QkV5H0y7XBQW8QwQqEaZY1pM9aqORSORhJRdNK44Q==",
      "license": "MIT",
      "dependencies": {
        "js-yaml": "^3.13.1",
        "kind-of": "^6.0.2",
        "section-matter": "^1.0.0",
        "strip-bom-string": "^1.0.0"
      },
      "engines": {
        "node": ">=6.0"
      }
    },
    "node_modules/gray-matter/node_modules/argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "license": "MIT",
      "dependencies": {
        "sprintf-js": "~1.0.2"
      }
    },
    "node_modules/gray-matter/node_modules/js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "license": "MIT",
      "dependencies": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/hast-util-heading-rank": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/hast-util-heading-rank/-/hast-util-heading-rank-3.0.0.tgz",
      "integrity": "sha512-EJKb8oMUXVHcWZTDepnr+WNbfnXKFNf9duMesmr4S8SXTJBJ9M4Yok08pu9vxdJwdlGRhVumk9mEhkEvKGifwA==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/hast-util-is-element": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/hast-util-is-element/-/hast-util-is-element-3.0.0.tgz",
      "integrity": "sha512-Val9mnv2IWpLbNPqc/pUem+a7Ipj2aHacCwgNfTiK0vJKl0LF+4Ba4+v1oPHFpf3bLYmreq0/l3Gud9S5OH42g==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/hast-util-to-estree": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/hast-util-to-estree/-/hast-util-to-estree-3.1.3.tgz",
      "integrity": "sha512-48+B/rJWAp0jamNbAAf9M7Uf//UVqAoMmgXhBdxTDJLGKY+LRnZ99qcG+Qjl5HfMpYNzS5v4EAwVEF34LeAj7w==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "@types/estree-jsx": "^1.0.0",
        "@types/hast": "^3.0.0",
        "comma-separated-tokens": "^2.0.0",
        "devlop": "^1.0.0",
        "estree-util-attach-comments": "^3.0.0",
        "estree-util-is-identifier-name": "^3.0.0",
        "hast-util-whitespace": "^3.0.0",
        "mdast-util-mdx-expression": "^2.0.0",
        "mdast-util-mdx-jsx": "^3.0.0",
        "mdast-util-mdxjs-esm": "^2.0.0",
        "property-information": "^7.0.0",
        "space-separated-tokens": "^2.0.0",
        "style-to-js": "^1.0.0",
        "unist-util-position": "^5.0.0",
        "zwitch": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/hast-util-to-jsx-runtime": {
      "version": "2.3.6",
      "resolved": "https://registry.npmjs.org/hast-util-to-jsx-runtime/-/hast-util-to-jsx-runtime-2.3.6.tgz",
      "integrity": "sha512-zl6s8LwNyo1P9uw+XJGvZtdFF1GdAkOg8ujOw+4Pyb76874fLps4ueHXDhXWdk6YHQ6OgUtinliG7RsYvCbbBg==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "@types/hast": "^3.0.0",
        "@types/unist": "^3.0.0",
        "comma-separated-tokens": "^2.0.0",
        "devlop": "^1.0.0",
        "estree-util-is-identifier-name": "^3.0.0",
        "hast-util-whitespace": "^3.0.0",
        "mdast-util-mdx-expression": "^2.0.0",
        "mdast-util-mdx-jsx": "^3.0.0",
        "mdast-util-mdxjs-esm": "^2.0.0",
        "property-information": "^7.0.0",
        "space-separated-tokens": "^2.0.0",
        "style-to-js": "^1.0.0",
        "unist-util-position": "^5.0.0",
        "vfile-message": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/hast-util-to-string": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/hast-util-to-string/-/hast-util-to-string-3.0.1.tgz",
      "integrity": "sha512-XelQVTDWvqcl3axRfI0xSeoVKzyIFPwsAGSLIsKdJKQMXDYJS4WYrBNF/8J7RdhIcFI2BOHgAifggsvsxp/3+A==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/hast-util-whitespace": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/hast-util-whitespace/-/hast-util-whitespace-3.0.0.tgz",
      "integrity": "sha512-88JUN06ipLwsnv+dVn+OIYOvAuvBMy/Qoi6O7mQHxdPXpjy+Cd6xRkWwux7DKO+4sYILtLBRIKgsdpS2gQc7qw==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/inline-style-parser": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/inline-style-parser/-/inline-style-parser-0.2.4.tgz",
      "integrity": "sha512-0aO8FkhNZlj/ZIbNi7Lxxr12obT7cL1moPfE4tg1LkX7LlLfC6DeX4l2ZEud1ukP9jNQyNnfzQVqwbwmAATY4Q==",
      "license": "MIT"
    },
    "node_modules/is-alphabetical": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-alphabetical/-/is-alphabetical-2.0.1.tgz",
      "integrity": "sha512-FWyyY60MeTNyeSRpkM2Iry0G9hpr7/9kD40mD/cGQEuilcZYS4okz8SN2Q6rLCJ8gbCt6fN+rC+6tMGS99LaxQ==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/is-alphanumerical": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-alphanumerical/-/is-alphanumerical-2.0.1.tgz",
      "integrity": "sha512-hmbYhX/9MUMF5uh7tOXyK/n0ZvWpad5caBA17GsC6vyuCqaWliRG5K1qS9inmUhEMaOBIW7/whAnSwveW/LtZw==",
      "license": "MIT",
      "dependencies": {
        "is-alphabetical": "^2.0.0",
        "is-decimal": "^2.0.0"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/is-arrayish": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
      "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/is-decimal": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-decimal/-/is-decimal-2.0.1.tgz",
      "integrity": "sha512-AAB9hiomQs5DXWcRB1rqsxGUstbRroFOPPVAomNk/3XHR5JyEZChOyTWe2oayKnsSsr/kcGqF+z6yuH6HHpN0A==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/is-extendable": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
      "integrity": "sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-hexadecimal": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-hexadecimal/-/is-hexadecimal-2.0.1.tgz",
      "integrity": "sha512-DgZQp241c8oO6cA1SbTEWiXeoxV42vlcJxgH+B3hi1AiqqKruZR3ZGF8In3fj4+/y/7rHvlOZLZtgJ/4ttYGZg==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/is-plain-obj": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-4.1.0.tgz",
      "integrity": "sha512-+Pgi+vMuUNkJyExiMBt5IlFoMyKnr5zhJ4Uspz58WOhBF5QoIZkFyNHIbBAtHwzVAgk5RtndVNsDRN61/mmDqg==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/jiti": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.5.1.tgz",
      "integrity": "sha512-twQoecYPiVA5K/h6SxtORw/Bs3ar+mLUtoPSc7iMXzQzK8d7eJ/R09wmTwAjiamETn1cXYPGfNnu7DMoHgu12w==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jiti": "lib/jiti-cli.mjs"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "license": "MIT"
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/kind-of": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
      "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/lightningcss": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
      "integrity": "sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==",
      "dev": true,
      "license": "MPL-2.0",
      "dependencies": {
        "detect-libc": "^2.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "optionalDependencies": {
        "lightningcss-darwin-arm64": "1.30.1",
        "lightningcss-darwin-x64": "1.30.1",
        "lightningcss-freebsd-x64": "1.30.1",
        "lightningcss-linux-arm-gnueabihf": "1.30.1",
        "lightningcss-linux-arm64-gnu": "1.30.1",
        "lightningcss-linux-arm64-musl": "1.30.1",
        "lightningcss-linux-x64-gnu": "1.30.1",
        "lightningcss-linux-x64-musl": "1.30.1",
        "lightningcss-win32-arm64-msvc": "1.30.1",
        "lightningcss-win32-x64-msvc": "1.30.1"
      }
    },
    "node_modules/lightningcss-darwin-arm64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.30.1.tgz",
      "integrity": "sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-darwin-x64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.30.1.tgz",
      "integrity": "sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-freebsd-x64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.30.1.tgz",
      "integrity": "sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm-gnueabihf": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.30.1.tgz",
      "integrity": "sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-gnu": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.30.1.tgz",
      "integrity": "sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-musl": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.30.1.tgz",
      "integrity": "sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-gnu": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.30.1.tgz",
      "integrity": "sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-musl": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.30.1.tgz",
      "integrity": "sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-arm64-msvc": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.30.1.tgz",
      "integrity": "sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-x64-msvc": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.30.1.tgz",
      "integrity": "sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash.castarray": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/lodash.castarray/-/lodash.castarray-4.4.0.tgz",
      "integrity": "sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lodash.isplainobject": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/longest-streak": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/longest-streak/-/longest-streak-3.1.0.tgz",
      "integrity": "sha512-9Ri+o0JYgehTaVBBDoMqIl8GXtbWg711O3srftcHhZ0dqnETqLaoIK0x17fUw9rFSlK/0NlsKe0Ahhyl5pXE2g==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/magic-string": {
      "version": "0.30.18",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.18.tgz",
      "integrity": "sha512-yi8swmWbO17qHhwIBNeeZxTceJMeBvWJaId6dyvTSOwTipqeHhMhOrz6513r1sOKnpvQ7zkhlG8tPrpilwTxHQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.5"
      }
    },
    "node_modules/markdown-extensions": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/markdown-extensions/-/markdown-extensions-2.0.0.tgz",
      "integrity": "sha512-o5vL7aDWatOTX8LzaS1WMoaoxIiLRQJuIKKe2wAw6IeULDHaqbiqiggmx+pKvZDb1Sj+pE46Sn1T7lCqfFtg1Q==",
      "license": "MIT",
      "engines": {
        "node": ">=16"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/markdown-table": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/markdown-table/-/markdown-table-3.0.4.tgz",
      "integrity": "sha512-wiYz4+JrLyb/DqW2hkFJxP7Vd7JuTDm77fvbM8VfEQdmSMqcImWeeRbHwZjBjIFki/VaMK2BhFi7oUUZeM5bqw==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/mdast-util-find-and-replace": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/mdast-util-find-and-replace/-/mdast-util-find-and-replace-3.0.2.tgz",
      "integrity": "sha512-Tmd1Vg/m3Xz43afeNxDIhWRtFZgM2VLyaf4vSTYwudTyeuTneoL3qtWMA5jeLyz/O1vDJmmV4QuScFCA2tBPwg==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "escape-string-regexp": "^5.0.0",
        "unist-util-is": "^6.0.0",
        "unist-util-visit-parents": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
      "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/mdast-util-from-markdown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/mdast-util-from-markdown/-/mdast-util-from-markdown-2.0.2.tgz",
      "integrity": "sha512-uZhTV/8NBuw0WHkPTrCqDOl0zVe1BIng5ZtHoDk49ME1qqcjYmmLmOf0gELgcRMxN4w2iuIeVso5/6QymSrgmA==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "@types/unist": "^3.0.0",
        "decode-named-character-reference": "^1.0.0",
        "devlop": "^1.0.0",
        "mdast-util-to-string": "^4.0.0",
        "micromark": "^4.0.0",
        "micromark-util-decode-numeric-character-reference": "^2.0.0",
        "micromark-util-decode-string": "^2.0.0",
        "micromark-util-normalize-identifier": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0",
        "unist-util-stringify-position": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm/-/mdast-util-gfm-3.1.0.tgz",
      "integrity": "sha512-0ulfdQOM3ysHhCJ1p06l0b0VKlhU0wuQs3thxZQagjcjPrlFRqY215uZGHHJan9GEAXd9MbfPjFJz+qMkVR6zQ==",
      "license": "MIT",
      "dependencies": {
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-gfm-autolink-literal": "^2.0.0",
        "mdast-util-gfm-footnote": "^2.0.0",
        "mdast-util-gfm-strikethrough": "^2.0.0",
        "mdast-util-gfm-table": "^2.0.0",
        "mdast-util-gfm-task-list-item": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm-autolink-literal": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm-autolink-literal/-/mdast-util-gfm-autolink-literal-2.0.1.tgz",
      "integrity": "sha512-5HVP2MKaP6L+G6YaxPNjuL0BPrq9orG3TsrZ9YXbA3vDw/ACI4MEsnoDpn6ZNm7GnZgtAcONJyPhOP8tNJQavQ==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "ccount": "^2.0.0",
        "devlop": "^1.0.0",
        "mdast-util-find-and-replace": "^3.0.0",
        "micromark-util-character": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm-footnote": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm-footnote/-/mdast-util-gfm-footnote-2.1.0.tgz",
      "integrity": "sha512-sqpDWlsHn7Ac9GNZQMeUzPQSMzR6Wv0WKRNvQRg0KqHh02fpTz69Qc1QSseNX29bhz1ROIyNyxExfawVKTm1GQ==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "devlop": "^1.1.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0",
        "micromark-util-normalize-identifier": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm-strikethrough": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm-strikethrough/-/mdast-util-gfm-strikethrough-2.0.0.tgz",
      "integrity": "sha512-mKKb915TF+OC5ptj5bJ7WFRPdYtuHv0yTRxK2tJvi+BDqbkiG7h7u/9SI89nRAYcmap2xHQL9D+QG/6wSrTtXg==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm-table": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm-table/-/mdast-util-gfm-table-2.0.0.tgz",
      "integrity": "sha512-78UEvebzz/rJIxLvE7ZtDd/vIQ0RHv+3Mh5DR96p7cS7HsBhYIICDBCu8csTNWNO6tBWfqXPWekRuj2FNOGOZg==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "devlop": "^1.0.0",
        "markdown-table": "^3.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm-task-list-item": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm-task-list-item/-/mdast-util-gfm-task-list-item-2.0.0.tgz",
      "integrity": "sha512-IrtvNvjxC1o06taBAVJznEnkiHxLFTzgonUdy8hzFVeDun0uTjxxrRGVaNFqkU1wJR3RBPEfsxmU6jDWPofrTQ==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "devlop": "^1.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-mdx": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/mdast-util-mdx/-/mdast-util-mdx-3.0.0.tgz",
      "integrity": "sha512-JfbYLAW7XnYTTbUsmpu0kdBUVe+yKVJZBItEjwyYJiDJuZ9w4eeaqks4HQO+R7objWgS2ymV60GYpI14Ug554w==",
      "license": "MIT",
      "dependencies": {
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-mdx-expression": "^2.0.0",
        "mdast-util-mdx-jsx": "^3.0.0",
        "mdast-util-mdxjs-esm": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-mdx-expression": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/mdast-util-mdx-expression/-/mdast-util-mdx-expression-2.0.1.tgz",
      "integrity": "sha512-J6f+9hUp+ldTZqKRSg7Vw5V6MqjATc+3E4gf3CFNcuZNWD8XdyI6zQ8GqH7f8169MM6P7hMBRDVGnn7oHB9kXQ==",
      "license": "MIT",
      "dependencies": {
        "@types/estree-jsx": "^1.0.0",
        "@types/hast": "^3.0.0",
        "@types/mdast": "^4.0.0",
        "devlop": "^1.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-mdx-jsx": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/mdast-util-mdx-jsx/-/mdast-util-mdx-jsx-3.2.0.tgz",
      "integrity": "sha512-lj/z8v0r6ZtsN/cGNNtemmmfoLAFZnjMbNyLzBafjzikOM+glrjNHPlf6lQDOTccj9n5b0PPihEBbhneMyGs1Q==",
      "license": "MIT",
      "dependencies": {
        "@types/estree-jsx": "^1.0.0",
        "@types/hast": "^3.0.0",
        "@types/mdast": "^4.0.0",
        "@types/unist": "^3.0.0",
        "ccount": "^2.0.0",
        "devlop": "^1.1.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0",
        "parse-entities": "^4.0.0",
        "stringify-entities": "^4.0.0",
        "unist-util-stringify-position": "^4.0.0",
        "vfile-message": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-mdxjs-esm": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/mdast-util-mdxjs-esm/-/mdast-util-mdxjs-esm-2.0.1.tgz",
      "integrity": "sha512-EcmOpxsZ96CvlP03NghtH1EsLtr0n9Tm4lPUJUBccV9RwUOneqSycg19n5HGzCf+10LozMRSObtVr3ee1WoHtg==",
      "license": "MIT",
      "dependencies": {
        "@types/estree-jsx": "^1.0.0",
        "@types/hast": "^3.0.0",
        "@types/mdast": "^4.0.0",
        "devlop": "^1.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-phrasing": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/mdast-util-phrasing/-/mdast-util-phrasing-4.1.0.tgz",
      "integrity": "sha512-TqICwyvJJpBwvGAMZjj4J2n0X8QWp21b9l0o7eXyVJ25YNWYbJDVIyD1bZXE6WtV6RmKJVYmQAKWa0zWOABz2w==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "unist-util-is": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-to-hast": {
      "version": "13.2.0",
      "resolved": "https://registry.npmjs.org/mdast-util-to-hast/-/mdast-util-to-hast-13.2.0.tgz",
      "integrity": "sha512-QGYKEuUsYT9ykKBCMOEDLsU5JRObWQusAolFMeko/tYPufNkRffBAQjIE+99jbA87xv6FgmjLtwjh9wBWajwAA==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0",
        "@types/mdast": "^4.0.0",
        "@ungap/structured-clone": "^1.0.0",
        "devlop": "^1.0.0",
        "micromark-util-sanitize-uri": "^2.0.0",
        "trim-lines": "^3.0.0",
        "unist-util-position": "^5.0.0",
        "unist-util-visit": "^5.0.0",
        "vfile": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-to-markdown": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/mdast-util-to-markdown/-/mdast-util-to-markdown-2.1.2.tgz",
      "integrity": "sha512-xj68wMTvGXVOKonmog6LwyJKrYXZPvlwabaryTjLh9LuvovB/KAH+kvi8Gjj+7rJjsFi23nkUxRQv1KqSroMqA==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "@types/unist": "^3.0.0",
        "longest-streak": "^3.0.0",
        "mdast-util-phrasing": "^4.0.0",
        "mdast-util-to-string": "^4.0.0",
        "micromark-util-classify-character": "^2.0.0",
        "micromark-util-decode-string": "^2.0.0",
        "unist-util-visit": "^5.0.0",
        "zwitch": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-to-string": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/mdast-util-to-string/-/mdast-util-to-string-4.0.0.tgz",
      "integrity": "sha512-0H44vDimn51F0YwvxSJSm0eCDOJTRlmN0R1yBh4HLj9wiV1Dn0QoXGbvFAWj2hSItVTlCmBF1hqKlIyUBVFLPg==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/micromark/-/micromark-4.0.2.tgz",
      "integrity": "sha512-zpe98Q6kvavpCr1NPVSCMebCKfD7CA2NqZ+rykeNhONIJBpc1tFKt9hucLGwha3jNTNI8lHpctWJWoimVF4PfA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@types/debug": "^4.0.0",
        "debug": "^4.0.0",
        "decode-named-character-reference": "^1.0.0",
        "devlop": "^1.0.0",
        "micromark-core-commonmark": "^2.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-chunked": "^2.0.0",
        "micromark-util-combine-extensions": "^2.0.0",
        "micromark-util-decode-numeric-character-reference": "^2.0.0",
        "micromark-util-encode": "^2.0.0",
        "micromark-util-normalize-identifier": "^2.0.0",
        "micromark-util-resolve-all": "^2.0.0",
        "micromark-util-sanitize-uri": "^2.0.0",
        "micromark-util-subtokenize": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-core-commonmark": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/micromark-core-commonmark/-/micromark-core-commonmark-2.0.3.tgz",
      "integrity": "sha512-RDBrHEMSxVFLg6xvnXmb1Ayr2WzLAWjeSATAoxwKYJV94TeNavgoIdA0a9ytzDSVzBy2YKFK+emCPOEibLeCrg==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "decode-named-character-reference": "^1.0.0",
        "devlop": "^1.0.0",
        "micromark-factory-destination": "^2.0.0",
        "micromark-factory-label": "^2.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-factory-title": "^2.0.0",
        "micromark-factory-whitespace": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-chunked": "^2.0.0",
        "micromark-util-classify-character": "^2.0.0",
        "micromark-util-html-tag-name": "^2.0.0",
        "micromark-util-normalize-identifier": "^2.0.0",
        "micromark-util-resolve-all": "^2.0.0",
        "micromark-util-subtokenize": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-extension-gfm": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm/-/micromark-extension-gfm-3.0.0.tgz",
      "integrity": "sha512-vsKArQsicm7t0z2GugkCKtZehqUm31oeGBV/KVSorWSy8ZlNAv7ytjFhvaryUiCUJYqs+NoE6AFhpQvBTM6Q4w==",
      "license": "MIT",
      "dependencies": {
        "micromark-extension-gfm-autolink-literal": "^2.0.0",
        "micromark-extension-gfm-footnote": "^2.0.0",
        "micromark-extension-gfm-strikethrough": "^2.0.0",
        "micromark-extension-gfm-table": "^2.0.0",
        "micromark-extension-gfm-tagfilter": "^2.0.0",
        "micromark-extension-gfm-task-list-item": "^2.0.0",
        "micromark-util-combine-extensions": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-autolink-literal": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-autolink-literal/-/micromark-extension-gfm-autolink-literal-2.1.0.tgz",
      "integrity": "sha512-oOg7knzhicgQ3t4QCjCWgTmfNhvQbDDnJeVu9v81r7NltNCVmhPy1fJRX27pISafdjL+SVc4d3l48Gb6pbRypw==",
      "license": "MIT",
      "dependencies": {
        "micromark-util-character": "^2.0.0",
        "micromark-util-sanitize-uri": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-footnote": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-footnote/-/micromark-extension-gfm-footnote-2.1.0.tgz",
      "integrity": "sha512-/yPhxI1ntnDNsiHtzLKYnE3vf9JZ6cAisqVDauhp4CEHxlb4uoOTxOCJ+9s51bIB8U1N1FJ1RXOKTIlD5B/gqw==",
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-core-commonmark": "^2.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-normalize-identifier": "^2.0.0",
        "micromark-util-sanitize-uri": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-strikethrough": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-strikethrough/-/micromark-extension-gfm-strikethrough-2.1.0.tgz",
      "integrity": "sha512-ADVjpOOkjz1hhkZLlBiYA9cR2Anf8F4HqZUO6e5eDcPQd0Txw5fxLzzxnEkSkfnD0wziSGiv7sYhk/ktvbf1uw==",
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-util-chunked": "^2.0.0",
        "micromark-util-classify-character": "^2.0.0",
        "micromark-util-resolve-all": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-table": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-table/-/micromark-extension-gfm-table-2.1.1.tgz",
      "integrity": "sha512-t2OU/dXXioARrC6yWfJ4hqB7rct14e8f7m0cbI5hUmDyyIlwv5vEtooptH8INkbLzOatzKuVbQmAYcbWoyz6Dg==",
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-tagfilter": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-tagfilter/-/micromark-extension-gfm-tagfilter-2.0.0.tgz",
      "integrity": "sha512-xHlTOmuCSotIA8TW1mDIM6X2O1SiX5P9IuDtqGonFhEK0qgRI4yeC6vMxEV2dgyr2TiD+2PQ10o+cOhdVAcwfg==",
      "license": "MIT",
      "dependencies": {
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-task-list-item": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-task-list-item/-/micromark-extension-gfm-task-list-item-2.1.0.tgz",
      "integrity": "sha512-qIBZhqxqI6fjLDYFTBIa4eivDMnP+OZqsNwmQ3xNLE4Cxwc+zfQEfbs6tzAo2Hjq+bh6q5F+Z8/cksrLFYWQQw==",
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-mdx-expression": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/micromark-extension-mdx-expression/-/micromark-extension-mdx-expression-3.0.1.tgz",
      "integrity": "sha512-dD/ADLJ1AeMvSAKBwO22zG22N4ybhe7kFIZ3LsDI0GlsNr2A3KYxb0LdC1u5rj4Nw+CHKY0RVdnHX8vj8ejm4Q==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "devlop": "^1.0.0",
        "micromark-factory-mdx-expression": "^2.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-events-to-acorn": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-extension-mdx-jsx": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/micromark-extension-mdx-jsx/-/micromark-extension-mdx-jsx-3.0.2.tgz",
      "integrity": "sha512-e5+q1DjMh62LZAJOnDraSSbDMvGJ8x3cbjygy2qFEi7HCeUT4BDKCvMozPozcD6WmOt6sVvYDNBKhFSz3kjOVQ==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "devlop": "^1.0.0",
        "estree-util-is-identifier-name": "^3.0.0",
        "micromark-factory-mdx-expression": "^2.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-events-to-acorn": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0",
        "vfile-message": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-mdx-md": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-mdx-md/-/micromark-extension-mdx-md-2.0.0.tgz",
      "integrity": "sha512-EpAiszsB3blw4Rpba7xTOUptcFeBFi+6PY8VnJ2hhimH+vCQDirWgsMpz7w1XcZE7LVrSAUGb9VJpG9ghlYvYQ==",
      "license": "MIT",
      "dependencies": {
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-mdxjs": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-mdxjs/-/micromark-extension-mdxjs-3.0.0.tgz",
      "integrity": "sha512-A873fJfhnJ2siZyUrJ31l34Uqwy4xIFmvPY1oj+Ean5PHcPBYzEsvqvWGaWcfEIr11O5Dlw3p2y0tZWpKHDejQ==",
      "license": "MIT",
      "dependencies": {
        "acorn": "^8.0.0",
        "acorn-jsx": "^5.0.0",
        "micromark-extension-mdx-expression": "^3.0.0",
        "micromark-extension-mdx-jsx": "^3.0.0",
        "micromark-extension-mdx-md": "^2.0.0",
        "micromark-extension-mdxjs-esm": "^3.0.0",
        "micromark-util-combine-extensions": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-mdxjs-esm": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-mdxjs-esm/-/micromark-extension-mdxjs-esm-3.0.0.tgz",
      "integrity": "sha512-DJFl4ZqkErRpq/dAPyeWp15tGrcrrJho1hKK5uBS70BCtfrIFg81sqcTVu3Ta+KD1Tk5vAtBNElWxtAa+m8K9A==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "devlop": "^1.0.0",
        "micromark-core-commonmark": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-events-to-acorn": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0",
        "unist-util-position-from-estree": "^2.0.0",
        "vfile-message": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-factory-destination": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-factory-destination/-/micromark-factory-destination-2.0.1.tgz",
      "integrity": "sha512-Xe6rDdJlkmbFRExpTOmRj9N3MaWmbAgdpSrBQvCFqhezUn4AHqJHbaEnfbVYYiexVSs//tqOdY/DxhjdCiJnIA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-factory-label": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-factory-label/-/micromark-factory-label-2.0.1.tgz",
      "integrity": "sha512-VFMekyQExqIW7xIChcXn4ok29YE3rnuyveW3wZQWWqF4Nv9Wk5rgJ99KzPvHjkmPXF93FXIbBp6YdW3t71/7Vg==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-factory-mdx-expression": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/micromark-factory-mdx-expression/-/micromark-factory-mdx-expression-2.0.3.tgz",
      "integrity": "sha512-kQnEtA3vzucU2BkrIa8/VaSAsP+EJ3CKOvhMuJgOEGg9KDC6OAY6nSnNDVRiVNRqj7Y4SlSzcStaH/5jge8JdQ==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "devlop": "^1.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-events-to-acorn": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0",
        "unist-util-position-from-estree": "^2.0.0",
        "vfile-message": "^4.0.0"
      }
    },
    "node_modules/micromark-factory-space": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-factory-space/-/micromark-factory-space-2.0.1.tgz",
      "integrity": "sha512-zRkxjtBxxLd2Sc0d+fbnEunsTj46SWXgXciZmHq0kDYGnck/ZSGj9/wULTV95uoeYiK5hRXP2mJ98Uo4cq/LQg==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-character": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-factory-title": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-factory-title/-/micromark-factory-title-2.0.1.tgz",
      "integrity": "sha512-5bZ+3CjhAd9eChYTHsjy6TGxpOFSKgKKJPJxr293jTbfry2KDoWkhBb6TcPVB4NmzaPhMs1Frm9AZH7OD4Cjzw==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-factory-whitespace": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-factory-whitespace/-/micromark-factory-whitespace-2.0.1.tgz",
      "integrity": "sha512-Ob0nuZ3PKt/n0hORHyvoD9uZhr+Za8sFoP+OnMcnWK5lngSzALgQYKMr9RJVOWLqQYuyn6ulqGWSXdwf6F80lQ==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-character": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/micromark-util-character/-/micromark-util-character-2.1.1.tgz",
      "integrity": "sha512-wv8tdUTJ3thSFFFJKtpYKOYiGP2+v96Hvk4Tu8KpCAsTMs6yi+nVmGh1syvSCsaxz45J6Jbw+9DD6g97+NV67Q==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-chunked": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-chunked/-/micromark-util-chunked-2.0.1.tgz",
      "integrity": "sha512-QUNFEOPELfmvv+4xiNg2sRYeS/P84pTW0TCgP5zc9FpXetHY0ab7SxKyAQCNCc1eK0459uoLI1y5oO5Vc1dbhA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-symbol": "^2.0.0"
      }
    },
    "node_modules/micromark-util-classify-character": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-classify-character/-/micromark-util-classify-character-2.0.1.tgz",
      "integrity": "sha512-K0kHzM6afW/MbeWYWLjoHQv1sgg2Q9EccHEDzSkxiP/EaagNzCm7T/WMKZ3rjMbvIpvBiZgwR3dKMygtA4mG1Q==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-combine-extensions": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-combine-extensions/-/micromark-util-combine-extensions-2.0.1.tgz",
      "integrity": "sha512-OnAnH8Ujmy59JcyZw8JSbK9cGpdVY44NKgSM7E9Eh7DiLS2E9RNQf0dONaGDzEG9yjEl5hcqeIsj4hfRkLH/Bg==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-chunked": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-decode-numeric-character-reference": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/micromark-util-decode-numeric-character-reference/-/micromark-util-decode-numeric-character-reference-2.0.2.tgz",
      "integrity": "sha512-ccUbYk6CwVdkmCQMyr64dXz42EfHGkPQlBj5p7YVGzq8I7CtjXZJrubAYezf7Rp+bjPseiROqe7G6foFd+lEuw==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-symbol": "^2.0.0"
      }
    },
    "node_modules/micromark-util-decode-string": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-decode-string/-/micromark-util-decode-string-2.0.1.tgz",
      "integrity": "sha512-nDV/77Fj6eH1ynwscYTOsbK7rR//Uj0bZXBwJZRfaLEJ1iGBR6kIfNmlNqaqJf649EP0F3NWNdeJi03elllNUQ==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "decode-named-character-reference": "^1.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-decode-numeric-character-reference": "^2.0.0",
        "micromark-util-symbol": "^2.0.0"
      }
    },
    "node_modules/micromark-util-encode": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-encode/-/micromark-util-encode-2.0.1.tgz",
      "integrity": "sha512-c3cVx2y4KqUnwopcO9b/SCdo2O67LwJJ/UyqGfbigahfegL9myoEFoDYZgkT7f36T0bLrM9hZTAaAyH+PCAXjw==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT"
    },
    "node_modules/micromark-util-events-to-acorn": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/micromark-util-events-to-acorn/-/micromark-util-events-to-acorn-2.0.3.tgz",
      "integrity": "sha512-jmsiEIiZ1n7X1Rr5k8wVExBQCg5jy4UXVADItHmNk1zkwEVhBuIUKRu3fqv+hs4nxLISi2DQGlqIOGiFxgbfHg==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "@types/unist": "^3.0.0",
        "devlop": "^1.0.0",
        "estree-util-visit": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0",
        "vfile-message": "^4.0.0"
      }
    },
    "node_modules/micromark-util-html-tag-name": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-html-tag-name/-/micromark-util-html-tag-name-2.0.1.tgz",
      "integrity": "sha512-2cNEiYDhCWKI+Gs9T0Tiysk136SnR13hhO8yW6BGNyhOC4qYFnwF1nKfD3HFAIXA5c45RrIG1ub11GiXeYd1xA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT"
    },
    "node_modules/micromark-util-normalize-identifier": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-normalize-identifier/-/micromark-util-normalize-identifier-2.0.1.tgz",
      "integrity": "sha512-sxPqmo70LyARJs0w2UclACPUUEqltCkJ6PhKdMIDuJ3gSf/Q+/GIe3WKl0Ijb/GyH9lOpUkRAO2wp0GVkLvS9Q==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-symbol": "^2.0.0"
      }
    },
    "node_modules/micromark-util-resolve-all": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-resolve-all/-/micromark-util-resolve-all-2.0.1.tgz",
      "integrity": "sha512-VdQyxFWFT2/FGJgwQnJYbe1jjQoNTS4RjglmSjTUlpUMa95Htx9NHeYW4rGDJzbjvCsl9eLjMQwGeElsqmzcHg==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-sanitize-uri": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-sanitize-uri/-/micromark-util-sanitize-uri-2.0.1.tgz",
      "integrity": "sha512-9N9IomZ/YuGGZZmQec1MbgxtlgougxTodVwDzzEouPKo3qFWvymFHWcnDi2vzV1ff6kas9ucW+o3yzJK9YB1AQ==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-character": "^2.0.0",
        "micromark-util-encode": "^2.0.0",
        "micromark-util-symbol": "^2.0.0"
      }
    },
    "node_modules/micromark-util-subtokenize": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/micromark-util-subtokenize/-/micromark-util-subtokenize-2.1.0.tgz",
      "integrity": "sha512-XQLu552iSctvnEcgXw6+Sx75GflAPNED1qx7eBJ+wydBb2KCbRZe+NwvIEEMM83uml1+2WSXpBAcp9IUCgCYWA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-util-chunked": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-symbol": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-symbol/-/micromark-util-symbol-2.0.1.tgz",
      "integrity": "sha512-vs5t8Apaud9N28kgCrRUdEed4UJ+wWNvicHLPxCa9ENlYuAY31M0ETy5y1vA33YoNPDFTghEbnh6efaE8h4x0Q==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT"
    },
    "node_modules/micromark-util-types": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/micromark-util-types/-/micromark-util-types-2.0.2.tgz",
      "integrity": "sha512-Yw0ECSpJoViF1qTU4DC6NwtC4aWGt1EkzaQB8KPPyCRR8z9TWeV0HbEFGTO+ZY1wB22zmxnJqhPyTpOVCpeHTA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT"
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/minizlib": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-3.0.2.tgz",
      "integrity": "sha512-oG62iEk+CYt5Xj2YqI5Xi9xWUeZhDI8jjQmC5oThVH5JGCTgIjr7ciJDzC7MBzYd//WvR1OTmP5Q38Q8ShQtVA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "minipass": "^7.1.2"
      },
      "engines": {
        "node": ">= 18"
      }
    },
    "node_modules/mkdirp": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-3.0.1.tgz",
      "integrity": "sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "mkdirp": "dist/cjs/src/bin.js"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/next": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/next/-/next-15.5.2.tgz",
      "integrity": "sha512-H8Otr7abj1glFhbGnvUt3gz++0AF1+QoCXEBmd/6aKbfdFwrn0LpA836Ed5+00va/7HQSDD+mOoVhn3tNy3e/Q==",
      "license": "MIT",
      "dependencies": {
        "@next/env": "15.5.2",
        "@swc/helpers": "0.5.15",
        "caniuse-lite": "^1.0.30001579",
        "postcss": "8.4.31",
        "styled-jsx": "5.1.6"
      },
      "bin": {
        "next": "dist/bin/next"
      },
      "engines": {
        "node": "^18.18.0 || ^19.8.0 || >= 20.0.0"
      },
      "optionalDependencies": {
        "@next/swc-darwin-arm64": "15.5.2",
        "@next/swc-darwin-x64": "15.5.2",
        "@next/swc-linux-arm64-gnu": "15.5.2",
        "@next/swc-linux-arm64-musl": "15.5.2",
        "@next/swc-linux-x64-gnu": "15.5.2",
        "@next/swc-linux-x64-musl": "15.5.2",
        "@next/swc-win32-arm64-msvc": "15.5.2",
        "@next/swc-win32-x64-msvc": "15.5.2",
        "sharp": "^0.34.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.1.0",
        "@playwright/test": "^1.51.1",
        "babel-plugin-react-compiler": "*",
        "react": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
        "react-dom": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
        "sass": "^1.3.0"
      },
      "peerDependenciesMeta": {
        "@opentelemetry/api": {
          "optional": true
        },
        "@playwright/test": {
          "optional": true
        },
        "babel-plugin-react-compiler": {
          "optional": true
        },
        "sass": {
          "optional": true
        }
      }
    },
    "node_modules/next-mdx-remote": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/next-mdx-remote/-/next-mdx-remote-5.0.0.tgz",
      "integrity": "sha512-RNNbqRpK9/dcIFZs/esQhuLA8jANqlH694yqoDBK8hkVdJUndzzGmnPHa2nyi90N4Z9VmzuSWNRpr5ItT3M7xQ==",
      "license": "MPL-2.0",
      "dependencies": {
        "@babel/code-frame": "^7.23.5",
        "@mdx-js/mdx": "^3.0.1",
        "@mdx-js/react": "^3.0.1",
        "unist-util-remove": "^3.1.0",
        "vfile": "^6.0.1",
        "vfile-matter": "^5.0.0"
      },
      "engines": {
        "node": ">=14",
        "npm": ">=7"
      },
      "peerDependencies": {
        "react": ">=16"
      }
    },
    "node_modules/next/node_modules/postcss": {
      "version": "8.4.31",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz",
      "integrity": "sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.6",
        "picocolors": "^1.0.0",
        "source-map-js": "^1.0.2"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/optionator": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parse-entities": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/parse-entities/-/parse-entities-4.0.2.tgz",
      "integrity": "sha512-GG2AQYWoLgL877gQIKeRPGO1xF9+eG1ujIb5soS5gPvLQ1y2o8FL90w2QWNdf9I361Mpp7726c+lj3U0qK1uGw==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^2.0.0",
        "character-entities-legacy": "^3.0.0",
        "character-reference-invalid": "^2.0.0",
        "decode-named-character-reference": "^1.0.0",
        "is-alphanumerical": "^2.0.0",
        "is-decimal": "^2.0.0",
        "is-hexadecimal": "^2.0.0"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/parse-entities/node_modules/@types/unist": {
      "version": "2.0.11",
      "resolved": "https://registry.npmjs.org/@types/unist/-/unist-2.0.11.tgz",
      "integrity": "sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==",
      "license": "MIT"
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "license": "ISC"
    },
    "node_modules/postcss": {
      "version": "8.5.6",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
      "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.11",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-selector-parser": {
      "version": "6.0.10",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.10.tgz",
      "integrity": "sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/property-information": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/property-information/-/property-information-7.1.0.tgz",
      "integrity": "sha512-TwEZ+X+yCJmYfL7TPUOcvBZ4QfoT5YenQiJuX//0th53DE6w0xxLEtfK3iyryQFddXuvkIk51EEgrJQ0WJkOmQ==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/react": {
      "version": "19.1.1",
      "resolved": "https://registry.npmjs.org/react/-/react-19.1.1.tgz",
      "integrity": "sha512-w8nqGImo45dmMIfljjMwOGtbmC/mk4CMYhWIicdSflH91J9TyCyczcPFXJzrZ/ZXcgGRFeP6BU0BEJTw6tZdfQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-dom": {
      "version": "19.1.1",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-19.1.1.tgz",
      "integrity": "sha512-Dlq/5LAZgF0Gaz6yiqZCf6VCcZs1ghAJyrsu84Q/GT0gV+mCxbfmKNoGRKBYMJ8IEdGPqu49YWXD02GCknEDkw==",
      "license": "MIT",
      "dependencies": {
        "scheduler": "^0.26.0"
      },
      "peerDependencies": {
        "react": "^19.1.1"
      }
    },
    "node_modules/recma-build-jsx": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/recma-build-jsx/-/recma-build-jsx-1.0.0.tgz",
      "integrity": "sha512-8GtdyqaBcDfva+GUKDr3nev3VpKAhup1+RvkMvUxURHpW7QyIvk9F5wz7Vzo06CEMSilw6uArgRqhpiUcWp8ew==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "estree-util-build-jsx": "^3.0.0",
        "vfile": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/recma-jsx": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/recma-jsx/-/recma-jsx-1.0.1.tgz",
      "integrity": "sha512-huSIy7VU2Z5OLv6oFLosQGGDqPqdO1iq6bWNAdhzMxSJP7RAso4fCZ1cKu8j9YHCZf3TPrq4dw3okhrylgcd7w==",
      "license": "MIT",
      "dependencies": {
        "acorn-jsx": "^5.0.0",
        "estree-util-to-js": "^2.0.0",
        "recma-parse": "^1.0.0",
        "recma-stringify": "^1.0.0",
        "unified": "^11.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      },
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/recma-parse": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/recma-parse/-/recma-parse-1.0.0.tgz",
      "integrity": "sha512-OYLsIGBB5Y5wjnSnQW6t3Xg7q3fQ7FWbw/vcXtORTnyaSFscOtABg+7Pnz6YZ6c27fG1/aN8CjfwoUEUIdwqWQ==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "esast-util-from-js": "^2.0.0",
        "unified": "^11.0.0",
        "vfile": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/recma-stringify": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/recma-stringify/-/recma-stringify-1.0.0.tgz",
      "integrity": "sha512-cjwII1MdIIVloKvC9ErQ+OgAtwHBmcZ0Bg4ciz78FtbT8In39aAYbaA7zvxQ61xVMSPE8WxhLwLbhif4Js2C+g==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "estree-util-to-js": "^2.0.0",
        "unified": "^11.0.0",
        "vfile": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/rehype-autolink-headings": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/rehype-autolink-headings/-/rehype-autolink-headings-7.1.0.tgz",
      "integrity": "sha512-rItO/pSdvnvsP4QRB1pmPiNHUskikqtPojZKJPPPAVx9Hj8i8TwMBhofrrAYRhYOOBZH9tgmG5lPqDLuIWPWmw==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0",
        "@ungap/structured-clone": "^1.0.0",
        "hast-util-heading-rank": "^3.0.0",
        "hast-util-is-element": "^3.0.0",
        "unified": "^11.0.0",
        "unist-util-visit": "^5.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/rehype-recma": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/rehype-recma/-/rehype-recma-1.0.0.tgz",
      "integrity": "sha512-lqA4rGUf1JmacCNWWZx0Wv1dHqMwxzsDWYMTowuplHF3xH0N/MmrZ/G3BDZnzAkRmxDadujCjaKM2hqYdCBOGw==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "@types/hast": "^3.0.0",
        "hast-util-to-estree": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/rehype-slug": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/rehype-slug/-/rehype-slug-6.0.0.tgz",
      "integrity": "sha512-lWyvf/jwu+oS5+hL5eClVd3hNdmwM1kAC0BUvEGD19pajQMIzcNUd/k9GsfQ+FfECvX+JE+e9/btsKH0EjJT6A==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0",
        "github-slugger": "^2.0.0",
        "hast-util-heading-rank": "^3.0.0",
        "hast-util-to-string": "^3.0.0",
        "unist-util-visit": "^5.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/remark-gfm": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/remark-gfm/-/remark-gfm-4.0.1.tgz",
      "integrity": "sha512-1quofZ2RQ9EWdeN34S79+KExV1764+wCUGop5CPL1WGdD0ocPpu91lzPGbwWMECpEpd42kJGQwzRfyov9j4yNg==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "mdast-util-gfm": "^3.0.0",
        "micromark-extension-gfm": "^3.0.0",
        "remark-parse": "^11.0.0",
        "remark-stringify": "^11.0.0",
        "unified": "^11.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/remark-mdx": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/remark-mdx/-/remark-mdx-3.1.1.tgz",
      "integrity": "sha512-Pjj2IYlUY3+D8x00UJsIOg5BEvfMyeI+2uLPn9VO9Wg4MEtN/VTIq2NEJQfde9PnX15KgtHyl9S0BcTnWrIuWg==",
      "license": "MIT",
      "dependencies": {
        "mdast-util-mdx": "^3.0.0",
        "micromark-extension-mdxjs": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/remark-parse": {
      "version": "11.0.0",
      "resolved": "https://registry.npmjs.org/remark-parse/-/remark-parse-11.0.0.tgz",
      "integrity": "sha512-FCxlKLNGknS5ba/1lmpYijMUzX2esxW5xQqjWxw2eHFfS2MSdaHVINFmhjo+qN1WhZhNimq0dZATN9pH0IDrpA==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "micromark-util-types": "^2.0.0",
        "unified": "^11.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/remark-rehype": {
      "version": "11.1.2",
      "resolved": "https://registry.npmjs.org/remark-rehype/-/remark-rehype-11.1.2.tgz",
      "integrity": "sha512-Dh7l57ianaEoIpzbp0PC9UKAdCSVklD8E5Rpw7ETfbTl3FqcOOgq5q2LVDhgGCkaBv7p24JXikPdvhhmHvKMsw==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0",
        "@types/mdast": "^4.0.0",
        "mdast-util-to-hast": "^13.0.0",
        "unified": "^11.0.0",
        "vfile": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/remark-stringify": {
      "version": "11.0.0",
      "resolved": "https://registry.npmjs.org/remark-stringify/-/remark-stringify-11.0.0.tgz",
      "integrity": "sha512-1OSmLd3awB/t8qdoEOMazZkNsfVTeY4fTsgzcQFdXNq8ToTN4ZGwrMnlda4K6smTFKD+GRV6O48i6Z4iKgPPpw==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "mdast-util-to-markdown": "^2.0.0",
        "unified": "^11.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/scheduler": {
      "version": "0.26.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.26.0.tgz",
      "integrity": "sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==",
      "license": "MIT"
    },
    "node_modules/section-matter": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/section-matter/-/section-matter-1.0.0.tgz",
      "integrity": "sha512-vfD3pmTzGpufjScBh50YHKzEu2lxBWhVEHsNGoEXmCmn2hKGfeNLYMzCJpe8cD7gqX7TJluOVpBkAequ6dgMmA==",
      "license": "MIT",
      "dependencies": {
        "extend-shallow": "^2.0.1",
        "kind-of": "^6.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/semver": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
      "license": "ISC",
      "optional": true,
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/sharp": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/sharp/-/sharp-0.34.3.tgz",
      "integrity": "sha512-eX2IQ6nFohW4DbvHIOLRB3MHFpYqaqvXd3Tp5e/T/dSH83fxaNJQRvDMhASmkNTsNTVF2/OOopzRCt7xokgPfg==",
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "color": "^4.2.3",
        "detect-libc": "^2.0.4",
        "semver": "^7.7.2"
      },
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-darwin-arm64": "0.34.3",
        "@img/sharp-darwin-x64": "0.34.3",
        "@img/sharp-libvips-darwin-arm64": "1.2.0",
        "@img/sharp-libvips-darwin-x64": "1.2.0",
        "@img/sharp-libvips-linux-arm": "1.2.0",
        "@img/sharp-libvips-linux-arm64": "1.2.0",
        "@img/sharp-libvips-linux-ppc64": "1.2.0",
        "@img/sharp-libvips-linux-s390x": "1.2.0",
        "@img/sharp-libvips-linux-x64": "1.2.0",
        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0",
        "@img/sharp-libvips-linuxmusl-x64": "1.2.0",
        "@img/sharp-linux-arm": "0.34.3",
        "@img/sharp-linux-arm64": "0.34.3",
        "@img/sharp-linux-ppc64": "0.34.3",
        "@img/sharp-linux-s390x": "0.34.3",
        "@img/sharp-linux-x64": "0.34.3",
        "@img/sharp-linuxmusl-arm64": "0.34.3",
        "@img/sharp-linuxmusl-x64": "0.34.3",
        "@img/sharp-wasm32": "0.34.3",
        "@img/sharp-win32-arm64": "0.34.3",
        "@img/sharp-win32-ia32": "0.34.3",
        "@img/sharp-win32-x64": "0.34.3"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/simple-swizzle": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
      "integrity": "sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "is-arrayish": "^0.3.1"
      }
    },
    "node_modules/source-map": {
      "version": "0.7.6",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.6.tgz",
      "integrity": "sha512-i5uvt8C3ikiWeNZSVZNWcfZPItFQOsYTUAOkcUPGd8DqDy1uOUikjt5dG+uRlwyvR108Fb9DOd4GvXfT0N2/uQ==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/space-separated-tokens": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/space-separated-tokens/-/space-separated-tokens-2.0.2.tgz",
      "integrity": "sha512-PEGlAwrG8yXGXRjW32fGbg66JAlOAwbObuqVoJpv/mRgoWDQfgH1wDPvtzWyUSNAXBGSk8h755YDbbcEy3SH2Q==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==",
      "license": "BSD-3-Clause"
    },
    "node_modules/stringify-entities": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/stringify-entities/-/stringify-entities-4.0.4.tgz",
      "integrity": "sha512-IwfBptatlO+QCJUo19AqvrPNqlVMpW9YEL2LIVY+Rpv2qsjCGxaDLNRgeGsQWJhfItebuJhsGSLjaBbNSQ+ieg==",
      "license": "MIT",
      "dependencies": {
        "character-entities-html4": "^2.0.0",
        "character-entities-legacy": "^3.0.0"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/strip-bom-string": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom-string/-/strip-bom-string-1.0.0.tgz",
      "integrity": "sha512-uCC2VHvQRYu+lMh4My/sFNmF2klFymLX1wHJeXnbEJERpV/ZsVuonzerjfrGpIGF7LBVa1O7i9kjiWvJiFck8g==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/style-to-js": {
      "version": "1.1.17",
      "resolved": "https://registry.npmjs.org/style-to-js/-/style-to-js-1.1.17.tgz",
      "integrity": "sha512-xQcBGDxJb6jjFCTzvQtfiPn6YvvP2O8U1MDIPNfJQlWMYfktPy+iGsHE7cssjs7y84d9fQaK4UF3RIJaAHSoYA==",
      "license": "MIT",
      "dependencies": {
        "style-to-object": "1.0.9"
      }
    },
    "node_modules/style-to-object": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/style-to-object/-/style-to-object-1.0.9.tgz",
      "integrity": "sha512-G4qppLgKu/k6FwRpHiGiKPaPTFcG3g4wNVX/Qsfu+RqQM30E7Tyu/TEgxcL9PNLF5pdRLwQdE3YKKf+KF2Dzlw==",
      "license": "MIT",
      "dependencies": {
        "inline-style-parser": "0.2.4"
      }
    },
    "node_modules/styled-jsx": {
      "version": "5.1.6",
      "resolved": "https://registry.npmjs.org/styled-jsx/-/styled-jsx-5.1.6.tgz",
      "integrity": "sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==",
      "license": "MIT",
      "dependencies": {
        "client-only": "0.0.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "peerDependencies": {
        "react": ">= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0"
      },
      "peerDependenciesMeta": {
        "@babel/core": {
          "optional": true
        },
        "babel-plugin-macros": {
          "optional": true
        }
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/tailwindcss": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.12.tgz",
      "integrity": "sha512-DzFtxOi+7NsFf7DBtI3BJsynR+0Yp6etH+nRPTbpWnS2pZBaSksv/JGctNwSWzbFjp0vxSqknaUylseZqMDGrA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/tapable": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.3.tgz",
      "integrity": "sha512-ZL6DDuAlRlLGghwcfmSn9sK3Hr6ArtyudlSAiCqQ6IfE+b+HHbydbYDIG15IfS5do+7XQQBdBiubF/cV2dnDzg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      }
    },
    "node_modules/tar": {
      "version": "7.4.3",
      "resolved": "https://registry.npmjs.org/tar/-/tar-7.4.3.tgz",
      "integrity": "sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "@isaacs/fs-minipass": "^4.0.0",
        "chownr": "^3.0.0",
        "minipass": "^7.1.2",
        "minizlib": "^3.0.1",
        "mkdirp": "^3.0.1",
        "yallist": "^5.0.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/trim-lines": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/trim-lines/-/trim-lines-3.0.1.tgz",
      "integrity": "sha512-kRj8B+YHZCc9kQYdWfJB2/oUl9rA99qbowYYBtr4ui4mZyAQ2JpvVBd/6U2YloATfqBhBTSMhTpgBHtU0Mf3Rg==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/trough": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/trough/-/trough-2.2.0.tgz",
      "integrity": "sha512-tmMpK00BjZiUyVyvrBK7knerNgmgvcV/KLVyuma/SC+TQN167GrMRciANTz09+k3zW8L8t60jWO1GpfkZdjTaw==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/typescript": {
      "version": "5.9.2",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.9.2.tgz",
      "integrity": "sha512-CWBzXQrc/qOkhidw1OzBTQuYRbfyxDXJMVJ1XNwUHGROVmuaeiEm3OslpZ1RV96d7SKKjZKrSJu3+t/xlw3R9A==",
      "dev": true,
      "license": "Apache-2.0",
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/undici-types": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.10.0.tgz",
      "integrity": "sha512-t5Fy/nfn+14LuOc2KNYg75vZqClpAiqscVvMygNnlsHBFpSXdJaYtXMcdNLpl/Qvc3P2cB3s6lOV51nqsFq4ag==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/unified": {
      "version": "11.0.5",
      "resolved": "https://registry.npmjs.org/unified/-/unified-11.0.5.tgz",
      "integrity": "sha512-xKvGhPWw3k84Qjh8bI3ZeJjqnyadK+GEFtazSfZv/rKeTkTjOJho6mFqh2SM96iIcZokxiOpg78GazTSg8+KHA==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0",
        "bail": "^2.0.0",
        "devlop": "^1.0.0",
        "extend": "^3.0.0",
        "is-plain-obj": "^4.0.0",
        "trough": "^2.0.0",
        "vfile": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-is": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/unist-util-is/-/unist-util-is-6.0.0.tgz",
      "integrity": "sha512-2qCTHimwdxLfz+YzdGfkqNlH0tLi9xjTnHddPmJwtIG9MGsdbutfTc4P+haPD7l7Cjxf/WZj+we5qfVPvvxfYw==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-position": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/unist-util-position/-/unist-util-position-5.0.0.tgz",
      "integrity": "sha512-fucsC7HjXvkB5R3kTCO7kUjRdrS0BJt3M/FPxmHMBOm8JQi2BsHAHFsy27E0EolP8rp0NzXsJ+jNPyDWvOJZPA==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-position-from-estree": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unist-util-position-from-estree/-/unist-util-position-from-estree-2.0.0.tgz",
      "integrity": "sha512-KaFVRjoqLyF6YXCbVLNad/eS4+OfPQQn2yOd7zF/h5T/CSL2v8NpN6a5TPvtbXthAGw5nG+PuTtq+DdIZr+cRQ==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-remove": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/unist-util-remove/-/unist-util-remove-3.1.1.tgz",
      "integrity": "sha512-kfCqZK5YVY5yEa89tvpl7KnBBHu2c6CzMkqHUrlOqaRgGOMp0sMvwWOVrbAtj03KhovQB7i96Gda72v/EFE0vw==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^2.0.0",
        "unist-util-is": "^5.0.0",
        "unist-util-visit-parents": "^5.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-remove/node_modules/@types/unist": {
      "version": "2.0.11",
      "resolved": "https://registry.npmjs.org/@types/unist/-/unist-2.0.11.tgz",
      "integrity": "sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==",
      "license": "MIT"
    },
    "node_modules/unist-util-remove/node_modules/unist-util-is": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/unist-util-is/-/unist-util-is-5.2.1.tgz",
      "integrity": "sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-remove/node_modules/unist-util-visit-parents": {
      "version": "5.1.3",
      "resolved": "https://registry.npmjs.org/unist-util-visit-parents/-/unist-util-visit-parents-5.1.3.tgz",
      "integrity": "sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^2.0.0",
        "unist-util-is": "^5.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-stringify-position": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-4.0.0.tgz",
      "integrity": "sha512-0ASV06AAoKCDkS2+xw5RXJywruurpbC4JZSm7nr7MOt1ojAzvyyaO+UxZf18j8FCF6kmzCZKcAgN/yu2gm2XgQ==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-visit": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/unist-util-visit/-/unist-util-visit-5.0.0.tgz",
      "integrity": "sha512-MR04uvD+07cwl/yhVuVWAtw+3GOR/knlL55Nd/wAdblk27GCVt3lqpTivy/tkJcZoNPzTwS1Y+KMojlLDhoTzg==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0",
        "unist-util-is": "^6.0.0",
        "unist-util-visit-parents": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-visit-parents": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/unist-util-visit-parents/-/unist-util-visit-parents-6.0.1.tgz",
      "integrity": "sha512-L/PqWzfTP9lzzEa6CKs0k2nARxTdZduw3zyh8d2NVBnsyvHjSX4TWse388YrrQKbvI8w20fGjGlhgT96WwKykw==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0",
        "unist-util-is": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/vfile": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/vfile/-/vfile-6.0.3.tgz",
      "integrity": "sha512-KzIbH/9tXat2u30jf+smMwFCsno4wHVdNmzFyL+T/L3UGqqk6JKfVqOFOZEpZSHADH1k40ab6NUIXZq422ov3Q==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0",
        "vfile-message": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/vfile-matter": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/vfile-matter/-/vfile-matter-5.0.1.tgz",
      "integrity": "sha512-o6roP82AiX0XfkyTHyRCMXgHfltUNlXSEqCIS80f+mbAyiQBE2fxtDVMtseyytGx75sihiJFo/zR6r/4LTs2Cw==",
      "license": "MIT",
      "dependencies": {
        "vfile": "^6.0.0",
        "yaml": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/vfile-message": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/vfile-message/-/vfile-message-4.0.3.tgz",
      "integrity": "sha512-QTHzsGd1EhbZs4AsQ20JX1rC3cOlt/IWJruk893DfLRr57lcnOeMaWG4K0JrRta4mIJZKth2Au3mM3u03/JWKw==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0",
        "unist-util-stringify-position": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/word-wrap": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/yallist": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
      "integrity": "sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/yaml": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.8.1.tgz",
      "integrity": "sha512-lcYcMxX2PO9XMGvAJkJ3OsNMw+/7FKes7/hgerGUYWIoWu5j/+YQqcZr5JnPZWzOsEBgMbSbiSTn/dv/69Mkpw==",
      "license": "ISC",
      "bin": {
        "yaml": "bin.mjs"
      },
      "engines": {
        "node": ">= 14.6"
      }
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/zwitch": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/zwitch/-/zwitch-2.0.4.tgz",
      "integrity": "sha512-bXE4cR/kVZhKZX/RjPEflHaKVhUVl85noU3v6b8apfQEc1x4A+zBxjZ4lN8LqGd6WZ3dl98pY4o717VFmoPp+A==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    }
  }
}

================================================================================
FILE: package.json  (size: 952 bytes)
================================================================================
{
  "name": "gimesha-portfolio",
  "version": "0.2.0",
  "private": true,
  "engines": {
    "node": ">=22.0.0"
  },
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "eslint . --ext .ts,.tsx --max-warnings 0"
  },
  "dependencies": {
    "@mdx-js/loader": "latest",
    "@mdx-js/react": "latest",
    "@next/mdx": "latest",
    "@types/mdx": "latest",
    "gray-matter": "^4.0.3",
    "next": "^15.5.0",
    "next-mdx-remote": "^5.0.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "rehype-autolink-headings": "^7.1.0",
    "rehype-slug": "^6.0.0",
    "remark-gfm": "^4.0.1"
  },
  "devDependencies": {
    "@tailwindcss/postcss": "latest",
    "@tailwindcss/typography": "latest",
    "@types/node": "latest",
    "@types/react": "latest",
    "@types/react-dom": "latest",
    "eslint": "latest",
    "postcss": "latest",
    "tailwindcss": "latest",
    "typescript": "5.9.2"
  }
}

================================================================================
FILE: postcss.config.mjs  (size: 93 bytes)
================================================================================
const config = {
  plugins: {
    "@tailwindcss/postcss": {},
  },
};
export default config;

================================================================================
FILE: public/case-studies/bank-app/BankApp1.jpg  (size: 49577 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: public/case-studies/bank-app/BankApp2.jpg  (size: 43211 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: public/case-studies/bank-app/BankApp3.jpg  (size: 41310 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: public/case-studies/bank-app/BankApp4.jpg  (size: 58731 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: public/case-studies/bank-app/BankApp5.jpg  (size: 28576 bytes)  [UNSUPPORTED/NON-TEXT]
================================================================================
(contents omitted)

================================================================================
FILE: public/favicon.svg  (size: 226 bytes)
================================================================================
<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 128 128'><rect width='128' height='128' rx='24' fill='#111'/><text x='50%' y='50%' dominant-baseline='middle' text-anchor='middle' font-size='64' fill='white'>G</text></svg>

================================================================================
FILE: public/images/projects/banking-system/cover.svg  (size: 241 bytes)
================================================================================
<svg xmlns='http://www.w3.org/2000/svg' width='1600' height='900'><rect width='100%' height='100%' fill='#e5e7eb'/><text x='50%' y='50%' dominant-baseline='middle' text-anchor='middle' font-size='48' fill='#374151'>Project Cover</text></svg>

================================================================================
FILE: public/images/projects/neurosim/cover.svg  (size: 241 bytes)
================================================================================
<svg xmlns='http://www.w3.org/2000/svg' width='1600' height='900'><rect width='100%' height='100%' fill='#e5e7eb'/><text x='50%' y='50%' dominant-baseline='middle' text-anchor='middle' font-size='48' fill='#374151'>Project Cover</text></svg>

================================================================================
FILE: public/images/projects/survival-game/cover.svg  (size: 241 bytes)
================================================================================
<svg xmlns='http://www.w3.org/2000/svg' width='1600' height='900'><rect width='100%' height='100%' fill='#e5e7eb'/><text x='50%' y='50%' dominant-baseline='middle' text-anchor='middle' font-size='48' fill='#374151'>Project Cover</text></svg>

================================================================================
FILE: public/resume.pdf  (size: 40 bytes)
================================================================================
%PDF-1.4
% Portfolio resume placeholder

================================================================================
FILE: public/robots.txt  (size: 64 bytes)
================================================================================
User-agent: *
Allow: /
Sitemap: https://gimesha.dev/sitemap.xml

================================================================================
FILE: README.md  (size: 593 bytes)
================================================================================
![Project cover](cover.png)
# Gimesha Portfolio — Next.js 15 + MDX (official) + Tailwind v4

This starter follows **official docs** for MDX and Tailwind on Next.js.

## Quick start
```bash
npm i
npm run dev
# http://localhost:3000
```

### Tech
- **Next.js 15** + **React 19**
- **MDX via @next/mdx** (App Router)
- **Tailwind v4** (official Next.js guide) + `@tailwindcss/typography`

### Files to edit
- Content MDX: `content/projects/*.mdx`, `content/about.mdx`
- Pages: `app/*`
- Global CSS: `app/globals.css`

### Deploy
- Push to GitHub and import to Vercel. Add domain `gimesha.dev`.

================================================================================
FILE: site-content/about.mdx  (size: 2980 bytes)
================================================================================
# About

I'm **Gimesha Nirmal**, a software engineer who ships **reliable products across web, mobile, and backend services**.
I care about **clear architecture**, **performance**, and **accessibility**. Recent work includes identity/verification features, payments, e-commerce flows, and interactive tools.

> **TL;DR** — I turn messy requirements into clean APIs, fast UIs, and production-ready systems that are easy to maintain.

## Expertise

- **Backend**
- Spring Boot · Hibernate/JPA · REST · MySQL
- Service design, auth, data modeling, observability
- **Frontend**
- React/Next.js · TypeScript · Tailwind
- Accessible forms/tables, loading states, error boundaries
- **Mobile**
- Android (Kotlin, Compose) · Retrofit/OkHttp · Material 3
- **AI-enabled features**
- Python · FastAPI · ONNX runtimes
- Face match, liveness, OCR pipelines (thresholds, retries, confidence gating)

## What I like working on

- End-to-end product slices: API → data → UI → deploy
- Data- and trust-heavy flows (identity, checkout, reporting) with great UX
- Performance and resilience on real networks and devices
- Codebases that stay readable as teams and features grow

## How I work

- **Clarity first:** small, well-named modules; honest interfaces; useful logs
- **A11y & UX:** keyboard/screen-reader friendly by default
- **Defense in depth:** validation at the edge, safe defaults, meaningful errors
- **Measure > guess:** lightweight metrics before optimizing

## Selected work

- **Multi-Platform Platform (Fintech)** — Spring Boot core services, React admin, Android wallet, and a FastAPI verification service. Focus on modular domains, resilient KYC, and clean API contracts.
Read more: [/case-studies/multi-platform-banking-system](/case-studies/multi-platform-banking-system)

- **BankApp (Android)** — Wallet flows (card reload, QR pay, bill-pay) with a testable Retrofit stack and Compose UI.
Read more: [/case-studies/bank-app](/case-studies/bank-app)

- **NeuroSim** — Browser-based neural network simulator (CS50).
Read more: [/case-studies/neurosim](/case-studies/neurosim)

## Toolbox

- **Languages:** Java · Kotlin · TypeScript · Python
- **Web/Apps:** Next.js · React · Tailwind · Compose
- **Services:** Spring Boot · FastAPI · REST · Webhooks
- **Data:** MySQL · SQLite · JPA/Hibernate
- **ML plumbing:** ONNX · basic pre/post-processing for OCR/vision
- **Dev:** GitHub Actions · Docker · WSL2 · pnpm/npm

## Availability

Open to **backend/platform**, **full-stack web**, **Android**, and **AI-enabled product features**. Also happy to review architectures or untangle flaky identity/checkout flows.

## Contact

- Email: <a href="mailto:gimeshanirmal23@gmail.com">gimeshanirmal23@gmail.com</a>
- GitHub: <a href="https://github.com/gimesha-adikari" target="_blank" rel="noreferrer">gimesha-adikari</a>
- LinkedIn: <a href="https://linkedin.com/in/gimesha-nirmal-490245343" target="_blank" rel="noreferrer">Gimesha Nirmal</a>

================================================================================
FILE: site-content/case-studies/bank-app.mdx  (size: 1581 bytes)
================================================================================
# BankApp — Android Wallet & Payments

_Kotlin · Jetpack Compose · Retrofit · Coroutines · Material 3_

**TL;DR** — Built a modern wallet feature with card reloads, QR payments, and bill-pay. A clean Retrofit API layer and resilient UI reduced visible errors and clarified flows.

## Context & Role
Android module focused on wallet flows, designed to operate even when core banking features are not available.

## Problem
- Payment flows were overly coupled to banking onboarding.
- Intermittent network caused confusing failures and abandons.

## Approach & Architecture
- Feature-based packages with screens, viewmodels, and DI.
- Retrofit interfaces: clean DTOs, interceptors, consistent error envelopes.
- Compose UI: unified components (cards, inputs, buttons) and a11y labels.
- Robust retries and offline affordances where possible.

## Stack
Kotlin · Jetpack Compose · Retrofit/OkHttp · Hilt/DI · Material 3 · Kotlin Coroutines

## Challenges & Trade-offs
- Gateway sandbox limitations: emulated webhooks and idempotent retries in dev.
- UI complexity: extracted shared components to keep code tidy and reusable.

## Results
- Reduced user-visible errors in payment flows through defensive UI and API handling.
- Faster iteration thanks to a clean, testable Retrofit layer.

## Links
- [Projects](/projects)
- Backend Repo: <https://github.com/gimesha-adikari/BankingSystem>

## What’s next
- Native deep-linking for payment intents; richer receipt exports.
- Gateway production integration (secure storage & 3DS flows).

================================================================================
FILE: site-content/case-studies/banking-system.mdx  (size: 1984 bytes)
================================================================================
# Multi-Platform Platform (Fintech)

_Spring Boot · React · Android · FastAPI (AI KYC) · ONNX/OCR_

**TL;DR** — Designed and implemented a modular platform spanning backend, web, mobile, and an AI KYC microservice. Improved KYC false-reject rate and stabilized flows under real-world constraints.

## Context & Role
Solo/lead developer across multiple layers. Objectives: secure account flows, robust KYC, and a wallet experience that can operate independently of heavier banking flows.

## Problem
- Fragmented onboarding with brittle KYC caused drop-offs and manual reviews.
- Inconsistent data boundaries across services and clients slowed iteration.
- Accuracy/latency trade-offs in OCR, face match, and liveness checks.

## Approach & Architecture
- **Domain-oriented Spring Boot** modules (auth, accounts, analytics, kyc, wallet).
- **AI KYC microservice** (FastAPI): pluggable providers; threshold tuning and retries.
- **Android Wallet**: card reload, QR pay, bill-pay; Retrofit interfaces & DTOs.
- **React Web** dashboard with a11y-first forms/tables.
- **Observability & CI**: safe defaults, lint/type checks, reproducible envs.

## Stack
Spring Boot · Hibernate · MySQL · Kotlin/Android · TypeScript/React · FastAPI · ONNX (ArcFace, SCRFD, liveness) · OCR

## Challenges & Trade-offs
- Face-match sensitivity vs UX: tuned thresholds; re-tryable capture & guidance.
- OCR noise: preprocessing + field-level confidence gating.
- Network reliability: graceful fallbacks & cached responses on mobile.

## Results
- Reduced KYC false rejects vs baseline after threshold tuning and OCR cleanup.
- Fewer manual reviews; faster re-submission loops.
- Standalone wallet flows widened the onboarding funnel.

## Links
- [Projects](/projects)
- GitHub: <https://github.com/gimesha-adikari/BankingSystem>

## What’s next
- Deeper analytics for KYC decision explainability.
- Payment gateway webhooks with idempotency + retries.

================================================================================
FILE: site-content/case-studies/index.json  (size: 622 bytes)
================================================================================
[
  {
    "slug": "banking-system",
    "title": "Multi-Platform Platform (Fintech)",
    "description": "Spring Boot core, React admin, Android wallet, FastAPI verification—modular domains and resilient KYC."
  },
  {
    "slug": "bank-app",
    "title": "BankApp — Android Wallet & Payments",
    "description": "Compose wallet: cards, reload, QR payments, bill-pay. Clean Retrofit layer and resilient UX."
  },
  {
    "slug": "neurosim",
    "title": "NeuroSim — Brain Network Simulator",
    "description": "Canvas-based neural simulator with thresholds, cooldowns, and smooth playback."
  }
]

================================================================================
FILE: site-content/case-studies/neurosim.mdx  (size: 1394 bytes)
================================================================================
# NeuroSim — Brain Network Simulator

_Python · Flask · HTML5 Canvas · JS Front-end_

**TL;DR** — Built a browser-based neural simulator. Implemented a refractory period to prevent runaway firing and tuned rendering for smooth 60fps on mid-range devices.

## Context & Role
CS50 final project to demonstrate neuron dynamics with a clear visual model and interactive controls.

## Problem
- Naive recursion caused infinite firing loops and browser lock-ups.
- Unbounded rendering produced frame drops on modest hardware.

## Approach & Architecture
- Introduced **refractory cooldown** to each neuron after firing.
- Separated simulation tick from render loop (better use of rAF).
- Added export/import and simple APIs for persistence.

## Stack
Flask · HTML/JS · Canvas 2D · Lightweight async API calls

## Challenges & Trade-offs
- Balancing visual fidelity vs performance on lower-spec devices.
- Keeping the code approachable for learners while avoiding pitfalls.

## Results
- Smooth rendering on mid-range laptops; stable neuron firing behavior.
- Clearer demonstrations for lecture/demos; easier to reason about activity.

## Links
- [Projects](/projects)
- GitHub: <https://github.com/gimesha-adikari/neurosim>

## What’s next
- Preset networks (small-world/random) and parameter sliders.
- Export/import of neuron graphs; richer reports.

================================================================================
FILE: site-content/contact.mdx  (size: 783 bytes)
================================================================================
# Contact

For opportunities or questions, email me or connect on socials.

<div className="mt-6 space-y-4">
    <a
        href="mailto:gimeshanirmal23@gmail.com"
        className="card block px-4 py-3 hover:shadow-md transition-shadow"
    >
        gimeshanirmal23@gmail.com
    </a>

    <a
        href="https://github.com/gimesha-adikari"
        target="_blank"
        rel="noopener noreferrer"
        className="card block px-4 py-3 hover:shadow-md transition-shadow"
    >
        GitHub
    </a>

    <a
        href="https://linkedin.com/in/gimesha-nirmal-490245343"
        target="_blank"
        rel="noopener noreferrer"
        className="card block px-4 py-3 hover:shadow-md transition-shadow"
    >
        LinkedIn
    </a>
</div>

================================================================================
FILE: tsconfig.json  (size: 706 bytes)
================================================================================
{
  "compilerOptions": {
    "target": "ES2022",
    "lib": [
      "ES2022",
      "DOM",
      "DOM.Iterable"
    ],
    "allowJs": false,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "baseUrl": ".",
    "paths": {
      "@/*": [
        "*","./"
      ]
    },
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "include": [
    "**/*.mdx",
    "**/*.ts",
    "**/*.tsx",
    "next-env.d.ts",
    ".next/types/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}

================================================================================
PROJECT TREE
================================================================================
portfolio/
├── .git/
│   ├── branches/
│   ├── hooks/
│   │   ├── applypatch-msg.sample
│   │   ├── commit-msg.sample
│   │   ├── fsmonitor-watchman.sample
│   │   ├── post-update.sample
│   │   ├── pre-applypatch.sample
│   │   ├── pre-commit.sample
│   │   ├── pre-merge-commit.sample
│   │   ├── pre-push.sample
│   │   ├── pre-rebase.sample
│   │   ├── pre-receive.sample
│   │   ├── prepare-commit-msg.sample
│   │   ├── push-to-checkout.sample
│   │   ├── sendemail-validate.sample
│   │   └── update.sample
│   ├── info/
│   │   └── exclude
│   ├── logs/
│   │   ├── refs/
│   │   │   ├── heads/
│   │   │   │   └── main
│   │   │   └── remotes/
│   │   │       └── origin/
│   │   │           └── main
│   │   └── HEAD
│   ├── objects/
│   │   ├── 00/
│   │   │   └── e7e95872f976e4dc42a3519ef4cd8abdf0e799
│   │   ├── 02/
│   │   │   └── b10c39e27b179f98786922cf0c5d499ea98066
│   │   ├── 03/
│   │   │   └── 6a0369ea734ef6bdcbe251665cd0da8b85811d
│   │   ├── 04/
│   │   │   └── e7d272aa9450aeba9155afeec65a03f94a37a3
│   │   ├── 09/
│   │   │   └── 0b7ee00e78840db514ec3b5ce33318bb42ad40
│   │   ├── 0b/
│   │   │   └── 872d82d9c39f70bff219b3b4b60145430f8984
│   │   ├── 0d/
│   │   │   └── d011f0278fcd876801c889c9824c6d3dac559b
│   │   ├── 0e/
│   │   │   └── e2341051837df26b162c9286a337aa5eaae433
│   │   ├── 10/
│   │   │   └── 6ede202b5829a1f23400bd7fa20cf42a468bfd
│   │   ├── 13/
│   │   │   └── 0dec05475142b3dc3d7d93d8af14d59cfeb0ee
│   │   ├── 18/
│   │   │   └── d2aec2518caa43bbf062e4227bec8d9c1631c9
│   │   ├── 19/
│   │   │   └── 378f26c40f7ba542c39f949ac5fd7fd41e2bd3
│   │   ├── 1a/
│   │   │   └── dc56f6e06784dd9a3e957abc5d32e14043b23c
│   │   ├── 1c/
│   │   │   └── 2fda565b94d0f2b94cb65ba7cca866e7a25478
│   │   ├── 1d/
│   │   │   ├── 06648efed6a21b5f453087cfaee09dcc244669
│   │   │   └── 4ce5377b6f3d4b08756fda48da9495706ca206
│   │   ├── 21/
│   │   │   └── dde7ad5c03893c5b206b35e2abbda1ce2baea8
│   │   ├── 31/
│   │   │   └── 51339ce0af5de35a1f002ea772cf0fca71ebb9
│   │   ├── 33/
│   │   │   └── f73fdfaaa4fdc00987d622339ab187bee93e2b
│   │   ├── 35/
│   │   │   └── bdd07d3b656da538eeb09b3d32e0e86363c965
│   │   ├── 36/
│   │   │   └── 27923d85ca029d03beea31739d7b5fee1b9e2f
│   │   ├── 39/
│   │   │   └── 827a747092a9f0289172e19f0b1bc0909e49ea
│   │   ├── 3a/
│   │   │   └── 8a2a7f7291a1cf1948bb5b6b7b8ce45c403fb6
│   │   ├── 3d/
│   │   │   └── 38735b45c6b6814e117ed2781826a831b07f8b
│   │   ├── 44/
│   │   │   └── 70c4e338b8ccae5d3e113f70a798a01e9e6e6f
│   │   ├── 4a/
│   │   │   └── 60dde7c30893ac1a80ebde09f678ff7447cc7a
│   │   ├── 55/
│   │   │   └── 6d3c3fdcb334a01a8371f38aff4960fc41dc7d
│   │   ├── 5e/
│   │   │   └── 8313a55211ec84875e08a2a205879eb5242a30
│   │   ├── 6c/
│   │   │   └── 34ef09e30cfb3c2dc767e7a3a883fb7108647e
│   │   ├── 70/
│   │   │   ├── 59fe95adc36c465aed2b0e65920c34060c06a0
│   │   │   └── 6b84737930baabdfbb063901a5170e47d1d97f
│   │   ├── 77/
│   │   │   ├── 34804aa15f145e84fb0de9d0072c00f315b81d
│   │   │   └── 851f1e848e628cb254289a4a6f6a2ce79805f4
│   │   ├── 78/
│   │   │   └── 7b96cc7b099f326e97bddcd426a8b410fa32cd
│   │   ├── 79/
│   │   │   └── 2442bf944938baf4915913d89d38aafff8da28
│   │   ├── 7a/
│   │   │   └── 6af9e6015bf665a4d62abeba0e8dec721cc7e5
│   │   ├── 7d/
│   │   │   ├── 80bc7f0a1899998d8704250457b449c6d2a5a4
│   │   │   └── eff3421061185bde3e11c740bd0d322e23a36a
│   │   ├── 80/
│   │   │   └── f708f1c13c3a21a91272956cce54bcb16f8e0c
│   │   ├── 81/
│   │   │   └── 73d0c5f041fc36f1e00c608cfb6efbde31e236
│   │   ├── 83/
│   │   │   └── 0fb594ca2970a827555c28a253b097367e08d8
│   │   ├── 84/
│   │   │   ├── 29b916ee0aee41a0654c5515b55b05ca09be2a
│   │   │   ├── 99a2322a163c5a49ec2d04f77fff57e7f58006
│   │   │   └── eb47f6b910e3e5f633704f620ed978986028e9
│   │   ├── 88/
│   │   │   └── b51853a832c49ec0cdd9d66b993fcc022df263
│   │   ├── 89/
│   │   │   └── 9029f99b16696c761fb2127a0880783e7d9442
│   │   ├── 8d/
│   │   │   ├── 9273e6b64ce29f74576e28a42097fea9b70a47
│   │   │   └── aa62a7e321d828f461f1a9fbc2ed8054cdd93d
│   │   ├── 90/
│   │   │   └── 3f5b06efc0ac1ebf4c154e7f990af92938443f
│   │   ├── 95/
│   │   │   └── 74ea7ae54e2aca498db7da25ec9b70bf54603f
│   │   ├── 96/
│   │   │   └── 61ac713428efbad557d3ba3a62216b5bb7d226
│   │   ├── 9c/
│   │   │   └── 3893c876742b324f3bbfad7f4affe793d59fd1
│   │   ├── 9d/
│   │   │   └── 594868ed54d6d4d1390b0268484888326607b1
│   │   ├── 9f/
│   │   │   └── 54b1fb125e67eadda0f50771ebd8c351466782
│   │   ├── a1/
│   │   │   └── 180be3afd06e2db8cd0ebdd0aede7e53e9cf9e
│   │   ├── a3/
│   │   │   └── 19506a92512f46fe09f9de3feb9b22a013ed35
│   │   ├── a6/
│   │   │   └── 53323d8e1b03ad736c7671c475860a45132e01
│   │   ├── a8/
│   │   │   └── 5e1d847cb7e56f69ab3d5cba91c1c7dc2f0082
│   │   ├── ab/
│   │   │   └── e72ac1245dcdc3bd07e1ddf49006a7761cad19
│   │   ├── bb/
│   │   │   └── b8d66722829e22035c0b4ec8cef9ce9ae2ec7a
│   │   ├── c0/
│   │   │   └── 4dc2e58a4943728bba095e93b51b9234f3d786
│   │   ├── c5/
│   │   │   └── 3e7012704115fe64ebda3aaf440ec932d7e31f
│   │   ├── c6/
│   │   │   ├── 69f850a1770c48f8bcc9abbfebd4cf30192546
│   │   │   └── cad1089b321bcdd9a9155793df5053a717cff6
│   │   ├── c7/
│   │   │   └── 21e508dbcf80da77a9208824c938afcdc4b2ae
│   │   ├── ca/
│   │   │   └── c823207c85edba523fedfda959ac02963622e8
│   │   ├── cb/
│   │   │   └── 150fb6867647928387c15c27b25da33a4d8929
│   │   ├── ce/
│   │   │   └── ffd1266c300e7493172e7132e13618786b0a83
│   │   ├── d0/
│   │   │   ├── 56d9a49628ba6485445461572e539a35414b67
│   │   │   └── 8af704e7655de61c16e41cbc302daa64f15670
│   │   ├── d2/
│   │   │   └── 3208fbb7168875464dd7aaff4169c37be615ea
│   │   ├── d3/
│   │   │   └── a48b931d7f8c8ec7daff24f1bbd95f1d68f252
│   │   ├── d4/
│   │   │   └── dcb74834ea9254b6e4e36e37dc8eeedca61b0a
│   │   ├── de/
│   │   │   └── 345fc24ece23474cb1437e72a0310e141a9646
│   │   ├── e0/
│   │   │   ├── e01f92fdb1c81a19eaa346e9b6ff3cf4885883
│   │   │   └── e7021d2a5978255b4c3b3064c4f367c4834273
│   │   ├── e3/
│   │   │   └── c35f4e49604952dc9755868c533a2bd735242c
│   │   ├── e6/
│   │   │   ├── 3a912a230cf07ceada64e96e7d78cc2ce04dec
│   │   │   └── 4a4bd53366a6e3f5703ff575e20ae9a8ceb761
│   │   ├── e9/
│   │   │   └── b5c323842b0c2327250e5ab79788175033901f
│   │   ├── f2/
│   │   │   ├── 08f22304d5dd48d3ae320ba608420447989743
│   │   │   └── 5d7692c10d2f55f9acdf517c6971f67709fe94
│   │   ├── f6/
│   │   │   └── 58d01b02bbd50105c4fc3452f77213b148fba7
│   │   ├── fa/
│   │   │   └── c5c7e7d01773ea9ea628c60fd22b3eb53c5aa0
│   │   ├── fb/
│   │   │   └── 8addb68c337f190625ed8fa213a6bb470ad565
│   │   ├── fc/
│   │   │   └── 46197a08f45b210e1b7704a7b1edfb4a135c0b
│   │   ├── fe/
│   │   │   ├── cc5e8dc496e2490fd0582556fee496bfbe4fec
│   │   │   └── ee0f6ebcc4aed978efa17698aaa8669461d5a3
│   │   ├── info/
│   │   └── pack/
│   ├── refs/
│   │   ├── heads/
│   │   │   └── main
│   │   ├── remotes/
│   │   │   └── origin/
│   │   │       └── main
│   │   └── tags/
│   ├── COMMIT_EDITMSG
│   ├── config
│   ├── description
│   ├── HEAD
│   └── index
├── .idea/
│   ├── dictionaries/
│   │   └── project.xml
│   ├── inspectionProfiles/
│   │   └── Project_Default.xml
│   ├── .gitignore
│   ├── jsLibraryMappings.xml
│   ├── material_theme_project_new.xml
│   ├── modules.xml
│   ├── portfolio.iml
│   ├── vcs.xml
│   └── workspace.xml
├── app/
│   ├── about/
│   │   └── page.tsx
│   ├── case-studies/
│   │   ├── [slug]/
│   │   │   └── page.tsx
│   │   └── page.tsx
│   ├── contact/
│   │   └── page.tsx
│   ├── og/
│   │   └── route.tsx
│   ├── projects/
│   │   ├── [slug]/
│   │   │   └── page.tsx
│   │   ├── loading.tsx
│   │   └── page.tsx
│   ├── globals.css
│   ├── layout.tsx
│   ├── not-found.tsx
│   ├── page.tsx
│   ├── robots.ts
│   └── sitemap.ts
├── components/
│   ├── ArticleShell.tsx
│   ├── Footer.tsx
│   ├── Header.tsx
│   ├── MDX.tsx
│   ├── ReadingProgress.tsx
│   ├── RepoCard.tsx
│   ├── ThemeToggle.tsx
│   └── TOC.tsx
├── data/
│   └── pinned.json
├── lib/
│   ├── content.ts
│   ├── github.ts
│   ├── pins.ts
│   └── toc.ts
├── public/
│   ├── case-studies/
│   │   └── bank-app/
│   │       ├── BankApp1.jpg
│   │       ├── BankApp2.jpg
│   │       ├── BankApp3.jpg
│   │       ├── BankApp4.jpg
│   │       └── BankApp5.jpg
│   ├── images/
│   │   └── projects/
│   │       ├── banking-system/
│   │       │   └── cover.svg
│   │       ├── neurosim/
│   │       │   └── cover.svg
│   │       └── survival-game/
│   │           └── cover.svg
│   ├── favicon.svg
│   ├── resume.pdf
│   └── robots.txt
├── site-content/
│   ├── case-studies/
│   │   ├── bank-app.mdx
│   │   ├── banking-system.mdx
│   │   ├── index.json
│   │   └── neurosim.mdx
│   ├── about.mdx
│   └── contact.mdx
├── .env.local
├── .gitignore
├── collect_text_and_tree.py
├── cover.png
├── mdx-components.tsx
├── next-env.d.ts
├── next.config.mjs
├── package-lock.json
├── package.json
├── postcss.config.mjs
├── project.txt
├── README.md
└── tsconfig.json

================================================================================
SUMMARY
================================================================================
Text files written : 100
Non-text/omitted   : 78
Total files seen   : 178
